//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedOptionsInitParameters) DeepCopyInto(out *AdvancedOptionsInitParameters) {
	*out = *in
	if in.IsReadFromHead != nil {
		in, out := &in.IsReadFromHead, &out.IsReadFromHead
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedOptionsInitParameters.
func (in *AdvancedOptionsInitParameters) DeepCopy() *AdvancedOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedOptionsObservation) DeepCopyInto(out *AdvancedOptionsObservation) {
	*out = *in
	if in.IsReadFromHead != nil {
		in, out := &in.IsReadFromHead, &out.IsReadFromHead
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedOptionsObservation.
func (in *AdvancedOptionsObservation) DeepCopy() *AdvancedOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(AdvancedOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AdvancedOptionsParameters) DeepCopyInto(out *AdvancedOptionsParameters) {
	*out = *in
	if in.IsReadFromHead != nil {
		in, out := &in.IsReadFromHead, &out.IsReadFromHead
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AdvancedOptionsParameters.
func (in *AdvancedOptionsParameters) DeepCopy() *AdvancedOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(AdvancedOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowListInitParameters) DeepCopyInto(out *AllowListInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowListInitParameters.
func (in *AllowListInitParameters) DeepCopy() *AllowListInitParameters {
	if in == nil {
		return nil
	}
	out := new(AllowListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowListObservation) DeepCopyInto(out *AllowListObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowListObservation.
func (in *AllowListObservation) DeepCopy() *AllowListObservation {
	if in == nil {
		return nil
	}
	out := new(AllowListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AllowListParameters) DeepCopyInto(out *AllowListParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AllowListParameters.
func (in *AllowListParameters) DeepCopy() *AllowListParameters {
	if in == nil {
		return nil
	}
	out := new(AllowListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationConfigurationsInitParameters) DeepCopyInto(out *ApplicationConfigurationsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]DestinationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]ApplicationConfigurationsSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]SourcesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnifiedAgentConfigurationFilter != nil {
		in, out := &in.UnifiedAgentConfigurationFilter, &out.UnifiedAgentConfigurationFilter
		*out = make([]UnifiedAgentConfigurationFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationConfigurationsInitParameters.
func (in *ApplicationConfigurationsInitParameters) DeepCopy() *ApplicationConfigurationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationConfigurationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationConfigurationsObservation) DeepCopyInto(out *ApplicationConfigurationsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]DestinationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]ApplicationConfigurationsSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]SourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnifiedAgentConfigurationFilter != nil {
		in, out := &in.UnifiedAgentConfigurationFilter, &out.UnifiedAgentConfigurationFilter
		*out = make([]UnifiedAgentConfigurationFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationConfigurationsObservation.
func (in *ApplicationConfigurationsObservation) DeepCopy() *ApplicationConfigurationsObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationConfigurationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationConfigurationsParameters) DeepCopyInto(out *ApplicationConfigurationsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]DestinationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]ApplicationConfigurationsSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]SourcesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnifiedAgentConfigurationFilter != nil {
		in, out := &in.UnifiedAgentConfigurationFilter, &out.UnifiedAgentConfigurationFilter
		*out = make([]UnifiedAgentConfigurationFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationConfigurationsParameters.
func (in *ApplicationConfigurationsParameters) DeepCopy() *ApplicationConfigurationsParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationConfigurationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationConfigurationsSourceInitParameters) DeepCopyInto(out *ApplicationConfigurationsSourceInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ScrapeTargets != nil {
		in, out := &in.ScrapeTargets, &out.ScrapeTargets
		*out = make([]ScrapeTargetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationConfigurationsSourceInitParameters.
func (in *ApplicationConfigurationsSourceInitParameters) DeepCopy() *ApplicationConfigurationsSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationConfigurationsSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationConfigurationsSourceObservation) DeepCopyInto(out *ApplicationConfigurationsSourceObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ScrapeTargets != nil {
		in, out := &in.ScrapeTargets, &out.ScrapeTargets
		*out = make([]ScrapeTargetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationConfigurationsSourceObservation.
func (in *ApplicationConfigurationsSourceObservation) DeepCopy() *ApplicationConfigurationsSourceObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationConfigurationsSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationConfigurationsSourceParameters) DeepCopyInto(out *ApplicationConfigurationsSourceParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ScrapeTargets != nil {
		in, out := &in.ScrapeTargets, &out.ScrapeTargets
		*out = make([]ScrapeTargetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationConfigurationsSourceParameters.
func (in *ApplicationConfigurationsSourceParameters) DeepCopy() *ApplicationConfigurationsSourceParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationConfigurationsSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationInitParameters) DeepCopyInto(out *ConfigurationInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationInitParameters.
func (in *ConfigurationInitParameters) DeepCopy() *ConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationObservation) DeepCopyInto(out *ConfigurationObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationObservation.
func (in *ConfigurationObservation) DeepCopy() *ConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationParameters) DeepCopyInto(out *ConfigurationParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]SourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationParameters.
func (in *ConfigurationParameters) DeepCopy() *ConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomSectionsInitParameters) DeepCopyInto(out *CustomSectionsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomSectionsInitParameters.
func (in *CustomSectionsInitParameters) DeepCopy() *CustomSectionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CustomSectionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomSectionsObservation) DeepCopyInto(out *CustomSectionsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomSectionsObservation.
func (in *CustomSectionsObservation) DeepCopy() *CustomSectionsObservation {
	if in == nil {
		return nil
	}
	out := new(CustomSectionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CustomSectionsParameters) DeepCopyInto(out *CustomSectionsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CustomSectionsParameters.
func (in *CustomSectionsParameters) DeepCopy() *CustomSectionsParameters {
	if in == nil {
		return nil
	}
	out := new(CustomSectionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenyListInitParameters) DeepCopyInto(out *DenyListInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenyListInitParameters.
func (in *DenyListInitParameters) DeepCopy() *DenyListInitParameters {
	if in == nil {
		return nil
	}
	out := new(DenyListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenyListObservation) DeepCopyInto(out *DenyListObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenyListObservation.
func (in *DenyListObservation) DeepCopy() *DenyListObservation {
	if in == nil {
		return nil
	}
	out := new(DenyListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DenyListParameters) DeepCopyInto(out *DenyListParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DenyListParameters.
func (in *DenyListParameters) DeepCopy() *DenyListParameters {
	if in == nil {
		return nil
	}
	out := new(DenyListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationInitParameters) DeepCopyInto(out *DestinationInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.MetricsNamespace != nil {
		in, out := &in.MetricsNamespace, &out.MetricsNamespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationInitParameters.
func (in *DestinationInitParameters) DeepCopy() *DestinationInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationObservation) DeepCopyInto(out *DestinationObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.MetricsNamespace != nil {
		in, out := &in.MetricsNamespace, &out.MetricsNamespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationObservation.
func (in *DestinationObservation) DeepCopy() *DestinationObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationParameters) DeepCopyInto(out *DestinationParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.MetricsNamespace != nil {
		in, out := &in.MetricsNamespace, &out.MetricsNamespace
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationParameters.
func (in *DestinationParameters) DeepCopy() *DestinationParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupAssociationInitParameters) DeepCopyInto(out *GroupAssociationInitParameters) {
	*out = *in
	if in.GroupList != nil {
		in, out := &in.GroupList, &out.GroupList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupAssociationInitParameters.
func (in *GroupAssociationInitParameters) DeepCopy() *GroupAssociationInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupAssociationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupAssociationObservation) DeepCopyInto(out *GroupAssociationObservation) {
	*out = *in
	if in.GroupList != nil {
		in, out := &in.GroupList, &out.GroupList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupAssociationObservation.
func (in *GroupAssociationObservation) DeepCopy() *GroupAssociationObservation {
	if in == nil {
		return nil
	}
	out := new(GroupAssociationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupAssociationParameters) DeepCopyInto(out *GroupAssociationParameters) {
	*out = *in
	if in.GroupList != nil {
		in, out := &in.GroupList, &out.GroupList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupAssociationParameters.
func (in *GroupAssociationParameters) DeepCopy() *GroupAssociationParameters {
	if in == nil {
		return nil
	}
	out := new(GroupAssociationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Log) DeepCopyInto(out *Log) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Log.
func (in *Log) DeepCopy() *Log {
	if in == nil {
		return nil
	}
	out := new(Log)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Log) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogGroup) DeepCopyInto(out *LogGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogGroup.
func (in *LogGroup) DeepCopy() *LogGroup {
	if in == nil {
		return nil
	}
	out := new(LogGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogGroupInitParameters) DeepCopyInto(out *LogGroupInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogGroupInitParameters.
func (in *LogGroupInitParameters) DeepCopy() *LogGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogGroupList) DeepCopyInto(out *LogGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LogGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogGroupList.
func (in *LogGroupList) DeepCopy() *LogGroupList {
	if in == nil {
		return nil
	}
	out := new(LogGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogGroupObservation) DeepCopyInto(out *LogGroupObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeLastModified != nil {
		in, out := &in.TimeLastModified, &out.TimeLastModified
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogGroupObservation.
func (in *LogGroupObservation) DeepCopy() *LogGroupObservation {
	if in == nil {
		return nil
	}
	out := new(LogGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogGroupParameters) DeepCopyInto(out *LogGroupParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogGroupParameters.
func (in *LogGroupParameters) DeepCopy() *LogGroupParameters {
	if in == nil {
		return nil
	}
	out := new(LogGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogGroupSpec) DeepCopyInto(out *LogGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogGroupSpec.
func (in *LogGroupSpec) DeepCopy() *LogGroupSpec {
	if in == nil {
		return nil
	}
	out := new(LogGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogGroupStatus) DeepCopyInto(out *LogGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogGroupStatus.
func (in *LogGroupStatus) DeepCopy() *LogGroupStatus {
	if in == nil {
		return nil
	}
	out := new(LogGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogInitParameters) DeepCopyInto(out *LogInitParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupID != nil {
		in, out := &in.LogGroupID, &out.LogGroupID
		*out = new(string)
		**out = **in
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
	if in.RetentionDuration != nil {
		in, out := &in.RetentionDuration, &out.RetentionDuration
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogInitParameters.
func (in *LogInitParameters) DeepCopy() *LogInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogList) DeepCopyInto(out *LogList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Log, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogList.
func (in *LogList) DeepCopy() *LogList {
	if in == nil {
		return nil
	}
	out := new(LogList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogObservation) DeepCopyInto(out *LogObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupID != nil {
		in, out := &in.LogGroupID, &out.LogGroupID
		*out = new(string)
		**out = **in
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
	if in.RetentionDuration != nil {
		in, out := &in.RetentionDuration, &out.RetentionDuration
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TenancyID != nil {
		in, out := &in.TenancyID, &out.TenancyID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeLastModified != nil {
		in, out := &in.TimeLastModified, &out.TimeLastModified
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogObservation.
func (in *LogObservation) DeepCopy() *LogObservation {
	if in == nil {
		return nil
	}
	out := new(LogObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogParameters) DeepCopyInto(out *LogParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LogGroupID != nil {
		in, out := &in.LogGroupID, &out.LogGroupID
		*out = new(string)
		**out = **in
	}
	if in.LogType != nil {
		in, out := &in.LogType, &out.LogType
		*out = new(string)
		**out = **in
	}
	if in.RetentionDuration != nil {
		in, out := &in.RetentionDuration, &out.RetentionDuration
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogParameters.
func (in *LogParameters) DeepCopy() *LogParameters {
	if in == nil {
		return nil
	}
	out := new(LogParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSavedSearch) DeepCopyInto(out *LogSavedSearch) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSavedSearch.
func (in *LogSavedSearch) DeepCopy() *LogSavedSearch {
	if in == nil {
		return nil
	}
	out := new(LogSavedSearch)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogSavedSearch) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSavedSearchInitParameters) DeepCopyInto(out *LogSavedSearchInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSavedSearchInitParameters.
func (in *LogSavedSearchInitParameters) DeepCopy() *LogSavedSearchInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogSavedSearchInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSavedSearchList) DeepCopyInto(out *LogSavedSearchList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LogSavedSearch, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSavedSearchList.
func (in *LogSavedSearchList) DeepCopy() *LogSavedSearchList {
	if in == nil {
		return nil
	}
	out := new(LogSavedSearchList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogSavedSearchList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSavedSearchObservation) DeepCopyInto(out *LogSavedSearchObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeLastModified != nil {
		in, out := &in.TimeLastModified, &out.TimeLastModified
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSavedSearchObservation.
func (in *LogSavedSearchObservation) DeepCopy() *LogSavedSearchObservation {
	if in == nil {
		return nil
	}
	out := new(LogSavedSearchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSavedSearchParameters) DeepCopyInto(out *LogSavedSearchParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Query != nil {
		in, out := &in.Query, &out.Query
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSavedSearchParameters.
func (in *LogSavedSearchParameters) DeepCopy() *LogSavedSearchParameters {
	if in == nil {
		return nil
	}
	out := new(LogSavedSearchParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSavedSearchSpec) DeepCopyInto(out *LogSavedSearchSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSavedSearchSpec.
func (in *LogSavedSearchSpec) DeepCopy() *LogSavedSearchSpec {
	if in == nil {
		return nil
	}
	out := new(LogSavedSearchSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSavedSearchStatus) DeepCopyInto(out *LogSavedSearchStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSavedSearchStatus.
func (in *LogSavedSearchStatus) DeepCopy() *LogSavedSearchStatus {
	if in == nil {
		return nil
	}
	out := new(LogSavedSearchStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogSpec) DeepCopyInto(out *LogSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogSpec.
func (in *LogSpec) DeepCopy() *LogSpec {
	if in == nil {
		return nil
	}
	out := new(LogSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogStatus) DeepCopyInto(out *LogStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogStatus.
func (in *LogStatus) DeepCopy() *LogStatus {
	if in == nil {
		return nil
	}
	out := new(LogStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NestedParserInitParameters) DeepCopyInto(out *NestedParserInitParameters) {
	*out = *in
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NestedParserInitParameters.
func (in *NestedParserInitParameters) DeepCopy() *NestedParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(NestedParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NestedParserObservation) DeepCopyInto(out *NestedParserObservation) {
	*out = *in
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NestedParserObservation.
func (in *NestedParserObservation) DeepCopy() *NestedParserObservation {
	if in == nil {
		return nil
	}
	out := new(NestedParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NestedParserParameters) DeepCopyInto(out *NestedParserParameters) {
	*out = *in
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NestedParserParameters.
func (in *NestedParserParameters) DeepCopy() *NestedParserParameters {
	if in == nil {
		return nil
	}
	out := new(NestedParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationalMetricsConfigurationDestinationInitParameters) DeepCopyInto(out *OperationalMetricsConfigurationDestinationInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationalMetricsConfigurationDestinationInitParameters.
func (in *OperationalMetricsConfigurationDestinationInitParameters) DeepCopy() *OperationalMetricsConfigurationDestinationInitParameters {
	if in == nil {
		return nil
	}
	out := new(OperationalMetricsConfigurationDestinationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationalMetricsConfigurationDestinationObservation) DeepCopyInto(out *OperationalMetricsConfigurationDestinationObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationalMetricsConfigurationDestinationObservation.
func (in *OperationalMetricsConfigurationDestinationObservation) DeepCopy() *OperationalMetricsConfigurationDestinationObservation {
	if in == nil {
		return nil
	}
	out := new(OperationalMetricsConfigurationDestinationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationalMetricsConfigurationDestinationParameters) DeepCopyInto(out *OperationalMetricsConfigurationDestinationParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationalMetricsConfigurationDestinationParameters.
func (in *OperationalMetricsConfigurationDestinationParameters) DeepCopy() *OperationalMetricsConfigurationDestinationParameters {
	if in == nil {
		return nil
	}
	out := new(OperationalMetricsConfigurationDestinationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationalMetricsConfigurationInitParameters) DeepCopyInto(out *OperationalMetricsConfigurationInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]OperationalMetricsConfigurationDestinationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]OperationalMetricsConfigurationSourceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationalMetricsConfigurationInitParameters.
func (in *OperationalMetricsConfigurationInitParameters) DeepCopy() *OperationalMetricsConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(OperationalMetricsConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationalMetricsConfigurationObservation) DeepCopyInto(out *OperationalMetricsConfigurationObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]OperationalMetricsConfigurationDestinationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]OperationalMetricsConfigurationSourceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationalMetricsConfigurationObservation.
func (in *OperationalMetricsConfigurationObservation) DeepCopy() *OperationalMetricsConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(OperationalMetricsConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationalMetricsConfigurationParameters) DeepCopyInto(out *OperationalMetricsConfigurationParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]OperationalMetricsConfigurationDestinationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = make([]OperationalMetricsConfigurationSourceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationalMetricsConfigurationParameters.
func (in *OperationalMetricsConfigurationParameters) DeepCopy() *OperationalMetricsConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(OperationalMetricsConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationalMetricsConfigurationSourceInitParameters) DeepCopyInto(out *OperationalMetricsConfigurationSourceInitParameters) {
	*out = *in
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RecordInput != nil {
		in, out := &in.RecordInput, &out.RecordInput
		*out = make([]SourceRecordInputInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationalMetricsConfigurationSourceInitParameters.
func (in *OperationalMetricsConfigurationSourceInitParameters) DeepCopy() *OperationalMetricsConfigurationSourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(OperationalMetricsConfigurationSourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationalMetricsConfigurationSourceObservation) DeepCopyInto(out *OperationalMetricsConfigurationSourceObservation) {
	*out = *in
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RecordInput != nil {
		in, out := &in.RecordInput, &out.RecordInput
		*out = make([]SourceRecordInputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationalMetricsConfigurationSourceObservation.
func (in *OperationalMetricsConfigurationSourceObservation) DeepCopy() *OperationalMetricsConfigurationSourceObservation {
	if in == nil {
		return nil
	}
	out := new(OperationalMetricsConfigurationSourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OperationalMetricsConfigurationSourceParameters) DeepCopyInto(out *OperationalMetricsConfigurationSourceParameters) {
	*out = *in
	if in.Metrics != nil {
		in, out := &in.Metrics, &out.Metrics
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RecordInput != nil {
		in, out := &in.RecordInput, &out.RecordInput
		*out = make([]SourceRecordInputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OperationalMetricsConfigurationSourceParameters.
func (in *OperationalMetricsConfigurationSourceParameters) DeepCopy() *OperationalMetricsConfigurationSourceParameters {
	if in == nil {
		return nil
	}
	out := new(OperationalMetricsConfigurationSourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserInitParameters) DeepCopyInto(out *ParserInitParameters) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FormatFirstline != nil {
		in, out := &in.FormatFirstline, &out.FormatFirstline
		*out = new(string)
		**out = **in
	}
	if in.GrokFailureKey != nil {
		in, out := &in.GrokFailureKey, &out.GrokFailureKey
		*out = new(string)
		**out = **in
	}
	if in.GrokNameKey != nil {
		in, out := &in.GrokNameKey, &out.GrokNameKey
		*out = new(string)
		**out = **in
	}
	if in.IsEstimateCurrentEvent != nil {
		in, out := &in.IsEstimateCurrentEvent, &out.IsEstimateCurrentEvent
		*out = new(bool)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.IsMergeCriFields != nil {
		in, out := &in.IsMergeCriFields, &out.IsMergeCriFields
		*out = new(bool)
		**out = **in
	}
	if in.IsNullEmptyString != nil {
		in, out := &in.IsNullEmptyString, &out.IsNullEmptyString
		*out = new(bool)
		**out = **in
	}
	if in.IsSupportColonlessIdent != nil {
		in, out := &in.IsSupportColonlessIdent, &out.IsSupportColonlessIdent
		*out = new(bool)
		**out = **in
	}
	if in.IsWithPriority != nil {
		in, out := &in.IsWithPriority, &out.IsWithPriority
		*out = new(bool)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MessageFormat != nil {
		in, out := &in.MessageFormat, &out.MessageFormat
		*out = new(string)
		**out = **in
	}
	if in.MessageKey != nil {
		in, out := &in.MessageKey, &out.MessageKey
		*out = new(string)
		**out = **in
	}
	if in.MultiLineStartRegexp != nil {
		in, out := &in.MultiLineStartRegexp, &out.MultiLineStartRegexp
		*out = new(string)
		**out = **in
	}
	if in.NestedParser != nil {
		in, out := &in.NestedParser, &out.NestedParser
		*out = make([]NestedParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullValuePattern != nil {
		in, out := &in.NullValuePattern, &out.NullValuePattern
		*out = new(string)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.ParserType != nil {
		in, out := &in.ParserType, &out.ParserType
		*out = new(string)
		**out = **in
	}
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]PatternsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecordInput != nil {
		in, out := &in.RecordInput, &out.RecordInput
		*out = make([]RecordInputInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rfc5424TimeFormat != nil {
		in, out := &in.Rfc5424TimeFormat, &out.Rfc5424TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.SyslogParserType != nil {
		in, out := &in.SyslogParserType, &out.SyslogParserType
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
	if in.TimeoutInMilliseconds != nil {
		in, out := &in.TimeoutInMilliseconds, &out.TimeoutInMilliseconds
		*out = new(float64)
		**out = **in
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserInitParameters.
func (in *ParserInitParameters) DeepCopy() *ParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserNestedParserInitParameters) DeepCopyInto(out *ParserNestedParserInitParameters) {
	*out = *in
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserNestedParserInitParameters.
func (in *ParserNestedParserInitParameters) DeepCopy() *ParserNestedParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParserNestedParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserNestedParserObservation) DeepCopyInto(out *ParserNestedParserObservation) {
	*out = *in
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserNestedParserObservation.
func (in *ParserNestedParserObservation) DeepCopy() *ParserNestedParserObservation {
	if in == nil {
		return nil
	}
	out := new(ParserNestedParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserNestedParserParameters) DeepCopyInto(out *ParserNestedParserParameters) {
	*out = *in
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserNestedParserParameters.
func (in *ParserNestedParserParameters) DeepCopy() *ParserNestedParserParameters {
	if in == nil {
		return nil
	}
	out := new(ParserNestedParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserObservation) DeepCopyInto(out *ParserObservation) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FormatFirstline != nil {
		in, out := &in.FormatFirstline, &out.FormatFirstline
		*out = new(string)
		**out = **in
	}
	if in.GrokFailureKey != nil {
		in, out := &in.GrokFailureKey, &out.GrokFailureKey
		*out = new(string)
		**out = **in
	}
	if in.GrokNameKey != nil {
		in, out := &in.GrokNameKey, &out.GrokNameKey
		*out = new(string)
		**out = **in
	}
	if in.IsEstimateCurrentEvent != nil {
		in, out := &in.IsEstimateCurrentEvent, &out.IsEstimateCurrentEvent
		*out = new(bool)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.IsMergeCriFields != nil {
		in, out := &in.IsMergeCriFields, &out.IsMergeCriFields
		*out = new(bool)
		**out = **in
	}
	if in.IsNullEmptyString != nil {
		in, out := &in.IsNullEmptyString, &out.IsNullEmptyString
		*out = new(bool)
		**out = **in
	}
	if in.IsSupportColonlessIdent != nil {
		in, out := &in.IsSupportColonlessIdent, &out.IsSupportColonlessIdent
		*out = new(bool)
		**out = **in
	}
	if in.IsWithPriority != nil {
		in, out := &in.IsWithPriority, &out.IsWithPriority
		*out = new(bool)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MessageFormat != nil {
		in, out := &in.MessageFormat, &out.MessageFormat
		*out = new(string)
		**out = **in
	}
	if in.MessageKey != nil {
		in, out := &in.MessageKey, &out.MessageKey
		*out = new(string)
		**out = **in
	}
	if in.MultiLineStartRegexp != nil {
		in, out := &in.MultiLineStartRegexp, &out.MultiLineStartRegexp
		*out = new(string)
		**out = **in
	}
	if in.NestedParser != nil {
		in, out := &in.NestedParser, &out.NestedParser
		*out = make([]NestedParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullValuePattern != nil {
		in, out := &in.NullValuePattern, &out.NullValuePattern
		*out = new(string)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.ParserType != nil {
		in, out := &in.ParserType, &out.ParserType
		*out = new(string)
		**out = **in
	}
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]PatternsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecordInput != nil {
		in, out := &in.RecordInput, &out.RecordInput
		*out = make([]RecordInputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rfc5424TimeFormat != nil {
		in, out := &in.Rfc5424TimeFormat, &out.Rfc5424TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.SyslogParserType != nil {
		in, out := &in.SyslogParserType, &out.SyslogParserType
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
	if in.TimeoutInMilliseconds != nil {
		in, out := &in.TimeoutInMilliseconds, &out.TimeoutInMilliseconds
		*out = new(float64)
		**out = **in
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserObservation.
func (in *ParserObservation) DeepCopy() *ParserObservation {
	if in == nil {
		return nil
	}
	out := new(ParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserParameters) DeepCopyInto(out *ParserParameters) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FormatFirstline != nil {
		in, out := &in.FormatFirstline, &out.FormatFirstline
		*out = new(string)
		**out = **in
	}
	if in.GrokFailureKey != nil {
		in, out := &in.GrokFailureKey, &out.GrokFailureKey
		*out = new(string)
		**out = **in
	}
	if in.GrokNameKey != nil {
		in, out := &in.GrokNameKey, &out.GrokNameKey
		*out = new(string)
		**out = **in
	}
	if in.IsEstimateCurrentEvent != nil {
		in, out := &in.IsEstimateCurrentEvent, &out.IsEstimateCurrentEvent
		*out = new(bool)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.IsMergeCriFields != nil {
		in, out := &in.IsMergeCriFields, &out.IsMergeCriFields
		*out = new(bool)
		**out = **in
	}
	if in.IsNullEmptyString != nil {
		in, out := &in.IsNullEmptyString, &out.IsNullEmptyString
		*out = new(bool)
		**out = **in
	}
	if in.IsSupportColonlessIdent != nil {
		in, out := &in.IsSupportColonlessIdent, &out.IsSupportColonlessIdent
		*out = new(bool)
		**out = **in
	}
	if in.IsWithPriority != nil {
		in, out := &in.IsWithPriority, &out.IsWithPriority
		*out = new(bool)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MessageFormat != nil {
		in, out := &in.MessageFormat, &out.MessageFormat
		*out = new(string)
		**out = **in
	}
	if in.MessageKey != nil {
		in, out := &in.MessageKey, &out.MessageKey
		*out = new(string)
		**out = **in
	}
	if in.MultiLineStartRegexp != nil {
		in, out := &in.MultiLineStartRegexp, &out.MultiLineStartRegexp
		*out = new(string)
		**out = **in
	}
	if in.NestedParser != nil {
		in, out := &in.NestedParser, &out.NestedParser
		*out = make([]NestedParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullValuePattern != nil {
		in, out := &in.NullValuePattern, &out.NullValuePattern
		*out = new(string)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.ParserType != nil {
		in, out := &in.ParserType, &out.ParserType
		*out = new(string)
		**out = **in
	}
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]PatternsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecordInput != nil {
		in, out := &in.RecordInput, &out.RecordInput
		*out = make([]RecordInputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rfc5424TimeFormat != nil {
		in, out := &in.Rfc5424TimeFormat, &out.Rfc5424TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.SyslogParserType != nil {
		in, out := &in.SyslogParserType, &out.SyslogParserType
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
	if in.TimeoutInMilliseconds != nil {
		in, out := &in.TimeoutInMilliseconds, &out.TimeoutInMilliseconds
		*out = new(float64)
		**out = **in
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserParameters.
func (in *ParserParameters) DeepCopy() *ParserParameters {
	if in == nil {
		return nil
	}
	out := new(ParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserPatternsInitParameters) DeepCopyInto(out *ParserPatternsInitParameters) {
	*out = *in
	if in.FieldTimeFormat != nil {
		in, out := &in.FieldTimeFormat, &out.FieldTimeFormat
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeZone != nil {
		in, out := &in.FieldTimeZone, &out.FieldTimeZone
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserPatternsInitParameters.
func (in *ParserPatternsInitParameters) DeepCopy() *ParserPatternsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParserPatternsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserPatternsObservation) DeepCopyInto(out *ParserPatternsObservation) {
	*out = *in
	if in.FieldTimeFormat != nil {
		in, out := &in.FieldTimeFormat, &out.FieldTimeFormat
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeZone != nil {
		in, out := &in.FieldTimeZone, &out.FieldTimeZone
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserPatternsObservation.
func (in *ParserPatternsObservation) DeepCopy() *ParserPatternsObservation {
	if in == nil {
		return nil
	}
	out := new(ParserPatternsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserPatternsParameters) DeepCopyInto(out *ParserPatternsParameters) {
	*out = *in
	if in.FieldTimeFormat != nil {
		in, out := &in.FieldTimeFormat, &out.FieldTimeFormat
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeZone != nil {
		in, out := &in.FieldTimeZone, &out.FieldTimeZone
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserPatternsParameters.
func (in *ParserPatternsParameters) DeepCopy() *ParserPatternsParameters {
	if in == nil {
		return nil
	}
	out := new(ParserPatternsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserRecordInputInitParameters) DeepCopyInto(out *ParserRecordInputInitParameters) {
	*out = *in
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserRecordInputInitParameters.
func (in *ParserRecordInputInitParameters) DeepCopy() *ParserRecordInputInitParameters {
	if in == nil {
		return nil
	}
	out := new(ParserRecordInputInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserRecordInputObservation) DeepCopyInto(out *ParserRecordInputObservation) {
	*out = *in
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserRecordInputObservation.
func (in *ParserRecordInputObservation) DeepCopy() *ParserRecordInputObservation {
	if in == nil {
		return nil
	}
	out := new(ParserRecordInputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ParserRecordInputParameters) DeepCopyInto(out *ParserRecordInputParameters) {
	*out = *in
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ParserRecordInputParameters.
func (in *ParserRecordInputParameters) DeepCopy() *ParserRecordInputParameters {
	if in == nil {
		return nil
	}
	out := new(ParserRecordInputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatternsInitParameters) DeepCopyInto(out *PatternsInitParameters) {
	*out = *in
	if in.FieldTimeFormat != nil {
		in, out := &in.FieldTimeFormat, &out.FieldTimeFormat
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeZone != nil {
		in, out := &in.FieldTimeZone, &out.FieldTimeZone
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatternsInitParameters.
func (in *PatternsInitParameters) DeepCopy() *PatternsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PatternsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatternsObservation) DeepCopyInto(out *PatternsObservation) {
	*out = *in
	if in.FieldTimeFormat != nil {
		in, out := &in.FieldTimeFormat, &out.FieldTimeFormat
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeZone != nil {
		in, out := &in.FieldTimeZone, &out.FieldTimeZone
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatternsObservation.
func (in *PatternsObservation) DeepCopy() *PatternsObservation {
	if in == nil {
		return nil
	}
	out := new(PatternsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PatternsParameters) DeepCopyInto(out *PatternsParameters) {
	*out = *in
	if in.FieldTimeFormat != nil {
		in, out := &in.FieldTimeFormat, &out.FieldTimeFormat
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeZone != nil {
		in, out := &in.FieldTimeZone, &out.FieldTimeZone
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PatternsParameters.
func (in *PatternsParameters) DeepCopy() *PatternsParameters {
	if in == nil {
		return nil
	}
	out := new(PatternsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordInputInitParameters) DeepCopyInto(out *RecordInputInitParameters) {
	*out = *in
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordInputInitParameters.
func (in *RecordInputInitParameters) DeepCopy() *RecordInputInitParameters {
	if in == nil {
		return nil
	}
	out := new(RecordInputInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordInputObservation) DeepCopyInto(out *RecordInputObservation) {
	*out = *in
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordInputObservation.
func (in *RecordInputObservation) DeepCopy() *RecordInputObservation {
	if in == nil {
		return nil
	}
	out := new(RecordInputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordInputParameters) DeepCopyInto(out *RecordInputParameters) {
	*out = *in
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordInputParameters.
func (in *RecordInputParameters) DeepCopy() *RecordInputParameters {
	if in == nil {
		return nil
	}
	out := new(RecordInputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordListInitParameters) DeepCopyInto(out *RecordListInitParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordListInitParameters.
func (in *RecordListInitParameters) DeepCopy() *RecordListInitParameters {
	if in == nil {
		return nil
	}
	out := new(RecordListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordListObservation) DeepCopyInto(out *RecordListObservation) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordListObservation.
func (in *RecordListObservation) DeepCopy() *RecordListObservation {
	if in == nil {
		return nil
	}
	out := new(RecordListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RecordListParameters) DeepCopyInto(out *RecordListParameters) {
	*out = *in
	if in.Key != nil {
		in, out := &in.Key, &out.Key
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RecordListParameters.
func (in *RecordListParameters) DeepCopy() *RecordListParameters {
	if in == nil {
		return nil
	}
	out := new(RecordListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScrapeTargetsInitParameters) DeepCopyInto(out *ScrapeTargetsInitParameters) {
	*out = *in
	if in.K8SNamespace != nil {
		in, out := &in.K8SNamespace, &out.K8SNamespace
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScrapeTargetsInitParameters.
func (in *ScrapeTargetsInitParameters) DeepCopy() *ScrapeTargetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ScrapeTargetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScrapeTargetsObservation) DeepCopyInto(out *ScrapeTargetsObservation) {
	*out = *in
	if in.K8SNamespace != nil {
		in, out := &in.K8SNamespace, &out.K8SNamespace
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScrapeTargetsObservation.
func (in *ScrapeTargetsObservation) DeepCopy() *ScrapeTargetsObservation {
	if in == nil {
		return nil
	}
	out := new(ScrapeTargetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ScrapeTargetsParameters) DeepCopyInto(out *ScrapeTargetsParameters) {
	*out = *in
	if in.K8SNamespace != nil {
		in, out := &in.K8SNamespace, &out.K8SNamespace
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
	if in.ResourceType != nil {
		in, out := &in.ResourceType, &out.ResourceType
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ScrapeTargetsParameters.
func (in *ScrapeTargetsParameters) DeepCopy() *ScrapeTargetsParameters {
	if in == nil {
		return nil
	}
	out := new(ScrapeTargetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConfigurationDestinationInitParameters) DeepCopyInto(out *ServiceConfigurationDestinationInitParameters) {
	*out = *in
	if in.LogObjectID != nil {
		in, out := &in.LogObjectID, &out.LogObjectID
		*out = new(string)
		**out = **in
	}
	if in.OperationalMetricsConfiguration != nil {
		in, out := &in.OperationalMetricsConfiguration, &out.OperationalMetricsConfiguration
		*out = make([]OperationalMetricsConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConfigurationDestinationInitParameters.
func (in *ServiceConfigurationDestinationInitParameters) DeepCopy() *ServiceConfigurationDestinationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConfigurationDestinationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConfigurationDestinationObservation) DeepCopyInto(out *ServiceConfigurationDestinationObservation) {
	*out = *in
	if in.LogObjectID != nil {
		in, out := &in.LogObjectID, &out.LogObjectID
		*out = new(string)
		**out = **in
	}
	if in.OperationalMetricsConfiguration != nil {
		in, out := &in.OperationalMetricsConfiguration, &out.OperationalMetricsConfiguration
		*out = make([]OperationalMetricsConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConfigurationDestinationObservation.
func (in *ServiceConfigurationDestinationObservation) DeepCopy() *ServiceConfigurationDestinationObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceConfigurationDestinationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConfigurationDestinationParameters) DeepCopyInto(out *ServiceConfigurationDestinationParameters) {
	*out = *in
	if in.LogObjectID != nil {
		in, out := &in.LogObjectID, &out.LogObjectID
		*out = new(string)
		**out = **in
	}
	if in.OperationalMetricsConfiguration != nil {
		in, out := &in.OperationalMetricsConfiguration, &out.OperationalMetricsConfiguration
		*out = make([]OperationalMetricsConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConfigurationDestinationParameters.
func (in *ServiceConfigurationDestinationParameters) DeepCopy() *ServiceConfigurationDestinationParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConfigurationDestinationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConfigurationInitParameters) DeepCopyInto(out *ServiceConfigurationInitParameters) {
	*out = *in
	if in.ApplicationConfigurations != nil {
		in, out := &in.ApplicationConfigurations, &out.ApplicationConfigurations
		*out = make([]ApplicationConfigurationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigurationType != nil {
		in, out := &in.ConfigurationType, &out.ConfigurationType
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]ServiceConfigurationDestinationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]ServiceConfigurationSourcesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnifiedAgentConfigurationFilter != nil {
		in, out := &in.UnifiedAgentConfigurationFilter, &out.UnifiedAgentConfigurationFilter
		*out = make([]ServiceConfigurationUnifiedAgentConfigurationFilterInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConfigurationInitParameters.
func (in *ServiceConfigurationInitParameters) DeepCopy() *ServiceConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConfigurationObservation) DeepCopyInto(out *ServiceConfigurationObservation) {
	*out = *in
	if in.ApplicationConfigurations != nil {
		in, out := &in.ApplicationConfigurations, &out.ApplicationConfigurations
		*out = make([]ApplicationConfigurationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigurationType != nil {
		in, out := &in.ConfigurationType, &out.ConfigurationType
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]ServiceConfigurationDestinationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]ServiceConfigurationSourcesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnifiedAgentConfigurationFilter != nil {
		in, out := &in.UnifiedAgentConfigurationFilter, &out.UnifiedAgentConfigurationFilter
		*out = make([]ServiceConfigurationUnifiedAgentConfigurationFilterObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConfigurationObservation.
func (in *ServiceConfigurationObservation) DeepCopy() *ServiceConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConfigurationParameters) DeepCopyInto(out *ServiceConfigurationParameters) {
	*out = *in
	if in.ApplicationConfigurations != nil {
		in, out := &in.ApplicationConfigurations, &out.ApplicationConfigurations
		*out = make([]ApplicationConfigurationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConfigurationType != nil {
		in, out := &in.ConfigurationType, &out.ConfigurationType
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = make([]ServiceConfigurationDestinationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Sources != nil {
		in, out := &in.Sources, &out.Sources
		*out = make([]ServiceConfigurationSourcesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UnifiedAgentConfigurationFilter != nil {
		in, out := &in.UnifiedAgentConfigurationFilter, &out.UnifiedAgentConfigurationFilter
		*out = make([]ServiceConfigurationUnifiedAgentConfigurationFilterParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConfigurationParameters.
func (in *ServiceConfigurationParameters) DeepCopy() *ServiceConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConfigurationSourcesInitParameters) DeepCopyInto(out *ServiceConfigurationSourcesInitParameters) {
	*out = *in
	if in.AdvancedOptions != nil {
		in, out := &in.AdvancedOptions, &out.AdvancedOptions
		*out = make([]SourcesAdvancedOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomPlugin != nil {
		in, out := &in.CustomPlugin, &out.CustomPlugin
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]SourcesParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConfigurationSourcesInitParameters.
func (in *ServiceConfigurationSourcesInitParameters) DeepCopy() *ServiceConfigurationSourcesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConfigurationSourcesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConfigurationSourcesObservation) DeepCopyInto(out *ServiceConfigurationSourcesObservation) {
	*out = *in
	if in.AdvancedOptions != nil {
		in, out := &in.AdvancedOptions, &out.AdvancedOptions
		*out = make([]SourcesAdvancedOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomPlugin != nil {
		in, out := &in.CustomPlugin, &out.CustomPlugin
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]SourcesParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConfigurationSourcesObservation.
func (in *ServiceConfigurationSourcesObservation) DeepCopy() *ServiceConfigurationSourcesObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceConfigurationSourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConfigurationSourcesParameters) DeepCopyInto(out *ServiceConfigurationSourcesParameters) {
	*out = *in
	if in.AdvancedOptions != nil {
		in, out := &in.AdvancedOptions, &out.AdvancedOptions
		*out = make([]SourcesAdvancedOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Channels != nil {
		in, out := &in.Channels, &out.Channels
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CustomPlugin != nil {
		in, out := &in.CustomPlugin, &out.CustomPlugin
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]SourcesParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConfigurationSourcesParameters.
func (in *ServiceConfigurationSourcesParameters) DeepCopy() *ServiceConfigurationSourcesParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConfigurationSourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConfigurationUnifiedAgentConfigurationFilterInitParameters) DeepCopyInto(out *ServiceConfigurationUnifiedAgentConfigurationFilterInitParameters) {
	*out = *in
	if in.AllowList != nil {
		in, out := &in.AllowList, &out.AllowList
		*out = make([]AllowListInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomFilterType != nil {
		in, out := &in.CustomFilterType, &out.CustomFilterType
		*out = new(string)
		**out = **in
	}
	if in.CustomSections != nil {
		in, out := &in.CustomSections, &out.CustomSections
		*out = make([]CustomSectionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DenyList != nil {
		in, out := &in.DenyList, &out.DenyList
		*out = make([]DenyListInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EmitInvalidRecordToError != nil {
		in, out := &in.EmitInvalidRecordToError, &out.EmitInvalidRecordToError
		*out = new(bool)
		**out = **in
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.HashValueField != nil {
		in, out := &in.HashValueField, &out.HashValueField
		*out = new(string)
		**out = **in
	}
	if in.InjectKeyPrefix != nil {
		in, out := &in.InjectKeyPrefix, &out.InjectKeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.IsAutoTypecastEnabled != nil {
		in, out := &in.IsAutoTypecastEnabled, &out.IsAutoTypecastEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsRenewRecordEnabled != nil {
		in, out := &in.IsRenewRecordEnabled, &out.IsRenewRecordEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsRubyEnabled != nil {
		in, out := &in.IsRubyEnabled, &out.IsRubyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeepKeys != nil {
		in, out := &in.KeepKeys, &out.KeepKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]UnifiedAgentConfigurationFilterParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecordList != nil {
		in, out := &in.RecordList, &out.RecordList
		*out = make([]RecordListInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoveKeyNameField != nil {
		in, out := &in.RemoveKeyNameField, &out.RemoveKeyNameField
		*out = new(bool)
		**out = **in
	}
	if in.RemoveKeys != nil {
		in, out := &in.RemoveKeys, &out.RemoveKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RenewTimeKey != nil {
		in, out := &in.RenewTimeKey, &out.RenewTimeKey
		*out = new(string)
		**out = **in
	}
	if in.ReplaceInvalidSequence != nil {
		in, out := &in.ReplaceInvalidSequence, &out.ReplaceInvalidSequence
		*out = new(bool)
		**out = **in
	}
	if in.ReserveData != nil {
		in, out := &in.ReserveData, &out.ReserveData
		*out = new(bool)
		**out = **in
	}
	if in.ReserveTime != nil {
		in, out := &in.ReserveTime, &out.ReserveTime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConfigurationUnifiedAgentConfigurationFilterInitParameters.
func (in *ServiceConfigurationUnifiedAgentConfigurationFilterInitParameters) DeepCopy() *ServiceConfigurationUnifiedAgentConfigurationFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConfigurationUnifiedAgentConfigurationFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConfigurationUnifiedAgentConfigurationFilterObservation) DeepCopyInto(out *ServiceConfigurationUnifiedAgentConfigurationFilterObservation) {
	*out = *in
	if in.AllowList != nil {
		in, out := &in.AllowList, &out.AllowList
		*out = make([]AllowListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomFilterType != nil {
		in, out := &in.CustomFilterType, &out.CustomFilterType
		*out = new(string)
		**out = **in
	}
	if in.CustomSections != nil {
		in, out := &in.CustomSections, &out.CustomSections
		*out = make([]CustomSectionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DenyList != nil {
		in, out := &in.DenyList, &out.DenyList
		*out = make([]DenyListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EmitInvalidRecordToError != nil {
		in, out := &in.EmitInvalidRecordToError, &out.EmitInvalidRecordToError
		*out = new(bool)
		**out = **in
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.HashValueField != nil {
		in, out := &in.HashValueField, &out.HashValueField
		*out = new(string)
		**out = **in
	}
	if in.InjectKeyPrefix != nil {
		in, out := &in.InjectKeyPrefix, &out.InjectKeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.IsAutoTypecastEnabled != nil {
		in, out := &in.IsAutoTypecastEnabled, &out.IsAutoTypecastEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsRenewRecordEnabled != nil {
		in, out := &in.IsRenewRecordEnabled, &out.IsRenewRecordEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsRubyEnabled != nil {
		in, out := &in.IsRubyEnabled, &out.IsRubyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeepKeys != nil {
		in, out := &in.KeepKeys, &out.KeepKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]UnifiedAgentConfigurationFilterParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecordList != nil {
		in, out := &in.RecordList, &out.RecordList
		*out = make([]RecordListObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoveKeyNameField != nil {
		in, out := &in.RemoveKeyNameField, &out.RemoveKeyNameField
		*out = new(bool)
		**out = **in
	}
	if in.RemoveKeys != nil {
		in, out := &in.RemoveKeys, &out.RemoveKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RenewTimeKey != nil {
		in, out := &in.RenewTimeKey, &out.RenewTimeKey
		*out = new(string)
		**out = **in
	}
	if in.ReplaceInvalidSequence != nil {
		in, out := &in.ReplaceInvalidSequence, &out.ReplaceInvalidSequence
		*out = new(bool)
		**out = **in
	}
	if in.ReserveData != nil {
		in, out := &in.ReserveData, &out.ReserveData
		*out = new(bool)
		**out = **in
	}
	if in.ReserveTime != nil {
		in, out := &in.ReserveTime, &out.ReserveTime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConfigurationUnifiedAgentConfigurationFilterObservation.
func (in *ServiceConfigurationUnifiedAgentConfigurationFilterObservation) DeepCopy() *ServiceConfigurationUnifiedAgentConfigurationFilterObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceConfigurationUnifiedAgentConfigurationFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceConfigurationUnifiedAgentConfigurationFilterParameters) DeepCopyInto(out *ServiceConfigurationUnifiedAgentConfigurationFilterParameters) {
	*out = *in
	if in.AllowList != nil {
		in, out := &in.AllowList, &out.AllowList
		*out = make([]AllowListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomFilterType != nil {
		in, out := &in.CustomFilterType, &out.CustomFilterType
		*out = new(string)
		**out = **in
	}
	if in.CustomSections != nil {
		in, out := &in.CustomSections, &out.CustomSections
		*out = make([]CustomSectionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DenyList != nil {
		in, out := &in.DenyList, &out.DenyList
		*out = make([]DenyListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EmitInvalidRecordToError != nil {
		in, out := &in.EmitInvalidRecordToError, &out.EmitInvalidRecordToError
		*out = new(bool)
		**out = **in
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.HashValueField != nil {
		in, out := &in.HashValueField, &out.HashValueField
		*out = new(string)
		**out = **in
	}
	if in.InjectKeyPrefix != nil {
		in, out := &in.InjectKeyPrefix, &out.InjectKeyPrefix
		*out = new(string)
		**out = **in
	}
	if in.IsAutoTypecastEnabled != nil {
		in, out := &in.IsAutoTypecastEnabled, &out.IsAutoTypecastEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsRenewRecordEnabled != nil {
		in, out := &in.IsRenewRecordEnabled, &out.IsRenewRecordEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsRubyEnabled != nil {
		in, out := &in.IsRubyEnabled, &out.IsRubyEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KeepKeys != nil {
		in, out := &in.KeepKeys, &out.KeepKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.KeyName != nil {
		in, out := &in.KeyName, &out.KeyName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]UnifiedAgentConfigurationFilterParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecordList != nil {
		in, out := &in.RecordList, &out.RecordList
		*out = make([]RecordListParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoveKeyNameField != nil {
		in, out := &in.RemoveKeyNameField, &out.RemoveKeyNameField
		*out = new(bool)
		**out = **in
	}
	if in.RemoveKeys != nil {
		in, out := &in.RemoveKeys, &out.RemoveKeys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RenewTimeKey != nil {
		in, out := &in.RenewTimeKey, &out.RenewTimeKey
		*out = new(string)
		**out = **in
	}
	if in.ReplaceInvalidSequence != nil {
		in, out := &in.ReplaceInvalidSequence, &out.ReplaceInvalidSequence
		*out = new(bool)
		**out = **in
	}
	if in.ReserveData != nil {
		in, out := &in.ReserveData, &out.ReserveData
		*out = new(bool)
		**out = **in
	}
	if in.ReserveTime != nil {
		in, out := &in.ReserveTime, &out.ReserveTime
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceConfigurationUnifiedAgentConfigurationFilterParameters.
func (in *ServiceConfigurationUnifiedAgentConfigurationFilterParameters) DeepCopy() *ServiceConfigurationUnifiedAgentConfigurationFilterParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceConfigurationUnifiedAgentConfigurationFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceInitParameters) DeepCopyInto(out *SourceInitParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceInitParameters.
func (in *SourceInitParameters) DeepCopy() *SourceInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceObservation) DeepCopyInto(out *SourceObservation) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceObservation.
func (in *SourceObservation) DeepCopy() *SourceObservation {
	if in == nil {
		return nil
	}
	out := new(SourceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceParameters) DeepCopyInto(out *SourceParameters) {
	*out = *in
	if in.Category != nil {
		in, out := &in.Category, &out.Category
		*out = new(string)
		**out = **in
	}
	if in.Parameters != nil {
		in, out := &in.Parameters, &out.Parameters
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Resource != nil {
		in, out := &in.Resource, &out.Resource
		*out = new(string)
		**out = **in
	}
	if in.Service != nil {
		in, out := &in.Service, &out.Service
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceParameters.
func (in *SourceParameters) DeepCopy() *SourceParameters {
	if in == nil {
		return nil
	}
	out := new(SourceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRecordInputInitParameters) DeepCopyInto(out *SourceRecordInputInitParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRecordInputInitParameters.
func (in *SourceRecordInputInitParameters) DeepCopy() *SourceRecordInputInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceRecordInputInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRecordInputObservation) DeepCopyInto(out *SourceRecordInputObservation) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRecordInputObservation.
func (in *SourceRecordInputObservation) DeepCopy() *SourceRecordInputObservation {
	if in == nil {
		return nil
	}
	out := new(SourceRecordInputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceRecordInputParameters) DeepCopyInto(out *SourceRecordInputParameters) {
	*out = *in
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceRecordInputParameters.
func (in *SourceRecordInputParameters) DeepCopy() *SourceRecordInputParameters {
	if in == nil {
		return nil
	}
	out := new(SourceRecordInputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcesAdvancedOptionsInitParameters) DeepCopyInto(out *SourcesAdvancedOptionsInitParameters) {
	*out = *in
	if in.IsReadFromHead != nil {
		in, out := &in.IsReadFromHead, &out.IsReadFromHead
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcesAdvancedOptionsInitParameters.
func (in *SourcesAdvancedOptionsInitParameters) DeepCopy() *SourcesAdvancedOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourcesAdvancedOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcesAdvancedOptionsObservation) DeepCopyInto(out *SourcesAdvancedOptionsObservation) {
	*out = *in
	if in.IsReadFromHead != nil {
		in, out := &in.IsReadFromHead, &out.IsReadFromHead
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcesAdvancedOptionsObservation.
func (in *SourcesAdvancedOptionsObservation) DeepCopy() *SourcesAdvancedOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(SourcesAdvancedOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcesAdvancedOptionsParameters) DeepCopyInto(out *SourcesAdvancedOptionsParameters) {
	*out = *in
	if in.IsReadFromHead != nil {
		in, out := &in.IsReadFromHead, &out.IsReadFromHead
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcesAdvancedOptionsParameters.
func (in *SourcesAdvancedOptionsParameters) DeepCopy() *SourcesAdvancedOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(SourcesAdvancedOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcesInitParameters) DeepCopyInto(out *SourcesInitParameters) {
	*out = *in
	if in.AdvancedOptions != nil {
		in, out := &in.AdvancedOptions, &out.AdvancedOptions
		*out = make([]AdvancedOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]ParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcesInitParameters.
func (in *SourcesInitParameters) DeepCopy() *SourcesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourcesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcesObservation) DeepCopyInto(out *SourcesObservation) {
	*out = *in
	if in.AdvancedOptions != nil {
		in, out := &in.AdvancedOptions, &out.AdvancedOptions
		*out = make([]AdvancedOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]ParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcesObservation.
func (in *SourcesObservation) DeepCopy() *SourcesObservation {
	if in == nil {
		return nil
	}
	out := new(SourcesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcesParameters) DeepCopyInto(out *SourcesParameters) {
	*out = *in
	if in.AdvancedOptions != nil {
		in, out := &in.AdvancedOptions, &out.AdvancedOptions
		*out = make([]AdvancedOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Parser != nil {
		in, out := &in.Parser, &out.Parser
		*out = make([]ParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcesParameters.
func (in *SourcesParameters) DeepCopy() *SourcesParameters {
	if in == nil {
		return nil
	}
	out := new(SourcesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcesParserInitParameters) DeepCopyInto(out *SourcesParserInitParameters) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FormatFirstline != nil {
		in, out := &in.FormatFirstline, &out.FormatFirstline
		*out = new(string)
		**out = **in
	}
	if in.GrokFailureKey != nil {
		in, out := &in.GrokFailureKey, &out.GrokFailureKey
		*out = new(string)
		**out = **in
	}
	if in.GrokNameKey != nil {
		in, out := &in.GrokNameKey, &out.GrokNameKey
		*out = new(string)
		**out = **in
	}
	if in.IsEstimateCurrentEvent != nil {
		in, out := &in.IsEstimateCurrentEvent, &out.IsEstimateCurrentEvent
		*out = new(bool)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.IsMergeCriFields != nil {
		in, out := &in.IsMergeCriFields, &out.IsMergeCriFields
		*out = new(bool)
		**out = **in
	}
	if in.IsNullEmptyString != nil {
		in, out := &in.IsNullEmptyString, &out.IsNullEmptyString
		*out = new(bool)
		**out = **in
	}
	if in.IsSupportColonlessIdent != nil {
		in, out := &in.IsSupportColonlessIdent, &out.IsSupportColonlessIdent
		*out = new(bool)
		**out = **in
	}
	if in.IsWithPriority != nil {
		in, out := &in.IsWithPriority, &out.IsWithPriority
		*out = new(bool)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MessageFormat != nil {
		in, out := &in.MessageFormat, &out.MessageFormat
		*out = new(string)
		**out = **in
	}
	if in.MessageKey != nil {
		in, out := &in.MessageKey, &out.MessageKey
		*out = new(string)
		**out = **in
	}
	if in.MultiLineStartRegexp != nil {
		in, out := &in.MultiLineStartRegexp, &out.MultiLineStartRegexp
		*out = new(string)
		**out = **in
	}
	if in.NestedParser != nil {
		in, out := &in.NestedParser, &out.NestedParser
		*out = make([]ParserNestedParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullValuePattern != nil {
		in, out := &in.NullValuePattern, &out.NullValuePattern
		*out = new(string)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.ParserType != nil {
		in, out := &in.ParserType, &out.ParserType
		*out = new(string)
		**out = **in
	}
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]ParserPatternsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecordInput != nil {
		in, out := &in.RecordInput, &out.RecordInput
		*out = make([]ParserRecordInputInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rfc5424TimeFormat != nil {
		in, out := &in.Rfc5424TimeFormat, &out.Rfc5424TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.SyslogParserType != nil {
		in, out := &in.SyslogParserType, &out.SyslogParserType
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
	if in.TimeoutInMilliseconds != nil {
		in, out := &in.TimeoutInMilliseconds, &out.TimeoutInMilliseconds
		*out = new(float64)
		**out = **in
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcesParserInitParameters.
func (in *SourcesParserInitParameters) DeepCopy() *SourcesParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourcesParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcesParserObservation) DeepCopyInto(out *SourcesParserObservation) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FormatFirstline != nil {
		in, out := &in.FormatFirstline, &out.FormatFirstline
		*out = new(string)
		**out = **in
	}
	if in.GrokFailureKey != nil {
		in, out := &in.GrokFailureKey, &out.GrokFailureKey
		*out = new(string)
		**out = **in
	}
	if in.GrokNameKey != nil {
		in, out := &in.GrokNameKey, &out.GrokNameKey
		*out = new(string)
		**out = **in
	}
	if in.IsEstimateCurrentEvent != nil {
		in, out := &in.IsEstimateCurrentEvent, &out.IsEstimateCurrentEvent
		*out = new(bool)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.IsMergeCriFields != nil {
		in, out := &in.IsMergeCriFields, &out.IsMergeCriFields
		*out = new(bool)
		**out = **in
	}
	if in.IsNullEmptyString != nil {
		in, out := &in.IsNullEmptyString, &out.IsNullEmptyString
		*out = new(bool)
		**out = **in
	}
	if in.IsSupportColonlessIdent != nil {
		in, out := &in.IsSupportColonlessIdent, &out.IsSupportColonlessIdent
		*out = new(bool)
		**out = **in
	}
	if in.IsWithPriority != nil {
		in, out := &in.IsWithPriority, &out.IsWithPriority
		*out = new(bool)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MessageFormat != nil {
		in, out := &in.MessageFormat, &out.MessageFormat
		*out = new(string)
		**out = **in
	}
	if in.MessageKey != nil {
		in, out := &in.MessageKey, &out.MessageKey
		*out = new(string)
		**out = **in
	}
	if in.MultiLineStartRegexp != nil {
		in, out := &in.MultiLineStartRegexp, &out.MultiLineStartRegexp
		*out = new(string)
		**out = **in
	}
	if in.NestedParser != nil {
		in, out := &in.NestedParser, &out.NestedParser
		*out = make([]ParserNestedParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullValuePattern != nil {
		in, out := &in.NullValuePattern, &out.NullValuePattern
		*out = new(string)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.ParserType != nil {
		in, out := &in.ParserType, &out.ParserType
		*out = new(string)
		**out = **in
	}
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]ParserPatternsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecordInput != nil {
		in, out := &in.RecordInput, &out.RecordInput
		*out = make([]ParserRecordInputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rfc5424TimeFormat != nil {
		in, out := &in.Rfc5424TimeFormat, &out.Rfc5424TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.SyslogParserType != nil {
		in, out := &in.SyslogParserType, &out.SyslogParserType
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
	if in.TimeoutInMilliseconds != nil {
		in, out := &in.TimeoutInMilliseconds, &out.TimeoutInMilliseconds
		*out = new(float64)
		**out = **in
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcesParserObservation.
func (in *SourcesParserObservation) DeepCopy() *SourcesParserObservation {
	if in == nil {
		return nil
	}
	out := new(SourcesParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcesParserParameters) DeepCopyInto(out *SourcesParserParameters) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FormatFirstline != nil {
		in, out := &in.FormatFirstline, &out.FormatFirstline
		*out = new(string)
		**out = **in
	}
	if in.GrokFailureKey != nil {
		in, out := &in.GrokFailureKey, &out.GrokFailureKey
		*out = new(string)
		**out = **in
	}
	if in.GrokNameKey != nil {
		in, out := &in.GrokNameKey, &out.GrokNameKey
		*out = new(string)
		**out = **in
	}
	if in.IsEstimateCurrentEvent != nil {
		in, out := &in.IsEstimateCurrentEvent, &out.IsEstimateCurrentEvent
		*out = new(bool)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.IsMergeCriFields != nil {
		in, out := &in.IsMergeCriFields, &out.IsMergeCriFields
		*out = new(bool)
		**out = **in
	}
	if in.IsNullEmptyString != nil {
		in, out := &in.IsNullEmptyString, &out.IsNullEmptyString
		*out = new(bool)
		**out = **in
	}
	if in.IsSupportColonlessIdent != nil {
		in, out := &in.IsSupportColonlessIdent, &out.IsSupportColonlessIdent
		*out = new(bool)
		**out = **in
	}
	if in.IsWithPriority != nil {
		in, out := &in.IsWithPriority, &out.IsWithPriority
		*out = new(bool)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MessageFormat != nil {
		in, out := &in.MessageFormat, &out.MessageFormat
		*out = new(string)
		**out = **in
	}
	if in.MessageKey != nil {
		in, out := &in.MessageKey, &out.MessageKey
		*out = new(string)
		**out = **in
	}
	if in.MultiLineStartRegexp != nil {
		in, out := &in.MultiLineStartRegexp, &out.MultiLineStartRegexp
		*out = new(string)
		**out = **in
	}
	if in.NestedParser != nil {
		in, out := &in.NestedParser, &out.NestedParser
		*out = make([]ParserNestedParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullValuePattern != nil {
		in, out := &in.NullValuePattern, &out.NullValuePattern
		*out = new(string)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.ParserType != nil {
		in, out := &in.ParserType, &out.ParserType
		*out = new(string)
		**out = **in
	}
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]ParserPatternsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecordInput != nil {
		in, out := &in.RecordInput, &out.RecordInput
		*out = make([]ParserRecordInputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rfc5424TimeFormat != nil {
		in, out := &in.Rfc5424TimeFormat, &out.Rfc5424TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.SyslogParserType != nil {
		in, out := &in.SyslogParserType, &out.SyslogParserType
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
	if in.TimeoutInMilliseconds != nil {
		in, out := &in.TimeoutInMilliseconds, &out.TimeoutInMilliseconds
		*out = new(float64)
		**out = **in
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcesParserParameters.
func (in *SourcesParserParameters) DeepCopy() *SourcesParserParameters {
	if in == nil {
		return nil
	}
	out := new(SourcesParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfiguration) DeepCopyInto(out *UnifiedAgentConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfiguration.
func (in *UnifiedAgentConfiguration) DeepCopy() *UnifiedAgentConfiguration {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UnifiedAgentConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationFilterInitParameters) DeepCopyInto(out *UnifiedAgentConfigurationFilterInitParameters) {
	*out = *in
	if in.AllowList != nil {
		in, out := &in.AllowList, &out.AllowList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DenyList != nil {
		in, out := &in.DenyList, &out.DenyList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationFilterInitParameters.
func (in *UnifiedAgentConfigurationFilterInitParameters) DeepCopy() *UnifiedAgentConfigurationFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationFilterObservation) DeepCopyInto(out *UnifiedAgentConfigurationFilterObservation) {
	*out = *in
	if in.AllowList != nil {
		in, out := &in.AllowList, &out.AllowList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DenyList != nil {
		in, out := &in.DenyList, &out.DenyList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationFilterObservation.
func (in *UnifiedAgentConfigurationFilterObservation) DeepCopy() *UnifiedAgentConfigurationFilterObservation {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationFilterParameters) DeepCopyInto(out *UnifiedAgentConfigurationFilterParameters) {
	*out = *in
	if in.AllowList != nil {
		in, out := &in.AllowList, &out.AllowList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DenyList != nil {
		in, out := &in.DenyList, &out.DenyList
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationFilterParameters.
func (in *UnifiedAgentConfigurationFilterParameters) DeepCopy() *UnifiedAgentConfigurationFilterParameters {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationFilterParserInitParameters) DeepCopyInto(out *UnifiedAgentConfigurationFilterParserInitParameters) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FormatFirstline != nil {
		in, out := &in.FormatFirstline, &out.FormatFirstline
		*out = new(string)
		**out = **in
	}
	if in.GrokFailureKey != nil {
		in, out := &in.GrokFailureKey, &out.GrokFailureKey
		*out = new(string)
		**out = **in
	}
	if in.GrokNameKey != nil {
		in, out := &in.GrokNameKey, &out.GrokNameKey
		*out = new(string)
		**out = **in
	}
	if in.IsEstimateCurrentEvent != nil {
		in, out := &in.IsEstimateCurrentEvent, &out.IsEstimateCurrentEvent
		*out = new(bool)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.IsMergeCriFields != nil {
		in, out := &in.IsMergeCriFields, &out.IsMergeCriFields
		*out = new(bool)
		**out = **in
	}
	if in.IsNullEmptyString != nil {
		in, out := &in.IsNullEmptyString, &out.IsNullEmptyString
		*out = new(bool)
		**out = **in
	}
	if in.IsSupportColonlessIdent != nil {
		in, out := &in.IsSupportColonlessIdent, &out.IsSupportColonlessIdent
		*out = new(bool)
		**out = **in
	}
	if in.IsWithPriority != nil {
		in, out := &in.IsWithPriority, &out.IsWithPriority
		*out = new(bool)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MessageFormat != nil {
		in, out := &in.MessageFormat, &out.MessageFormat
		*out = new(string)
		**out = **in
	}
	if in.MessageKey != nil {
		in, out := &in.MessageKey, &out.MessageKey
		*out = new(string)
		**out = **in
	}
	if in.MultiLineStartRegexp != nil {
		in, out := &in.MultiLineStartRegexp, &out.MultiLineStartRegexp
		*out = new(string)
		**out = **in
	}
	if in.NestedParser != nil {
		in, out := &in.NestedParser, &out.NestedParser
		*out = make([]UnifiedAgentConfigurationFilterParserNestedParserInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullValuePattern != nil {
		in, out := &in.NullValuePattern, &out.NullValuePattern
		*out = new(string)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.ParserType != nil {
		in, out := &in.ParserType, &out.ParserType
		*out = new(string)
		**out = **in
	}
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]UnifiedAgentConfigurationFilterParserPatternsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecordInput != nil {
		in, out := &in.RecordInput, &out.RecordInput
		*out = make([]UnifiedAgentConfigurationFilterParserRecordInputInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rfc5424TimeFormat != nil {
		in, out := &in.Rfc5424TimeFormat, &out.Rfc5424TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.SyslogParserType != nil {
		in, out := &in.SyslogParserType, &out.SyslogParserType
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
	if in.TimeoutInMilliseconds != nil {
		in, out := &in.TimeoutInMilliseconds, &out.TimeoutInMilliseconds
		*out = new(float64)
		**out = **in
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationFilterParserInitParameters.
func (in *UnifiedAgentConfigurationFilterParserInitParameters) DeepCopy() *UnifiedAgentConfigurationFilterParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationFilterParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationFilterParserNestedParserInitParameters) DeepCopyInto(out *UnifiedAgentConfigurationFilterParserNestedParserInitParameters) {
	*out = *in
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationFilterParserNestedParserInitParameters.
func (in *UnifiedAgentConfigurationFilterParserNestedParserInitParameters) DeepCopy() *UnifiedAgentConfigurationFilterParserNestedParserInitParameters {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationFilterParserNestedParserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationFilterParserNestedParserObservation) DeepCopyInto(out *UnifiedAgentConfigurationFilterParserNestedParserObservation) {
	*out = *in
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationFilterParserNestedParserObservation.
func (in *UnifiedAgentConfigurationFilterParserNestedParserObservation) DeepCopy() *UnifiedAgentConfigurationFilterParserNestedParserObservation {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationFilterParserNestedParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationFilterParserNestedParserParameters) DeepCopyInto(out *UnifiedAgentConfigurationFilterParserNestedParserParameters) {
	*out = *in
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationFilterParserNestedParserParameters.
func (in *UnifiedAgentConfigurationFilterParserNestedParserParameters) DeepCopy() *UnifiedAgentConfigurationFilterParserNestedParserParameters {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationFilterParserNestedParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationFilterParserObservation) DeepCopyInto(out *UnifiedAgentConfigurationFilterParserObservation) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FormatFirstline != nil {
		in, out := &in.FormatFirstline, &out.FormatFirstline
		*out = new(string)
		**out = **in
	}
	if in.GrokFailureKey != nil {
		in, out := &in.GrokFailureKey, &out.GrokFailureKey
		*out = new(string)
		**out = **in
	}
	if in.GrokNameKey != nil {
		in, out := &in.GrokNameKey, &out.GrokNameKey
		*out = new(string)
		**out = **in
	}
	if in.IsEstimateCurrentEvent != nil {
		in, out := &in.IsEstimateCurrentEvent, &out.IsEstimateCurrentEvent
		*out = new(bool)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.IsMergeCriFields != nil {
		in, out := &in.IsMergeCriFields, &out.IsMergeCriFields
		*out = new(bool)
		**out = **in
	}
	if in.IsNullEmptyString != nil {
		in, out := &in.IsNullEmptyString, &out.IsNullEmptyString
		*out = new(bool)
		**out = **in
	}
	if in.IsSupportColonlessIdent != nil {
		in, out := &in.IsSupportColonlessIdent, &out.IsSupportColonlessIdent
		*out = new(bool)
		**out = **in
	}
	if in.IsWithPriority != nil {
		in, out := &in.IsWithPriority, &out.IsWithPriority
		*out = new(bool)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MessageFormat != nil {
		in, out := &in.MessageFormat, &out.MessageFormat
		*out = new(string)
		**out = **in
	}
	if in.MessageKey != nil {
		in, out := &in.MessageKey, &out.MessageKey
		*out = new(string)
		**out = **in
	}
	if in.MultiLineStartRegexp != nil {
		in, out := &in.MultiLineStartRegexp, &out.MultiLineStartRegexp
		*out = new(string)
		**out = **in
	}
	if in.NestedParser != nil {
		in, out := &in.NestedParser, &out.NestedParser
		*out = make([]UnifiedAgentConfigurationFilterParserNestedParserObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullValuePattern != nil {
		in, out := &in.NullValuePattern, &out.NullValuePattern
		*out = new(string)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.ParserType != nil {
		in, out := &in.ParserType, &out.ParserType
		*out = new(string)
		**out = **in
	}
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]UnifiedAgentConfigurationFilterParserPatternsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecordInput != nil {
		in, out := &in.RecordInput, &out.RecordInput
		*out = make([]UnifiedAgentConfigurationFilterParserRecordInputObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rfc5424TimeFormat != nil {
		in, out := &in.Rfc5424TimeFormat, &out.Rfc5424TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.SyslogParserType != nil {
		in, out := &in.SyslogParserType, &out.SyslogParserType
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
	if in.TimeoutInMilliseconds != nil {
		in, out := &in.TimeoutInMilliseconds, &out.TimeoutInMilliseconds
		*out = new(float64)
		**out = **in
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationFilterParserObservation.
func (in *UnifiedAgentConfigurationFilterParserObservation) DeepCopy() *UnifiedAgentConfigurationFilterParserObservation {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationFilterParserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationFilterParserParameters) DeepCopyInto(out *UnifiedAgentConfigurationFilterParserParameters) {
	*out = *in
	if in.Delimiter != nil {
		in, out := &in.Delimiter, &out.Delimiter
		*out = new(string)
		**out = **in
	}
	if in.Expression != nil {
		in, out := &in.Expression, &out.Expression
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.Format != nil {
		in, out := &in.Format, &out.Format
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FormatFirstline != nil {
		in, out := &in.FormatFirstline, &out.FormatFirstline
		*out = new(string)
		**out = **in
	}
	if in.GrokFailureKey != nil {
		in, out := &in.GrokFailureKey, &out.GrokFailureKey
		*out = new(string)
		**out = **in
	}
	if in.GrokNameKey != nil {
		in, out := &in.GrokNameKey, &out.GrokNameKey
		*out = new(string)
		**out = **in
	}
	if in.IsEstimateCurrentEvent != nil {
		in, out := &in.IsEstimateCurrentEvent, &out.IsEstimateCurrentEvent
		*out = new(bool)
		**out = **in
	}
	if in.IsKeepTimeKey != nil {
		in, out := &in.IsKeepTimeKey, &out.IsKeepTimeKey
		*out = new(bool)
		**out = **in
	}
	if in.IsMergeCriFields != nil {
		in, out := &in.IsMergeCriFields, &out.IsMergeCriFields
		*out = new(bool)
		**out = **in
	}
	if in.IsNullEmptyString != nil {
		in, out := &in.IsNullEmptyString, &out.IsNullEmptyString
		*out = new(bool)
		**out = **in
	}
	if in.IsSupportColonlessIdent != nil {
		in, out := &in.IsSupportColonlessIdent, &out.IsSupportColonlessIdent
		*out = new(bool)
		**out = **in
	}
	if in.IsWithPriority != nil {
		in, out := &in.IsWithPriority, &out.IsWithPriority
		*out = new(bool)
		**out = **in
	}
	if in.Keys != nil {
		in, out := &in.Keys, &out.Keys
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.MessageFormat != nil {
		in, out := &in.MessageFormat, &out.MessageFormat
		*out = new(string)
		**out = **in
	}
	if in.MessageKey != nil {
		in, out := &in.MessageKey, &out.MessageKey
		*out = new(string)
		**out = **in
	}
	if in.MultiLineStartRegexp != nil {
		in, out := &in.MultiLineStartRegexp, &out.MultiLineStartRegexp
		*out = new(string)
		**out = **in
	}
	if in.NestedParser != nil {
		in, out := &in.NestedParser, &out.NestedParser
		*out = make([]UnifiedAgentConfigurationFilterParserNestedParserParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NullValuePattern != nil {
		in, out := &in.NullValuePattern, &out.NullValuePattern
		*out = new(string)
		**out = **in
	}
	if in.ParseNested != nil {
		in, out := &in.ParseNested, &out.ParseNested
		*out = new(bool)
		**out = **in
	}
	if in.ParserType != nil {
		in, out := &in.ParserType, &out.ParserType
		*out = new(string)
		**out = **in
	}
	if in.Patterns != nil {
		in, out := &in.Patterns, &out.Patterns
		*out = make([]UnifiedAgentConfigurationFilterParserPatternsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RecordInput != nil {
		in, out := &in.RecordInput, &out.RecordInput
		*out = make([]UnifiedAgentConfigurationFilterParserRecordInputParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Rfc5424TimeFormat != nil {
		in, out := &in.Rfc5424TimeFormat, &out.Rfc5424TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.Separator != nil {
		in, out := &in.Separator, &out.Separator
		*out = new(string)
		**out = **in
	}
	if in.SyslogParserType != nil {
		in, out := &in.SyslogParserType, &out.SyslogParserType
		*out = new(string)
		**out = **in
	}
	if in.TimeFormat != nil {
		in, out := &in.TimeFormat, &out.TimeFormat
		*out = new(string)
		**out = **in
	}
	if in.TimeType != nil {
		in, out := &in.TimeType, &out.TimeType
		*out = new(string)
		**out = **in
	}
	if in.TimeoutInMilliseconds != nil {
		in, out := &in.TimeoutInMilliseconds, &out.TimeoutInMilliseconds
		*out = new(float64)
		**out = **in
	}
	if in.Types != nil {
		in, out := &in.Types, &out.Types
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationFilterParserParameters.
func (in *UnifiedAgentConfigurationFilterParserParameters) DeepCopy() *UnifiedAgentConfigurationFilterParserParameters {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationFilterParserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationFilterParserPatternsInitParameters) DeepCopyInto(out *UnifiedAgentConfigurationFilterParserPatternsInitParameters) {
	*out = *in
	if in.FieldTimeFormat != nil {
		in, out := &in.FieldTimeFormat, &out.FieldTimeFormat
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeZone != nil {
		in, out := &in.FieldTimeZone, &out.FieldTimeZone
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationFilterParserPatternsInitParameters.
func (in *UnifiedAgentConfigurationFilterParserPatternsInitParameters) DeepCopy() *UnifiedAgentConfigurationFilterParserPatternsInitParameters {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationFilterParserPatternsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationFilterParserPatternsObservation) DeepCopyInto(out *UnifiedAgentConfigurationFilterParserPatternsObservation) {
	*out = *in
	if in.FieldTimeFormat != nil {
		in, out := &in.FieldTimeFormat, &out.FieldTimeFormat
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeZone != nil {
		in, out := &in.FieldTimeZone, &out.FieldTimeZone
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationFilterParserPatternsObservation.
func (in *UnifiedAgentConfigurationFilterParserPatternsObservation) DeepCopy() *UnifiedAgentConfigurationFilterParserPatternsObservation {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationFilterParserPatternsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationFilterParserPatternsParameters) DeepCopyInto(out *UnifiedAgentConfigurationFilterParserPatternsParameters) {
	*out = *in
	if in.FieldTimeFormat != nil {
		in, out := &in.FieldTimeFormat, &out.FieldTimeFormat
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeKey != nil {
		in, out := &in.FieldTimeKey, &out.FieldTimeKey
		*out = new(string)
		**out = **in
	}
	if in.FieldTimeZone != nil {
		in, out := &in.FieldTimeZone, &out.FieldTimeZone
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Pattern != nil {
		in, out := &in.Pattern, &out.Pattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationFilterParserPatternsParameters.
func (in *UnifiedAgentConfigurationFilterParserPatternsParameters) DeepCopy() *UnifiedAgentConfigurationFilterParserPatternsParameters {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationFilterParserPatternsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationFilterParserRecordInputInitParameters) DeepCopyInto(out *UnifiedAgentConfigurationFilterParserRecordInputInitParameters) {
	*out = *in
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationFilterParserRecordInputInitParameters.
func (in *UnifiedAgentConfigurationFilterParserRecordInputInitParameters) DeepCopy() *UnifiedAgentConfigurationFilterParserRecordInputInitParameters {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationFilterParserRecordInputInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationFilterParserRecordInputObservation) DeepCopyInto(out *UnifiedAgentConfigurationFilterParserRecordInputObservation) {
	*out = *in
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationFilterParserRecordInputObservation.
func (in *UnifiedAgentConfigurationFilterParserRecordInputObservation) DeepCopy() *UnifiedAgentConfigurationFilterParserRecordInputObservation {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationFilterParserRecordInputObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationFilterParserRecordInputParameters) DeepCopyInto(out *UnifiedAgentConfigurationFilterParserRecordInputParameters) {
	*out = *in
	if in.Dimensions != nil {
		in, out := &in.Dimensions, &out.Dimensions
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Namespace != nil {
		in, out := &in.Namespace, &out.Namespace
		*out = new(string)
		**out = **in
	}
	if in.ResourceGroup != nil {
		in, out := &in.ResourceGroup, &out.ResourceGroup
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationFilterParserRecordInputParameters.
func (in *UnifiedAgentConfigurationFilterParserRecordInputParameters) DeepCopy() *UnifiedAgentConfigurationFilterParserRecordInputParameters {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationFilterParserRecordInputParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationInitParameters) DeepCopyInto(out *UnifiedAgentConfigurationInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GroupAssociation != nil {
		in, out := &in.GroupAssociation, &out.GroupAssociation
		*out = make([]GroupAssociationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ServiceConfiguration != nil {
		in, out := &in.ServiceConfiguration, &out.ServiceConfiguration
		*out = make([]ServiceConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationInitParameters.
func (in *UnifiedAgentConfigurationInitParameters) DeepCopy() *UnifiedAgentConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationList) DeepCopyInto(out *UnifiedAgentConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UnifiedAgentConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationList.
func (in *UnifiedAgentConfigurationList) DeepCopy() *UnifiedAgentConfigurationList {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UnifiedAgentConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationObservation) DeepCopyInto(out *UnifiedAgentConfigurationObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ConfigurationState != nil {
		in, out := &in.ConfigurationState, &out.ConfigurationState
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GroupAssociation != nil {
		in, out := &in.GroupAssociation, &out.GroupAssociation
		*out = make([]GroupAssociationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ServiceConfiguration != nil {
		in, out := &in.ServiceConfiguration, &out.ServiceConfiguration
		*out = make([]ServiceConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeLastModified != nil {
		in, out := &in.TimeLastModified, &out.TimeLastModified
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationObservation.
func (in *UnifiedAgentConfigurationObservation) DeepCopy() *UnifiedAgentConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationParameters) DeepCopyInto(out *UnifiedAgentConfigurationParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GroupAssociation != nil {
		in, out := &in.GroupAssociation, &out.GroupAssociation
		*out = make([]GroupAssociationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ServiceConfiguration != nil {
		in, out := &in.ServiceConfiguration, &out.ServiceConfiguration
		*out = make([]ServiceConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationParameters.
func (in *UnifiedAgentConfigurationParameters) DeepCopy() *UnifiedAgentConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationSpec) DeepCopyInto(out *UnifiedAgentConfigurationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationSpec.
func (in *UnifiedAgentConfigurationSpec) DeepCopy() *UnifiedAgentConfigurationSpec {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UnifiedAgentConfigurationStatus) DeepCopyInto(out *UnifiedAgentConfigurationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UnifiedAgentConfigurationStatus.
func (in *UnifiedAgentConfigurationStatus) DeepCopy() *UnifiedAgentConfigurationStatus {
	if in == nil {
		return nil
	}
	out := new(UnifiedAgentConfigurationStatus)
	in.DeepCopyInto(out)
	return out
}
