// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type StorageReplicationInitParameters struct {

	// (Updatable) The OCID of the compartment that contains the replication.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information. An associated replication target will also created with the same displayName. Example: My replication
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags. Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) Duration in minutes between replication snapshots.
	ReplicationInterval *string `json:"replicationInterval,omitempty" tf:"replication_interval,omitempty"`

	// The OCID of the source file system.
	SourceID *string `json:"sourceId,omitempty" tf:"source_id,omitempty"`

	// The OCID of the target file system.
	TargetID *string `json:"targetId,omitempty" tf:"target_id,omitempty"`
}

type StorageReplicationObservation struct {

	// The availability domain the replication is in. The replication must be in the same availability domain as the source file system. Example: Uocm:PHX-AD-1
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain,omitempty"`

	// (Updatable) The OCID of the compartment that contains the replication.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: {"Operations.CostCenter": "42"}
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// Percentage progress of the current replication cycle.
	DeltaProgress *string `json:"deltaProgress,omitempty" tf:"delta_progress,omitempty"`

	// The current state of the snapshot during replication operations.
	DeltaStatus *string `json:"deltaStatus,omitempty" tf:"delta_status,omitempty"`

	// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information. An associated replication target will also created with the same displayName. Example: My replication
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags. Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// The OCID of the replication.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The OCID of the last snapshot that has been replicated completely. Empty if the copy of the initial snapshot is not complete.
	LastSnapshotID *string `json:"lastSnapshotId,omitempty" tf:"last_snapshot_id,omitempty"`

	// Additional information about the current 'lifecycleState'.
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details,omitempty"`

	// The snapshotTime of the most recent recoverable replication snapshot in RFC 3339 timestamp format. Example: 2021-04-04T20:01:29.100Z
	RecoveryPointTime *string `json:"recoveryPointTime,omitempty" tf:"recovery_point_time,omitempty"`

	// (Updatable) Duration in minutes between replication snapshots.
	ReplicationInterval *string `json:"replicationInterval,omitempty" tf:"replication_interval,omitempty"`

	// The OCID of the ReplicationTarget.
	ReplicationTargetID *string `json:"replicationTargetId,omitempty" tf:"replication_target_id,omitempty"`

	// The OCID of the source file system.
	SourceID *string `json:"sourceId,omitempty" tf:"source_id,omitempty"`

	// The current state of this replication. This resource can be in a FAILED state if replication target is deleted instead of the replication resource.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The OCID of the target file system.
	TargetID *string `json:"targetId,omitempty" tf:"target_id,omitempty"`

	// The date and time the replication was created in RFC 3339 timestamp format.  Example: 2021-01-04T20:01:29.100Z
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`
}

type StorageReplicationParameters struct {

	// (Updatable) The OCID of the compartment that contains the replication.
	// +kubebuilder:validation:Optional
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags. Example: {"Operations.CostCenter": "42"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// (Updatable) A user-friendly name. It does not have to be unique, and it is changeable. Avoid entering confidential information. An associated replication target will also created with the same displayName. Example: My replication
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags. Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) Duration in minutes between replication snapshots.
	// +kubebuilder:validation:Optional
	ReplicationInterval *string `json:"replicationInterval,omitempty" tf:"replication_interval,omitempty"`

	// The OCID of the source file system.
	// +kubebuilder:validation:Optional
	SourceID *string `json:"sourceId,omitempty" tf:"source_id,omitempty"`

	// The OCID of the target file system.
	// +kubebuilder:validation:Optional
	TargetID *string `json:"targetId,omitempty" tf:"target_id,omitempty"`
}

// StorageReplicationSpec defines the desired state of StorageReplication
type StorageReplicationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     StorageReplicationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider StorageReplicationInitParameters `json:"initProvider,omitempty"`
}

// StorageReplicationStatus defines the observed state of StorageReplication.
type StorageReplicationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        StorageReplicationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// StorageReplication is the Schema for the StorageReplications API. Provides the Replication resource in Oracle Cloud Infrastructure File Storage service
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,provider-oci}
type StorageReplication struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.compartmentId) || (has(self.initProvider) && has(self.initProvider.compartmentId))",message="spec.forProvider.compartmentId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sourceId) || (has(self.initProvider) && has(self.initProvider.sourceId))",message="spec.forProvider.sourceId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.targetId) || (has(self.initProvider) && has(self.initProvider.targetId))",message="spec.forProvider.targetId is a required parameter"
	Spec   StorageReplicationSpec   `json:"spec"`
	Status StorageReplicationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// StorageReplicationList contains a list of StorageReplications
type StorageReplicationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []StorageReplication `json:"items"`
}

// Repository type metadata.
var (
	StorageReplication_Kind             = "StorageReplication"
	StorageReplication_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: StorageReplication_Kind}.String()
	StorageReplication_KindAPIVersion   = StorageReplication_Kind + "." + CRDGroupVersion.String()
	StorageReplication_GroupVersionKind = CRDGroupVersion.WithKind(StorageReplication_Kind)
)

func init() {
	SchemeBuilder.Register(&StorageReplication{}, &StorageReplicationList{})
}
