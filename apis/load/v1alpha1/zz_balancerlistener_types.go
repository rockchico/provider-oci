// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BalancerListenerInitParameters struct {

	// (Updatable) Configuration details for the connection between the client and backend servers.
	ConnectionConfiguration []ConnectionConfigurationInitParameters `json:"connectionConfiguration,omitempty" tf:"connection_configuration,omitempty"`

	// (Updatable) The name of the associated backend set.  Example: example_backend_set
	DefaultBackendSetName *string `json:"defaultBackendSetName,omitempty" tf:"default_backend_set_name,omitempty"`

	// (Updatable) An array of hostname resource names.
	HostnameNames []*string `json:"hostnameNames,omitempty" tf:"hostname_names,omitempty"`

	// The OCID of the load balancer on which to add a listener.
	LoadBalancerID *string `json:"loadBalancerId,omitempty" tf:"load_balancer_id,omitempty"`

	// A friendly name for the listener. It must be unique and it cannot be changed. Avoid entering confidential information.  Example: example_listener
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Updatable) Deprecated. Please use routingPolicies instead.
	PathRouteSetName *string `json:"pathRouteSetName,omitempty" tf:"path_route_set_name,omitempty"`

	// (Updatable) The communication port for the listener.  Example: 80
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// (Updatable) The protocol on which the listener accepts connection requests. To get a list of valid protocols, use the ListProtocols operation.  Example: HTTP
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// (Updatable) The name of the routing policy applied to this listener's traffic.  Example: example_routing_policy
	RoutingPolicyName *string `json:"routingPolicyName,omitempty" tf:"routing_policy_name,omitempty"`

	// (Updatable) The names of the rule sets to apply to the listener.  Example: ["example_rule_set"]
	RuleSetNames []*string `json:"ruleSetNames,omitempty" tf:"rule_set_names,omitempty"`

	// (Updatable) The load balancer's SSL handling configuration details.
	SSLConfiguration []BalancerListenerSSLConfigurationInitParameters `json:"sslConfiguration,omitempty" tf:"ssl_configuration,omitempty"`
}

type BalancerListenerObservation struct {

	// (Updatable) Configuration details for the connection between the client and backend servers.
	ConnectionConfiguration []ConnectionConfigurationObservation `json:"connectionConfiguration,omitempty" tf:"connection_configuration,omitempty"`

	// (Updatable) The name of the associated backend set.  Example: example_backend_set
	DefaultBackendSetName *string `json:"defaultBackendSetName,omitempty" tf:"default_backend_set_name,omitempty"`

	// (Updatable) An array of hostname resource names.
	HostnameNames []*string `json:"hostnameNames,omitempty" tf:"hostname_names,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The OCID of the load balancer on which to add a listener.
	LoadBalancerID *string `json:"loadBalancerId,omitempty" tf:"load_balancer_id,omitempty"`

	// A friendly name for the listener. It must be unique and it cannot be changed. Avoid entering confidential information.  Example: example_listener
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Updatable) Deprecated. Please use routingPolicies instead.
	PathRouteSetName *string `json:"pathRouteSetName,omitempty" tf:"path_route_set_name,omitempty"`

	// (Updatable) The communication port for the listener.  Example: 80
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// (Updatable) The protocol on which the listener accepts connection requests. To get a list of valid protocols, use the ListProtocols operation.  Example: HTTP
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// (Updatable) The name of the routing policy applied to this listener's traffic.  Example: example_routing_policy
	RoutingPolicyName *string `json:"routingPolicyName,omitempty" tf:"routing_policy_name,omitempty"`

	// (Updatable) The names of the rule sets to apply to the listener.  Example: ["example_rule_set"]
	RuleSetNames []*string `json:"ruleSetNames,omitempty" tf:"rule_set_names,omitempty"`

	// (Updatable) The load balancer's SSL handling configuration details.
	SSLConfiguration []BalancerListenerSSLConfigurationObservation `json:"sslConfiguration,omitempty" tf:"ssl_configuration,omitempty"`

	State *string `json:"state,omitempty" tf:"state,omitempty"`
}

type BalancerListenerParameters struct {

	// (Updatable) Configuration details for the connection between the client and backend servers.
	// +kubebuilder:validation:Optional
	ConnectionConfiguration []ConnectionConfigurationParameters `json:"connectionConfiguration,omitempty" tf:"connection_configuration,omitempty"`

	// (Updatable) The name of the associated backend set.  Example: example_backend_set
	// +kubebuilder:validation:Optional
	DefaultBackendSetName *string `json:"defaultBackendSetName,omitempty" tf:"default_backend_set_name,omitempty"`

	// (Updatable) An array of hostname resource names.
	// +kubebuilder:validation:Optional
	HostnameNames []*string `json:"hostnameNames,omitempty" tf:"hostname_names,omitempty"`

	// The OCID of the load balancer on which to add a listener.
	// +kubebuilder:validation:Optional
	LoadBalancerID *string `json:"loadBalancerId,omitempty" tf:"load_balancer_id,omitempty"`

	// A friendly name for the listener. It must be unique and it cannot be changed. Avoid entering confidential information.  Example: example_listener
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (Updatable) Deprecated. Please use routingPolicies instead.
	// +kubebuilder:validation:Optional
	PathRouteSetName *string `json:"pathRouteSetName,omitempty" tf:"path_route_set_name,omitempty"`

	// (Updatable) The communication port for the listener.  Example: 80
	// +kubebuilder:validation:Optional
	Port *float64 `json:"port,omitempty" tf:"port,omitempty"`

	// (Updatable) The protocol on which the listener accepts connection requests. To get a list of valid protocols, use the ListProtocols operation.  Example: HTTP
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// (Updatable) The name of the routing policy applied to this listener's traffic.  Example: example_routing_policy
	// +kubebuilder:validation:Optional
	RoutingPolicyName *string `json:"routingPolicyName,omitempty" tf:"routing_policy_name,omitempty"`

	// (Updatable) The names of the rule sets to apply to the listener.  Example: ["example_rule_set"]
	// +kubebuilder:validation:Optional
	RuleSetNames []*string `json:"ruleSetNames,omitempty" tf:"rule_set_names,omitempty"`

	// (Updatable) The load balancer's SSL handling configuration details.
	// +kubebuilder:validation:Optional
	SSLConfiguration []BalancerListenerSSLConfigurationParameters `json:"sslConfiguration,omitempty" tf:"ssl_configuration,omitempty"`
}

type BalancerListenerSSLConfigurationInitParameters struct {

	// (Updatable) Ids for Oracle Cloud Infrastructure certificates service certificates. Currently only a single Id may be passed.  Example: [ocid1.certificate.oc1.us-ashburn-1.amaaaaaaav3bgsaa5o2q7rh5nfmkkukfkogasqhk6af2opufhjlqg7m6jqzq]
	CertificateIds []*string `json:"certificateIds,omitempty" tf:"certificate_ids,omitempty"`

	// (Updatable) A friendly name for the certificate bundle. It must be unique and it cannot be changed. Valid certificate bundle names include only alphanumeric characters, dashes, and underscores. Certificate bundle names cannot contain spaces. Avoid entering confidential information.  Example: example_certificate_bundle
	CertificateName *string `json:"certificateName,omitempty" tf:"certificate_name,omitempty"`

	// (Updatable) The name of the cipher suite to use for HTTPS or SSL connections.
	CipherSuiteName *string `json:"cipherSuiteName,omitempty" tf:"cipher_suite_name,omitempty"`

	// (Updatable) Whether the load balancer listener should resume an encrypted session by reusing the cryptographic parameters of a previous TLS session, without having to perform a full handshake again. If "true", the service resumes the previous TLS encrypted session. If "false", the service starts a new TLS encrypted session. Enabling session resumption improves performance but provides a lower level of security. Disabling session resumption improves security but reduces performance.  Example: true
	HasSessionResumption *bool `json:"hasSessionResumption,omitempty" tf:"has_session_resumption,omitempty"`

	// (Updatable) A list of SSL protocols the load balancer must support for HTTPS or SSL connections.
	Protocols []*string `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// (Updatable) When this attribute is set to ENABLED, the system gives preference to the server ciphers over the client ciphers.
	ServerOrderPreference *string `json:"serverOrderPreference,omitempty" tf:"server_order_preference,omitempty"`

	// (Updatable) Ids for Oracle Cloud Infrastructure certificates service CA or CA bundles for the load balancer to trust.  Example: [ocid1.cabundle.oc1.us-ashburn-1.amaaaaaaav3bgsaagl4zzyqdop5i2vuwoqewdvauuw34llqa74otq2jdsfyq]
	TrustedCertificateAuthorityIds []*string `json:"trustedCertificateAuthorityIds,omitempty" tf:"trusted_certificate_authority_ids,omitempty"`

	// (Updatable) The maximum depth for peer certificate chain verification.  Example: 3
	VerifyDepth *float64 `json:"verifyDepth,omitempty" tf:"verify_depth,omitempty"`

	// (Updatable) Whether the load balancer listener should verify peer certificates.  Example: true
	VerifyPeerCertificate *bool `json:"verifyPeerCertificate,omitempty" tf:"verify_peer_certificate,omitempty"`
}

type BalancerListenerSSLConfigurationObservation struct {

	// (Updatable) Ids for Oracle Cloud Infrastructure certificates service certificates. Currently only a single Id may be passed.  Example: [ocid1.certificate.oc1.us-ashburn-1.amaaaaaaav3bgsaa5o2q7rh5nfmkkukfkogasqhk6af2opufhjlqg7m6jqzq]
	CertificateIds []*string `json:"certificateIds,omitempty" tf:"certificate_ids,omitempty"`

	// (Updatable) A friendly name for the certificate bundle. It must be unique and it cannot be changed. Valid certificate bundle names include only alphanumeric characters, dashes, and underscores. Certificate bundle names cannot contain spaces. Avoid entering confidential information.  Example: example_certificate_bundle
	CertificateName *string `json:"certificateName,omitempty" tf:"certificate_name,omitempty"`

	// (Updatable) The name of the cipher suite to use for HTTPS or SSL connections.
	CipherSuiteName *string `json:"cipherSuiteName,omitempty" tf:"cipher_suite_name,omitempty"`

	// (Updatable) Whether the load balancer listener should resume an encrypted session by reusing the cryptographic parameters of a previous TLS session, without having to perform a full handshake again. If "true", the service resumes the previous TLS encrypted session. If "false", the service starts a new TLS encrypted session. Enabling session resumption improves performance but provides a lower level of security. Disabling session resumption improves security but reduces performance.  Example: true
	HasSessionResumption *bool `json:"hasSessionResumption,omitempty" tf:"has_session_resumption,omitempty"`

	// (Updatable) A list of SSL protocols the load balancer must support for HTTPS or SSL connections.
	Protocols []*string `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// (Updatable) When this attribute is set to ENABLED, the system gives preference to the server ciphers over the client ciphers.
	ServerOrderPreference *string `json:"serverOrderPreference,omitempty" tf:"server_order_preference,omitempty"`

	// (Updatable) Ids for Oracle Cloud Infrastructure certificates service CA or CA bundles for the load balancer to trust.  Example: [ocid1.cabundle.oc1.us-ashburn-1.amaaaaaaav3bgsaagl4zzyqdop5i2vuwoqewdvauuw34llqa74otq2jdsfyq]
	TrustedCertificateAuthorityIds []*string `json:"trustedCertificateAuthorityIds,omitempty" tf:"trusted_certificate_authority_ids,omitempty"`

	// (Updatable) The maximum depth for peer certificate chain verification.  Example: 3
	VerifyDepth *float64 `json:"verifyDepth,omitempty" tf:"verify_depth,omitempty"`

	// (Updatable) Whether the load balancer listener should verify peer certificates.  Example: true
	VerifyPeerCertificate *bool `json:"verifyPeerCertificate,omitempty" tf:"verify_peer_certificate,omitempty"`
}

type BalancerListenerSSLConfigurationParameters struct {

	// (Updatable) Ids for Oracle Cloud Infrastructure certificates service certificates. Currently only a single Id may be passed.  Example: [ocid1.certificate.oc1.us-ashburn-1.amaaaaaaav3bgsaa5o2q7rh5nfmkkukfkogasqhk6af2opufhjlqg7m6jqzq]
	// +kubebuilder:validation:Optional
	CertificateIds []*string `json:"certificateIds,omitempty" tf:"certificate_ids,omitempty"`

	// (Updatable) A friendly name for the certificate bundle. It must be unique and it cannot be changed. Valid certificate bundle names include only alphanumeric characters, dashes, and underscores. Certificate bundle names cannot contain spaces. Avoid entering confidential information.  Example: example_certificate_bundle
	// +kubebuilder:validation:Optional
	CertificateName *string `json:"certificateName,omitempty" tf:"certificate_name,omitempty"`

	// (Updatable) The name of the cipher suite to use for HTTPS or SSL connections.
	// +kubebuilder:validation:Optional
	CipherSuiteName *string `json:"cipherSuiteName,omitempty" tf:"cipher_suite_name,omitempty"`

	// (Updatable) Whether the load balancer listener should resume an encrypted session by reusing the cryptographic parameters of a previous TLS session, without having to perform a full handshake again. If "true", the service resumes the previous TLS encrypted session. If "false", the service starts a new TLS encrypted session. Enabling session resumption improves performance but provides a lower level of security. Disabling session resumption improves security but reduces performance.  Example: true
	// +kubebuilder:validation:Optional
	HasSessionResumption *bool `json:"hasSessionResumption,omitempty" tf:"has_session_resumption,omitempty"`

	// (Updatable) A list of SSL protocols the load balancer must support for HTTPS or SSL connections.
	// +kubebuilder:validation:Optional
	Protocols []*string `json:"protocols,omitempty" tf:"protocols,omitempty"`

	// (Updatable) When this attribute is set to ENABLED, the system gives preference to the server ciphers over the client ciphers.
	// +kubebuilder:validation:Optional
	ServerOrderPreference *string `json:"serverOrderPreference,omitempty" tf:"server_order_preference,omitempty"`

	// (Updatable) Ids for Oracle Cloud Infrastructure certificates service CA or CA bundles for the load balancer to trust.  Example: [ocid1.cabundle.oc1.us-ashburn-1.amaaaaaaav3bgsaagl4zzyqdop5i2vuwoqewdvauuw34llqa74otq2jdsfyq]
	// +kubebuilder:validation:Optional
	TrustedCertificateAuthorityIds []*string `json:"trustedCertificateAuthorityIds,omitempty" tf:"trusted_certificate_authority_ids,omitempty"`

	// (Updatable) The maximum depth for peer certificate chain verification.  Example: 3
	// +kubebuilder:validation:Optional
	VerifyDepth *float64 `json:"verifyDepth,omitempty" tf:"verify_depth,omitempty"`

	// (Updatable) Whether the load balancer listener should verify peer certificates.  Example: true
	// +kubebuilder:validation:Optional
	VerifyPeerCertificate *bool `json:"verifyPeerCertificate,omitempty" tf:"verify_peer_certificate,omitempty"`
}

type ConnectionConfigurationInitParameters struct {

	// (Updatable) The backend TCP Proxy Protocol version.  Example: 1
	BackendTCPProxyProtocolVersion *float64 `json:"backendTcpProxyProtocolVersion,omitempty" tf:"backend_tcp_proxy_protocol_version,omitempty"`

	// (Updatable) The maximum idle time, in seconds, allowed between two successive receive or two successive send operations between the client and backend servers. A send operation does not reset the timer for receive operations. A receive operation does not reset the timer for send operations.
	IdleTimeoutInSeconds *string `json:"idleTimeoutInSeconds,omitempty" tf:"idle_timeout_in_seconds,omitempty"`
}

type ConnectionConfigurationObservation struct {

	// (Updatable) The backend TCP Proxy Protocol version.  Example: 1
	BackendTCPProxyProtocolVersion *float64 `json:"backendTcpProxyProtocolVersion,omitempty" tf:"backend_tcp_proxy_protocol_version,omitempty"`

	// (Updatable) The maximum idle time, in seconds, allowed between two successive receive or two successive send operations between the client and backend servers. A send operation does not reset the timer for receive operations. A receive operation does not reset the timer for send operations.
	IdleTimeoutInSeconds *string `json:"idleTimeoutInSeconds,omitempty" tf:"idle_timeout_in_seconds,omitempty"`
}

type ConnectionConfigurationParameters struct {

	// (Updatable) The backend TCP Proxy Protocol version.  Example: 1
	// +kubebuilder:validation:Optional
	BackendTCPProxyProtocolVersion *float64 `json:"backendTcpProxyProtocolVersion,omitempty" tf:"backend_tcp_proxy_protocol_version,omitempty"`

	// (Updatable) The maximum idle time, in seconds, allowed between two successive receive or two successive send operations between the client and backend servers. A send operation does not reset the timer for receive operations. A receive operation does not reset the timer for send operations.
	// +kubebuilder:validation:Optional
	IdleTimeoutInSeconds *string `json:"idleTimeoutInSeconds" tf:"idle_timeout_in_seconds,omitempty"`
}

// BalancerListenerSpec defines the desired state of BalancerListener
type BalancerListenerSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     BalancerListenerParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider BalancerListenerInitParameters `json:"initProvider,omitempty"`
}

// BalancerListenerStatus defines the observed state of BalancerListener.
type BalancerListenerStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        BalancerListenerObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// BalancerListener is the Schema for the BalancerListeners API. Provides the Listener resource in Oracle Cloud Infrastructure Load Balancer service
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,provider-oci}
type BalancerListener struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.defaultBackendSetName) || (has(self.initProvider) && has(self.initProvider.defaultBackendSetName))",message="spec.forProvider.defaultBackendSetName is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.loadBalancerId) || (has(self.initProvider) && has(self.initProvider.loadBalancerId))",message="spec.forProvider.loadBalancerId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.port) || (has(self.initProvider) && has(self.initProvider.port))",message="spec.forProvider.port is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.protocol) || (has(self.initProvider) && has(self.initProvider.protocol))",message="spec.forProvider.protocol is a required parameter"
	Spec   BalancerListenerSpec   `json:"spec"`
	Status BalancerListenerStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// BalancerListenerList contains a list of BalancerListeners
type BalancerListenerList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []BalancerListener `json:"items"`
}

// Repository type metadata.
var (
	BalancerListener_Kind             = "BalancerListener"
	BalancerListener_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: BalancerListener_Kind}.String()
	BalancerListener_KindAPIVersion   = BalancerListener_Kind + "." + CRDGroupVersion.String()
	BalancerListener_GroupVersionKind = CRDGroupVersion.WithKind(BalancerListener_Kind)
)

func init() {
	SchemeBuilder.Register(&BalancerListener{}, &BalancerListenerList{})
}
