//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentConfigInitParameters) DeepCopyInto(out *AgentConfigInitParameters) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]PluginsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentConfigInitParameters.
func (in *AgentConfigInitParameters) DeepCopy() *AgentConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AgentConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentConfigObservation) DeepCopyInto(out *AgentConfigObservation) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]PluginsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentConfigObservation.
func (in *AgentConfigObservation) DeepCopy() *AgentConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AgentConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentConfigParameters) DeepCopyInto(out *AgentConfigParameters) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]PluginsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentConfigParameters.
func (in *AgentConfigParameters) DeepCopy() *AgentConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AgentConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentConfigPluginsConfigInitParameters) DeepCopyInto(out *AgentConfigPluginsConfigInitParameters) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentConfigPluginsConfigInitParameters.
func (in *AgentConfigPluginsConfigInitParameters) DeepCopy() *AgentConfigPluginsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AgentConfigPluginsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentConfigPluginsConfigObservation) DeepCopyInto(out *AgentConfigPluginsConfigObservation) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentConfigPluginsConfigObservation.
func (in *AgentConfigPluginsConfigObservation) DeepCopy() *AgentConfigPluginsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AgentConfigPluginsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentConfigPluginsConfigParameters) DeepCopyInto(out *AgentConfigPluginsConfigParameters) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentConfigPluginsConfigParameters.
func (in *AgentConfigPluginsConfigParameters) DeepCopy() *AgentConfigPluginsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AgentConfigPluginsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentFeaturesInitParameters) DeepCopyInto(out *AgentFeaturesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentFeaturesInitParameters.
func (in *AgentFeaturesInitParameters) DeepCopy() *AgentFeaturesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AgentFeaturesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentFeaturesObservation) DeepCopyInto(out *AgentFeaturesObservation) {
	*out = *in
	if in.IsManagementSupported != nil {
		in, out := &in.IsManagementSupported, &out.IsManagementSupported
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringSupported != nil {
		in, out := &in.IsMonitoringSupported, &out.IsMonitoringSupported
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentFeaturesObservation.
func (in *AgentFeaturesObservation) DeepCopy() *AgentFeaturesObservation {
	if in == nil {
		return nil
	}
	out := new(AgentFeaturesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AgentFeaturesParameters) DeepCopyInto(out *AgentFeaturesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AgentFeaturesParameters.
func (in *AgentFeaturesParameters) DeepCopy() *AgentFeaturesParameters {
	if in == nil {
		return nil
	}
	out := new(AgentFeaturesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogListingResourceVersionAgreement) DeepCopyInto(out *AppCatalogListingResourceVersionAgreement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogListingResourceVersionAgreement.
func (in *AppCatalogListingResourceVersionAgreement) DeepCopy() *AppCatalogListingResourceVersionAgreement {
	if in == nil {
		return nil
	}
	out := new(AppCatalogListingResourceVersionAgreement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppCatalogListingResourceVersionAgreement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogListingResourceVersionAgreementInitParameters) DeepCopyInto(out *AppCatalogListingResourceVersionAgreementInitParameters) {
	*out = *in
	if in.ListingID != nil {
		in, out := &in.ListingID, &out.ListingID
		*out = new(string)
		**out = **in
	}
	if in.ListingResourceVersion != nil {
		in, out := &in.ListingResourceVersion, &out.ListingResourceVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogListingResourceVersionAgreementInitParameters.
func (in *AppCatalogListingResourceVersionAgreementInitParameters) DeepCopy() *AppCatalogListingResourceVersionAgreementInitParameters {
	if in == nil {
		return nil
	}
	out := new(AppCatalogListingResourceVersionAgreementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogListingResourceVersionAgreementList) DeepCopyInto(out *AppCatalogListingResourceVersionAgreementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AppCatalogListingResourceVersionAgreement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogListingResourceVersionAgreementList.
func (in *AppCatalogListingResourceVersionAgreementList) DeepCopy() *AppCatalogListingResourceVersionAgreementList {
	if in == nil {
		return nil
	}
	out := new(AppCatalogListingResourceVersionAgreementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppCatalogListingResourceVersionAgreementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogListingResourceVersionAgreementObservation) DeepCopyInto(out *AppCatalogListingResourceVersionAgreementObservation) {
	*out = *in
	if in.EulaLink != nil {
		in, out := &in.EulaLink, &out.EulaLink
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ListingID != nil {
		in, out := &in.ListingID, &out.ListingID
		*out = new(string)
		**out = **in
	}
	if in.ListingResourceVersion != nil {
		in, out := &in.ListingResourceVersion, &out.ListingResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.OracleTermsOfUseLink != nil {
		in, out := &in.OracleTermsOfUseLink, &out.OracleTermsOfUseLink
		*out = new(string)
		**out = **in
	}
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
	if in.TimeRetrieved != nil {
		in, out := &in.TimeRetrieved, &out.TimeRetrieved
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogListingResourceVersionAgreementObservation.
func (in *AppCatalogListingResourceVersionAgreementObservation) DeepCopy() *AppCatalogListingResourceVersionAgreementObservation {
	if in == nil {
		return nil
	}
	out := new(AppCatalogListingResourceVersionAgreementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogListingResourceVersionAgreementParameters) DeepCopyInto(out *AppCatalogListingResourceVersionAgreementParameters) {
	*out = *in
	if in.ListingID != nil {
		in, out := &in.ListingID, &out.ListingID
		*out = new(string)
		**out = **in
	}
	if in.ListingResourceVersion != nil {
		in, out := &in.ListingResourceVersion, &out.ListingResourceVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogListingResourceVersionAgreementParameters.
func (in *AppCatalogListingResourceVersionAgreementParameters) DeepCopy() *AppCatalogListingResourceVersionAgreementParameters {
	if in == nil {
		return nil
	}
	out := new(AppCatalogListingResourceVersionAgreementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogListingResourceVersionAgreementSpec) DeepCopyInto(out *AppCatalogListingResourceVersionAgreementSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogListingResourceVersionAgreementSpec.
func (in *AppCatalogListingResourceVersionAgreementSpec) DeepCopy() *AppCatalogListingResourceVersionAgreementSpec {
	if in == nil {
		return nil
	}
	out := new(AppCatalogListingResourceVersionAgreementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogListingResourceVersionAgreementStatus) DeepCopyInto(out *AppCatalogListingResourceVersionAgreementStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogListingResourceVersionAgreementStatus.
func (in *AppCatalogListingResourceVersionAgreementStatus) DeepCopy() *AppCatalogListingResourceVersionAgreementStatus {
	if in == nil {
		return nil
	}
	out := new(AppCatalogListingResourceVersionAgreementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogSubscription) DeepCopyInto(out *AppCatalogSubscription) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogSubscription.
func (in *AppCatalogSubscription) DeepCopy() *AppCatalogSubscription {
	if in == nil {
		return nil
	}
	out := new(AppCatalogSubscription)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppCatalogSubscription) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogSubscriptionInitParameters) DeepCopyInto(out *AppCatalogSubscriptionInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.EulaLink != nil {
		in, out := &in.EulaLink, &out.EulaLink
		*out = new(string)
		**out = **in
	}
	if in.ListingID != nil {
		in, out := &in.ListingID, &out.ListingID
		*out = new(string)
		**out = **in
	}
	if in.ListingResourceVersion != nil {
		in, out := &in.ListingResourceVersion, &out.ListingResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.OracleTermsOfUseLink != nil {
		in, out := &in.OracleTermsOfUseLink, &out.OracleTermsOfUseLink
		*out = new(string)
		**out = **in
	}
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
	if in.TimeRetrieved != nil {
		in, out := &in.TimeRetrieved, &out.TimeRetrieved
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogSubscriptionInitParameters.
func (in *AppCatalogSubscriptionInitParameters) DeepCopy() *AppCatalogSubscriptionInitParameters {
	if in == nil {
		return nil
	}
	out := new(AppCatalogSubscriptionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogSubscriptionList) DeepCopyInto(out *AppCatalogSubscriptionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]AppCatalogSubscription, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogSubscriptionList.
func (in *AppCatalogSubscriptionList) DeepCopy() *AppCatalogSubscriptionList {
	if in == nil {
		return nil
	}
	out := new(AppCatalogSubscriptionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *AppCatalogSubscriptionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogSubscriptionObservation) DeepCopyInto(out *AppCatalogSubscriptionObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EulaLink != nil {
		in, out := &in.EulaLink, &out.EulaLink
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ListingID != nil {
		in, out := &in.ListingID, &out.ListingID
		*out = new(string)
		**out = **in
	}
	if in.ListingResourceID != nil {
		in, out := &in.ListingResourceID, &out.ListingResourceID
		*out = new(string)
		**out = **in
	}
	if in.ListingResourceVersion != nil {
		in, out := &in.ListingResourceVersion, &out.ListingResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.OracleTermsOfUseLink != nil {
		in, out := &in.OracleTermsOfUseLink, &out.OracleTermsOfUseLink
		*out = new(string)
		**out = **in
	}
	if in.PublisherName != nil {
		in, out := &in.PublisherName, &out.PublisherName
		*out = new(string)
		**out = **in
	}
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
	if in.Summary != nil {
		in, out := &in.Summary, &out.Summary
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeRetrieved != nil {
		in, out := &in.TimeRetrieved, &out.TimeRetrieved
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogSubscriptionObservation.
func (in *AppCatalogSubscriptionObservation) DeepCopy() *AppCatalogSubscriptionObservation {
	if in == nil {
		return nil
	}
	out := new(AppCatalogSubscriptionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogSubscriptionParameters) DeepCopyInto(out *AppCatalogSubscriptionParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.EulaLink != nil {
		in, out := &in.EulaLink, &out.EulaLink
		*out = new(string)
		**out = **in
	}
	if in.ListingID != nil {
		in, out := &in.ListingID, &out.ListingID
		*out = new(string)
		**out = **in
	}
	if in.ListingResourceVersion != nil {
		in, out := &in.ListingResourceVersion, &out.ListingResourceVersion
		*out = new(string)
		**out = **in
	}
	if in.OracleTermsOfUseLink != nil {
		in, out := &in.OracleTermsOfUseLink, &out.OracleTermsOfUseLink
		*out = new(string)
		**out = **in
	}
	if in.Signature != nil {
		in, out := &in.Signature, &out.Signature
		*out = new(string)
		**out = **in
	}
	if in.TimeRetrieved != nil {
		in, out := &in.TimeRetrieved, &out.TimeRetrieved
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogSubscriptionParameters.
func (in *AppCatalogSubscriptionParameters) DeepCopy() *AppCatalogSubscriptionParameters {
	if in == nil {
		return nil
	}
	out := new(AppCatalogSubscriptionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogSubscriptionSpec) DeepCopyInto(out *AppCatalogSubscriptionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogSubscriptionSpec.
func (in *AppCatalogSubscriptionSpec) DeepCopy() *AppCatalogSubscriptionSpec {
	if in == nil {
		return nil
	}
	out := new(AppCatalogSubscriptionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AppCatalogSubscriptionStatus) DeepCopyInto(out *AppCatalogSubscriptionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AppCatalogSubscriptionStatus.
func (in *AppCatalogSubscriptionStatus) DeepCopy() *AppCatalogSubscriptionStatus {
	if in == nil {
		return nil
	}
	out := new(AppCatalogSubscriptionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachDetailsInitParameters) DeepCopyInto(out *AttachDetailsInitParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachDetailsInitParameters.
func (in *AttachDetailsInitParameters) DeepCopy() *AttachDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(AttachDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachDetailsObservation) DeepCopyInto(out *AttachDetailsObservation) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachDetailsObservation.
func (in *AttachDetailsObservation) DeepCopy() *AttachDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(AttachDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AttachDetailsParameters) DeepCopyInto(out *AttachDetailsParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AttachDetailsParameters.
func (in *AttachDetailsParameters) DeepCopy() *AttachDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(AttachDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutotunePoliciesInitParameters) DeepCopyInto(out *AutotunePoliciesInitParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutotunePoliciesInitParameters.
func (in *AutotunePoliciesInitParameters) DeepCopy() *AutotunePoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(AutotunePoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutotunePoliciesObservation) DeepCopyInto(out *AutotunePoliciesObservation) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutotunePoliciesObservation.
func (in *AutotunePoliciesObservation) DeepCopy() *AutotunePoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(AutotunePoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AutotunePoliciesParameters) DeepCopyInto(out *AutotunePoliciesParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AutotunePoliciesParameters.
func (in *AutotunePoliciesParameters) DeepCopy() *AutotunePoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(AutotunePoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityConfigInitParameters) DeepCopyInto(out *AvailabilityConfigInitParameters) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityConfigInitParameters.
func (in *AvailabilityConfigInitParameters) DeepCopy() *AvailabilityConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(AvailabilityConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityConfigObservation) DeepCopyInto(out *AvailabilityConfigObservation) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityConfigObservation.
func (in *AvailabilityConfigObservation) DeepCopy() *AvailabilityConfigObservation {
	if in == nil {
		return nil
	}
	out := new(AvailabilityConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AvailabilityConfigParameters) DeepCopyInto(out *AvailabilityConfigParameters) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AvailabilityConfigParameters.
func (in *AvailabilityConfigParameters) DeepCopy() *AvailabilityConfigParameters {
	if in == nil {
		return nil
	}
	out := new(AvailabilityConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BGPSessionInfoInitParameters) DeepCopyInto(out *BGPSessionInfoInitParameters) {
	*out = *in
	if in.CustomerBGPAsn != nil {
		in, out := &in.CustomerBGPAsn, &out.CustomerBGPAsn
		*out = new(string)
		**out = **in
	}
	if in.CustomerInterfaceIP != nil {
		in, out := &in.CustomerInterfaceIP, &out.CustomerInterfaceIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerInterfaceIPv6 != nil {
		in, out := &in.CustomerInterfaceIPv6, &out.CustomerInterfaceIPv6
		*out = new(string)
		**out = **in
	}
	if in.OracleInterfaceIP != nil {
		in, out := &in.OracleInterfaceIP, &out.OracleInterfaceIP
		*out = new(string)
		**out = **in
	}
	if in.OracleInterfaceIPv6 != nil {
		in, out := &in.OracleInterfaceIPv6, &out.OracleInterfaceIPv6
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BGPSessionInfoInitParameters.
func (in *BGPSessionInfoInitParameters) DeepCopy() *BGPSessionInfoInitParameters {
	if in == nil {
		return nil
	}
	out := new(BGPSessionInfoInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BGPSessionInfoObservation) DeepCopyInto(out *BGPSessionInfoObservation) {
	*out = *in
	if in.BGPIPv6State != nil {
		in, out := &in.BGPIPv6State, &out.BGPIPv6State
		*out = new(string)
		**out = **in
	}
	if in.BGPIpv6State != nil {
		in, out := &in.BGPIpv6State, &out.BGPIpv6State
		*out = new(string)
		**out = **in
	}
	if in.BGPState != nil {
		in, out := &in.BGPState, &out.BGPState
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPAsn != nil {
		in, out := &in.CustomerBGPAsn, &out.CustomerBGPAsn
		*out = new(string)
		**out = **in
	}
	if in.CustomerInterfaceIP != nil {
		in, out := &in.CustomerInterfaceIP, &out.CustomerInterfaceIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerInterfaceIPv6 != nil {
		in, out := &in.CustomerInterfaceIPv6, &out.CustomerInterfaceIPv6
		*out = new(string)
		**out = **in
	}
	if in.OracleBGPAsn != nil {
		in, out := &in.OracleBGPAsn, &out.OracleBGPAsn
		*out = new(string)
		**out = **in
	}
	if in.OracleInterfaceIP != nil {
		in, out := &in.OracleInterfaceIP, &out.OracleInterfaceIP
		*out = new(string)
		**out = **in
	}
	if in.OracleInterfaceIPv6 != nil {
		in, out := &in.OracleInterfaceIPv6, &out.OracleInterfaceIPv6
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BGPSessionInfoObservation.
func (in *BGPSessionInfoObservation) DeepCopy() *BGPSessionInfoObservation {
	if in == nil {
		return nil
	}
	out := new(BGPSessionInfoObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BGPSessionInfoParameters) DeepCopyInto(out *BGPSessionInfoParameters) {
	*out = *in
	if in.CustomerBGPAsn != nil {
		in, out := &in.CustomerBGPAsn, &out.CustomerBGPAsn
		*out = new(string)
		**out = **in
	}
	if in.CustomerInterfaceIP != nil {
		in, out := &in.CustomerInterfaceIP, &out.CustomerInterfaceIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerInterfaceIPv6 != nil {
		in, out := &in.CustomerInterfaceIPv6, &out.CustomerInterfaceIPv6
		*out = new(string)
		**out = **in
	}
	if in.OracleInterfaceIP != nil {
		in, out := &in.OracleInterfaceIP, &out.OracleInterfaceIP
		*out = new(string)
		**out = **in
	}
	if in.OracleInterfaceIPv6 != nil {
		in, out := &in.OracleInterfaceIPv6, &out.OracleInterfaceIPv6
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BGPSessionInfoParameters.
func (in *BGPSessionInfoParameters) DeepCopy() *BGPSessionInfoParameters {
	if in == nil {
		return nil
	}
	out := new(BGPSessionInfoParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumeReplicasInitParameters) DeepCopyInto(out *BlockVolumeReplicasInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumeReplicasInitParameters.
func (in *BlockVolumeReplicasInitParameters) DeepCopy() *BlockVolumeReplicasInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumeReplicasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumeReplicasObservation) DeepCopyInto(out *BlockVolumeReplicasObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumeReplicasObservation.
func (in *BlockVolumeReplicasObservation) DeepCopy() *BlockVolumeReplicasObservation {
	if in == nil {
		return nil
	}
	out := new(BlockVolumeReplicasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumeReplicasParameters) DeepCopyInto(out *BlockVolumeReplicasParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumeReplicasParameters.
func (in *BlockVolumeReplicasParameters) DeepCopy() *BlockVolumeReplicasParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumeReplicasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesAttachDetailsInitParameters) DeepCopyInto(out *BlockVolumesAttachDetailsInitParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesAttachDetailsInitParameters.
func (in *BlockVolumesAttachDetailsInitParameters) DeepCopy() *BlockVolumesAttachDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesAttachDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesAttachDetailsObservation) DeepCopyInto(out *BlockVolumesAttachDetailsObservation) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesAttachDetailsObservation.
func (in *BlockVolumesAttachDetailsObservation) DeepCopy() *BlockVolumesAttachDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesAttachDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesAttachDetailsParameters) DeepCopyInto(out *BlockVolumesAttachDetailsParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesAttachDetailsParameters.
func (in *BlockVolumesAttachDetailsParameters) DeepCopy() *BlockVolumesAttachDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesAttachDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesCreateDetailsAutotunePoliciesInitParameters) DeepCopyInto(out *BlockVolumesCreateDetailsAutotunePoliciesInitParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesCreateDetailsAutotunePoliciesInitParameters.
func (in *BlockVolumesCreateDetailsAutotunePoliciesInitParameters) DeepCopy() *BlockVolumesCreateDetailsAutotunePoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesCreateDetailsAutotunePoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesCreateDetailsAutotunePoliciesObservation) DeepCopyInto(out *BlockVolumesCreateDetailsAutotunePoliciesObservation) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesCreateDetailsAutotunePoliciesObservation.
func (in *BlockVolumesCreateDetailsAutotunePoliciesObservation) DeepCopy() *BlockVolumesCreateDetailsAutotunePoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesCreateDetailsAutotunePoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesCreateDetailsAutotunePoliciesParameters) DeepCopyInto(out *BlockVolumesCreateDetailsAutotunePoliciesParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesCreateDetailsAutotunePoliciesParameters.
func (in *BlockVolumesCreateDetailsAutotunePoliciesParameters) DeepCopy() *BlockVolumesCreateDetailsAutotunePoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesCreateDetailsAutotunePoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesCreateDetailsInitParameters) DeepCopyInto(out *BlockVolumesCreateDetailsInitParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]BlockVolumesCreateDetailsAutotunePoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]CreateDetailsBlockVolumeReplicasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]BlockVolumesCreateDetailsSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesCreateDetailsInitParameters.
func (in *BlockVolumesCreateDetailsInitParameters) DeepCopy() *BlockVolumesCreateDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesCreateDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesCreateDetailsObservation) DeepCopyInto(out *BlockVolumesCreateDetailsObservation) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]BlockVolumesCreateDetailsAutotunePoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]CreateDetailsBlockVolumeReplicasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]BlockVolumesCreateDetailsSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesCreateDetailsObservation.
func (in *BlockVolumesCreateDetailsObservation) DeepCopy() *BlockVolumesCreateDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesCreateDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesCreateDetailsParameters) DeepCopyInto(out *BlockVolumesCreateDetailsParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]BlockVolumesCreateDetailsAutotunePoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]CreateDetailsBlockVolumeReplicasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]BlockVolumesCreateDetailsSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesCreateDetailsParameters.
func (in *BlockVolumesCreateDetailsParameters) DeepCopy() *BlockVolumesCreateDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesCreateDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesCreateDetailsSourceDetailsInitParameters) DeepCopyInto(out *BlockVolumesCreateDetailsSourceDetailsInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesCreateDetailsSourceDetailsInitParameters.
func (in *BlockVolumesCreateDetailsSourceDetailsInitParameters) DeepCopy() *BlockVolumesCreateDetailsSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesCreateDetailsSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesCreateDetailsSourceDetailsObservation) DeepCopyInto(out *BlockVolumesCreateDetailsSourceDetailsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesCreateDetailsSourceDetailsObservation.
func (in *BlockVolumesCreateDetailsSourceDetailsObservation) DeepCopy() *BlockVolumesCreateDetailsSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesCreateDetailsSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesCreateDetailsSourceDetailsParameters) DeepCopyInto(out *BlockVolumesCreateDetailsSourceDetailsParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesCreateDetailsSourceDetailsParameters.
func (in *BlockVolumesCreateDetailsSourceDetailsParameters) DeepCopy() *BlockVolumesCreateDetailsSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesCreateDetailsSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesInitParameters) DeepCopyInto(out *BlockVolumesInitParameters) {
	*out = *in
	if in.AttachDetails != nil {
		in, out := &in.AttachDetails, &out.AttachDetails
		*out = make([]AttachDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateDetails != nil {
		in, out := &in.CreateDetails, &out.CreateDetails
		*out = make([]CreateDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesInitParameters.
func (in *BlockVolumesInitParameters) DeepCopy() *BlockVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesObservation) DeepCopyInto(out *BlockVolumesObservation) {
	*out = *in
	if in.AttachDetails != nil {
		in, out := &in.AttachDetails, &out.AttachDetails
		*out = make([]AttachDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateDetails != nil {
		in, out := &in.CreateDetails, &out.CreateDetails
		*out = make([]CreateDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesObservation.
func (in *BlockVolumesObservation) DeepCopy() *BlockVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BlockVolumesParameters) DeepCopyInto(out *BlockVolumesParameters) {
	*out = *in
	if in.AttachDetails != nil {
		in, out := &in.AttachDetails, &out.AttachDetails
		*out = make([]AttachDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateDetails != nil {
		in, out := &in.CreateDetails, &out.CreateDetails
		*out = make([]CreateDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BlockVolumesParameters.
func (in *BlockVolumesParameters) DeepCopy() *BlockVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(BlockVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolume) DeepCopyInto(out *BootVolume) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolume.
func (in *BootVolume) DeepCopy() *BootVolume {
	if in == nil {
		return nil
	}
	out := new(BootVolume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BootVolume) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackup) DeepCopyInto(out *BootVolumeBackup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackup.
func (in *BootVolumeBackup) DeepCopy() *BootVolumeBackup {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BootVolumeBackup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupInitParameters) DeepCopyInto(out *BootVolumeBackupInitParameters) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]BootVolumeBackupSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupInitParameters.
func (in *BootVolumeBackupInitParameters) DeepCopy() *BootVolumeBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupList) DeepCopyInto(out *BootVolumeBackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BootVolumeBackup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupList.
func (in *BootVolumeBackupList) DeepCopy() *BootVolumeBackupList {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BootVolumeBackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupObservation) DeepCopyInto(out *BootVolumeBackupObservation) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceBootVolumeBackupID != nil {
		in, out := &in.SourceBootVolumeBackupID, &out.SourceBootVolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]BootVolumeBackupSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeRequestReceived != nil {
		in, out := &in.TimeRequestReceived, &out.TimeRequestReceived
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UniqueSizeInGbs != nil {
		in, out := &in.UniqueSizeInGbs, &out.UniqueSizeInGbs
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupObservation.
func (in *BootVolumeBackupObservation) DeepCopy() *BootVolumeBackupObservation {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupParameters) DeepCopyInto(out *BootVolumeBackupParameters) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]BootVolumeBackupSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupParameters.
func (in *BootVolumeBackupParameters) DeepCopy() *BootVolumeBackupParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupSourceDetailsInitParameters) DeepCopyInto(out *BootVolumeBackupSourceDetailsInitParameters) {
	*out = *in
	if in.BootVolumeBackupID != nil {
		in, out := &in.BootVolumeBackupID, &out.BootVolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupSourceDetailsInitParameters.
func (in *BootVolumeBackupSourceDetailsInitParameters) DeepCopy() *BootVolumeBackupSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupSourceDetailsObservation) DeepCopyInto(out *BootVolumeBackupSourceDetailsObservation) {
	*out = *in
	if in.BootVolumeBackupID != nil {
		in, out := &in.BootVolumeBackupID, &out.BootVolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupSourceDetailsObservation.
func (in *BootVolumeBackupSourceDetailsObservation) DeepCopy() *BootVolumeBackupSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupSourceDetailsParameters) DeepCopyInto(out *BootVolumeBackupSourceDetailsParameters) {
	*out = *in
	if in.BootVolumeBackupID != nil {
		in, out := &in.BootVolumeBackupID, &out.BootVolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupSourceDetailsParameters.
func (in *BootVolumeBackupSourceDetailsParameters) DeepCopy() *BootVolumeBackupSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupSpec) DeepCopyInto(out *BootVolumeBackupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupSpec.
func (in *BootVolumeBackupSpec) DeepCopy() *BootVolumeBackupSpec {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeBackupStatus) DeepCopyInto(out *BootVolumeBackupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeBackupStatus.
func (in *BootVolumeBackupStatus) DeepCopy() *BootVolumeBackupStatus {
	if in == nil {
		return nil
	}
	out := new(BootVolumeBackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeInitParameters) DeepCopyInto(out *BootVolumeInitParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]AutotunePoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeReplicas != nil {
		in, out := &in.BootVolumeReplicas, &out.BootVolumeReplicas
		*out = make([]BootVolumeReplicasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BootVolumeReplicasDeletion != nil {
		in, out := &in.BootVolumeReplicasDeletion, &out.BootVolumeReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]SourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeInitParameters.
func (in *BootVolumeInitParameters) DeepCopy() *BootVolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeList) DeepCopyInto(out *BootVolumeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]BootVolume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeList.
func (in *BootVolumeList) DeepCopy() *BootVolumeList {
	if in == nil {
		return nil
	}
	out := new(BootVolumeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *BootVolumeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeObservation) DeepCopyInto(out *BootVolumeObservation) {
	*out = *in
	if in.AutoTunedVpusPerGb != nil {
		in, out := &in.AutoTunedVpusPerGb, &out.AutoTunedVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]AutotunePoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeReplicas != nil {
		in, out := &in.BootVolumeReplicas, &out.BootVolumeReplicas
		*out = make([]BootVolumeReplicasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BootVolumeReplicasDeletion != nil {
		in, out := &in.BootVolumeReplicasDeletion, &out.BootVolumeReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsHydrated != nil {
		in, out := &in.IsHydrated, &out.IsHydrated
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]SourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeObservation.
func (in *BootVolumeObservation) DeepCopy() *BootVolumeObservation {
	if in == nil {
		return nil
	}
	out := new(BootVolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeParameters) DeepCopyInto(out *BootVolumeParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]AutotunePoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeReplicas != nil {
		in, out := &in.BootVolumeReplicas, &out.BootVolumeReplicas
		*out = make([]BootVolumeReplicasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BootVolumeReplicasDeletion != nil {
		in, out := &in.BootVolumeReplicasDeletion, &out.BootVolumeReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]SourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeParameters.
func (in *BootVolumeParameters) DeepCopy() *BootVolumeParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeReplicasInitParameters) DeepCopyInto(out *BootVolumeReplicasInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeReplicasInitParameters.
func (in *BootVolumeReplicasInitParameters) DeepCopy() *BootVolumeReplicasInitParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeReplicasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeReplicasObservation) DeepCopyInto(out *BootVolumeReplicasObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeReplicaID != nil {
		in, out := &in.BootVolumeReplicaID, &out.BootVolumeReplicaID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeReplicasObservation.
func (in *BootVolumeReplicasObservation) DeepCopy() *BootVolumeReplicasObservation {
	if in == nil {
		return nil
	}
	out := new(BootVolumeReplicasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeReplicasParameters) DeepCopyInto(out *BootVolumeReplicasParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeReplicasParameters.
func (in *BootVolumeReplicasParameters) DeepCopy() *BootVolumeReplicasParameters {
	if in == nil {
		return nil
	}
	out := new(BootVolumeReplicasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeSpec) DeepCopyInto(out *BootVolumeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeSpec.
func (in *BootVolumeSpec) DeepCopy() *BootVolumeSpec {
	if in == nil {
		return nil
	}
	out := new(BootVolumeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BootVolumeStatus) DeepCopyInto(out *BootVolumeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BootVolumeStatus.
func (in *BootVolumeStatus) DeepCopy() *BootVolumeStatus {
	if in == nil {
		return nil
	}
	out := new(BootVolumeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Byoipv6CidrDetailsInitParameters) DeepCopyInto(out *Byoipv6CidrDetailsInitParameters) {
	*out = *in
	if in.Byoipv6RangeID != nil {
		in, out := &in.Byoipv6RangeID, &out.Byoipv6RangeID
		*out = new(string)
		**out = **in
	}
	if in.Ipv6CidrBlock != nil {
		in, out := &in.Ipv6CidrBlock, &out.Ipv6CidrBlock
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Byoipv6CidrDetailsInitParameters.
func (in *Byoipv6CidrDetailsInitParameters) DeepCopy() *Byoipv6CidrDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(Byoipv6CidrDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Byoipv6CidrDetailsObservation) DeepCopyInto(out *Byoipv6CidrDetailsObservation) {
	*out = *in
	if in.Byoipv6RangeID != nil {
		in, out := &in.Byoipv6RangeID, &out.Byoipv6RangeID
		*out = new(string)
		**out = **in
	}
	if in.Ipv6CidrBlock != nil {
		in, out := &in.Ipv6CidrBlock, &out.Ipv6CidrBlock
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Byoipv6CidrDetailsObservation.
func (in *Byoipv6CidrDetailsObservation) DeepCopy() *Byoipv6CidrDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(Byoipv6CidrDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Byoipv6CidrDetailsParameters) DeepCopyInto(out *Byoipv6CidrDetailsParameters) {
	*out = *in
	if in.Byoipv6RangeID != nil {
		in, out := &in.Byoipv6RangeID, &out.Byoipv6RangeID
		*out = new(string)
		**out = **in
	}
	if in.Ipv6CidrBlock != nil {
		in, out := &in.Ipv6CidrBlock, &out.Ipv6CidrBlock
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Byoipv6CidrDetailsParameters.
func (in *Byoipv6CidrDetailsParameters) DeepCopy() *Byoipv6CidrDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(Byoipv6CidrDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CaptureFilter) DeepCopyInto(out *CaptureFilter) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CaptureFilter.
func (in *CaptureFilter) DeepCopy() *CaptureFilter {
	if in == nil {
		return nil
	}
	out := new(CaptureFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CaptureFilter) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CaptureFilterInitParameters) DeepCopyInto(out *CaptureFilterInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.FlowLogCaptureFilterRules != nil {
		in, out := &in.FlowLogCaptureFilterRules, &out.FlowLogCaptureFilterRules
		*out = make([]FlowLogCaptureFilterRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VtapCaptureFilterRules != nil {
		in, out := &in.VtapCaptureFilterRules, &out.VtapCaptureFilterRules
		*out = make([]VtapCaptureFilterRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CaptureFilterInitParameters.
func (in *CaptureFilterInitParameters) DeepCopy() *CaptureFilterInitParameters {
	if in == nil {
		return nil
	}
	out := new(CaptureFilterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CaptureFilterList) DeepCopyInto(out *CaptureFilterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CaptureFilter, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CaptureFilterList.
func (in *CaptureFilterList) DeepCopy() *CaptureFilterList {
	if in == nil {
		return nil
	}
	out := new(CaptureFilterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CaptureFilterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CaptureFilterObservation) DeepCopyInto(out *CaptureFilterObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.FlowLogCaptureFilterRules != nil {
		in, out := &in.FlowLogCaptureFilterRules, &out.FlowLogCaptureFilterRules
		*out = make([]FlowLogCaptureFilterRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VtapCaptureFilterRules != nil {
		in, out := &in.VtapCaptureFilterRules, &out.VtapCaptureFilterRules
		*out = make([]VtapCaptureFilterRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CaptureFilterObservation.
func (in *CaptureFilterObservation) DeepCopy() *CaptureFilterObservation {
	if in == nil {
		return nil
	}
	out := new(CaptureFilterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CaptureFilterParameters) DeepCopyInto(out *CaptureFilterParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FilterType != nil {
		in, out := &in.FilterType, &out.FilterType
		*out = new(string)
		**out = **in
	}
	if in.FlowLogCaptureFilterRules != nil {
		in, out := &in.FlowLogCaptureFilterRules, &out.FlowLogCaptureFilterRules
		*out = make([]FlowLogCaptureFilterRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VtapCaptureFilterRules != nil {
		in, out := &in.VtapCaptureFilterRules, &out.VtapCaptureFilterRules
		*out = make([]VtapCaptureFilterRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CaptureFilterParameters.
func (in *CaptureFilterParameters) DeepCopy() *CaptureFilterParameters {
	if in == nil {
		return nil
	}
	out := new(CaptureFilterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CaptureFilterSpec) DeepCopyInto(out *CaptureFilterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CaptureFilterSpec.
func (in *CaptureFilterSpec) DeepCopy() *CaptureFilterSpec {
	if in == nil {
		return nil
	}
	out := new(CaptureFilterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CaptureFilterStatus) DeepCopyInto(out *CaptureFilterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CaptureFilterStatus.
func (in *CaptureFilterStatus) DeepCopy() *CaptureFilterStatus {
	if in == nil {
		return nil
	}
	out := new(CaptureFilterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigInitParameters) DeepCopyInto(out *ClusterConfigInitParameters) {
	*out = *in
	if in.HpcIslandID != nil {
		in, out := &in.HpcIslandID, &out.HpcIslandID
		*out = new(string)
		**out = **in
	}
	if in.NetworkBlockIds != nil {
		in, out := &in.NetworkBlockIds, &out.NetworkBlockIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigInitParameters.
func (in *ClusterConfigInitParameters) DeepCopy() *ClusterConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigObservation) DeepCopyInto(out *ClusterConfigObservation) {
	*out = *in
	if in.HpcIslandID != nil {
		in, out := &in.HpcIslandID, &out.HpcIslandID
		*out = new(string)
		**out = **in
	}
	if in.NetworkBlockIds != nil {
		in, out := &in.NetworkBlockIds, &out.NetworkBlockIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigObservation.
func (in *ClusterConfigObservation) DeepCopy() *ClusterConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigParameters) DeepCopyInto(out *ClusterConfigParameters) {
	*out = *in
	if in.HpcIslandID != nil {
		in, out := &in.HpcIslandID, &out.HpcIslandID
		*out = new(string)
		**out = **in
	}
	if in.NetworkBlockIds != nil {
		in, out := &in.NetworkBlockIds, &out.NetworkBlockIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigParameters.
func (in *ClusterConfigParameters) DeepCopy() *ClusterConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigurationInitParameters) DeepCopyInto(out *ClusterConfigurationInitParameters) {
	*out = *in
	if in.HpcIslandID != nil {
		in, out := &in.HpcIslandID, &out.HpcIslandID
		*out = new(string)
		**out = **in
	}
	if in.NetworkBlockIds != nil {
		in, out := &in.NetworkBlockIds, &out.NetworkBlockIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigurationInitParameters.
func (in *ClusterConfigurationInitParameters) DeepCopy() *ClusterConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigurationObservation) DeepCopyInto(out *ClusterConfigurationObservation) {
	*out = *in
	if in.HpcIslandID != nil {
		in, out := &in.HpcIslandID, &out.HpcIslandID
		*out = new(string)
		**out = **in
	}
	if in.NetworkBlockIds != nil {
		in, out := &in.NetworkBlockIds, &out.NetworkBlockIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigurationObservation.
func (in *ClusterConfigurationObservation) DeepCopy() *ClusterConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterConfigurationParameters) DeepCopyInto(out *ClusterConfigurationParameters) {
	*out = *in
	if in.HpcIslandID != nil {
		in, out := &in.HpcIslandID, &out.HpcIslandID
		*out = new(string)
		**out = **in
	}
	if in.NetworkBlockIds != nil {
		in, out := &in.NetworkBlockIds, &out.NetworkBlockIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterConfigurationParameters.
func (in *ClusterConfigurationParameters) DeepCopy() *ClusterConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetwork) DeepCopyInto(out *ClusterNetwork) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetwork.
func (in *ClusterNetwork) DeepCopy() *ClusterNetwork {
	if in == nil {
		return nil
	}
	out := new(ClusterNetwork)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterNetwork) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetworkInitParameters) DeepCopyInto(out *ClusterNetworkInitParameters) {
	*out = *in
	if in.ClusterConfiguration != nil {
		in, out := &in.ClusterConfiguration, &out.ClusterConfiguration
		*out = make([]ClusterConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstancePools != nil {
		in, out := &in.InstancePools, &out.InstancePools
		*out = make([]InstancePoolsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConfiguration != nil {
		in, out := &in.PlacementConfiguration, &out.PlacementConfiguration
		*out = make([]PlacementConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetworkInitParameters.
func (in *ClusterNetworkInitParameters) DeepCopy() *ClusterNetworkInitParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterNetworkInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetworkList) DeepCopyInto(out *ClusterNetworkList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ClusterNetwork, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetworkList.
func (in *ClusterNetworkList) DeepCopy() *ClusterNetworkList {
	if in == nil {
		return nil
	}
	out := new(ClusterNetworkList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ClusterNetworkList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetworkObservation) DeepCopyInto(out *ClusterNetworkObservation) {
	*out = *in
	if in.ClusterConfiguration != nil {
		in, out := &in.ClusterConfiguration, &out.ClusterConfiguration
		*out = make([]ClusterConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HpcIslandID != nil {
		in, out := &in.HpcIslandID, &out.HpcIslandID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstancePools != nil {
		in, out := &in.InstancePools, &out.InstancePools
		*out = make([]InstancePoolsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkBlockIds != nil {
		in, out := &in.NetworkBlockIds, &out.NetworkBlockIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PlacementConfiguration != nil {
		in, out := &in.PlacementConfiguration, &out.PlacementConfiguration
		*out = make([]PlacementConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeUpdated != nil {
		in, out := &in.TimeUpdated, &out.TimeUpdated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetworkObservation.
func (in *ClusterNetworkObservation) DeepCopy() *ClusterNetworkObservation {
	if in == nil {
		return nil
	}
	out := new(ClusterNetworkObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetworkParameters) DeepCopyInto(out *ClusterNetworkParameters) {
	*out = *in
	if in.ClusterConfiguration != nil {
		in, out := &in.ClusterConfiguration, &out.ClusterConfiguration
		*out = make([]ClusterConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstancePools != nil {
		in, out := &in.InstancePools, &out.InstancePools
		*out = make([]InstancePoolsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConfiguration != nil {
		in, out := &in.PlacementConfiguration, &out.PlacementConfiguration
		*out = make([]PlacementConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetworkParameters.
func (in *ClusterNetworkParameters) DeepCopy() *ClusterNetworkParameters {
	if in == nil {
		return nil
	}
	out := new(ClusterNetworkParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetworkSpec) DeepCopyInto(out *ClusterNetworkSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetworkSpec.
func (in *ClusterNetworkSpec) DeepCopy() *ClusterNetworkSpec {
	if in == nil {
		return nil
	}
	out := new(ClusterNetworkSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ClusterNetworkStatus) DeepCopyInto(out *ClusterNetworkStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ClusterNetworkStatus.
func (in *ClusterNetworkStatus) DeepCopy() *ClusterNetworkStatus {
	if in == nil {
		return nil
	}
	out := new(ClusterNetworkStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityReservation) DeepCopyInto(out *ComputeCapacityReservation) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityReservation.
func (in *ComputeCapacityReservation) DeepCopy() *ComputeCapacityReservation {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityReservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeCapacityReservation) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityReservationInitParameters) DeepCopyInto(out *ComputeCapacityReservationInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceReservationConfigs != nil {
		in, out := &in.InstanceReservationConfigs, &out.InstanceReservationConfigs
		*out = make([]InstanceReservationConfigsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefaultReservation != nil {
		in, out := &in.IsDefaultReservation, &out.IsDefaultReservation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityReservationInitParameters.
func (in *ComputeCapacityReservationInitParameters) DeepCopy() *ComputeCapacityReservationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityReservationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityReservationList) DeepCopyInto(out *ComputeCapacityReservationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ComputeCapacityReservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityReservationList.
func (in *ComputeCapacityReservationList) DeepCopy() *ComputeCapacityReservationList {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityReservationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeCapacityReservationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityReservationObservation) DeepCopyInto(out *ComputeCapacityReservationObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceReservationConfigs != nil {
		in, out := &in.InstanceReservationConfigs, &out.InstanceReservationConfigs
		*out = make([]InstanceReservationConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefaultReservation != nil {
		in, out := &in.IsDefaultReservation, &out.IsDefaultReservation
		*out = new(bool)
		**out = **in
	}
	if in.ReservedInstanceCount != nil {
		in, out := &in.ReservedInstanceCount, &out.ReservedInstanceCount
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeUpdated != nil {
		in, out := &in.TimeUpdated, &out.TimeUpdated
		*out = new(string)
		**out = **in
	}
	if in.UsedInstanceCount != nil {
		in, out := &in.UsedInstanceCount, &out.UsedInstanceCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityReservationObservation.
func (in *ComputeCapacityReservationObservation) DeepCopy() *ComputeCapacityReservationObservation {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityReservationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityReservationParameters) DeepCopyInto(out *ComputeCapacityReservationParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceReservationConfigs != nil {
		in, out := &in.InstanceReservationConfigs, &out.InstanceReservationConfigs
		*out = make([]InstanceReservationConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsDefaultReservation != nil {
		in, out := &in.IsDefaultReservation, &out.IsDefaultReservation
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityReservationParameters.
func (in *ComputeCapacityReservationParameters) DeepCopy() *ComputeCapacityReservationParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityReservationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityReservationSpec) DeepCopyInto(out *ComputeCapacityReservationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityReservationSpec.
func (in *ComputeCapacityReservationSpec) DeepCopy() *ComputeCapacityReservationSpec {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityReservationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCapacityReservationStatus) DeepCopyInto(out *ComputeCapacityReservationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCapacityReservationStatus.
func (in *ComputeCapacityReservationStatus) DeepCopy() *ComputeCapacityReservationStatus {
	if in == nil {
		return nil
	}
	out := new(ComputeCapacityReservationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeCluster) DeepCopyInto(out *ComputeCluster) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeCluster.
func (in *ComputeCluster) DeepCopy() *ComputeCluster {
	if in == nil {
		return nil
	}
	out := new(ComputeCluster)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeCluster) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeClusterInitParameters) DeepCopyInto(out *ComputeClusterInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeClusterInitParameters.
func (in *ComputeClusterInitParameters) DeepCopy() *ComputeClusterInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeClusterInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeClusterList) DeepCopyInto(out *ComputeClusterList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ComputeCluster, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeClusterList.
func (in *ComputeClusterList) DeepCopy() *ComputeClusterList {
	if in == nil {
		return nil
	}
	out := new(ComputeClusterList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeClusterList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeClusterObservation) DeepCopyInto(out *ComputeClusterObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeClusterObservation.
func (in *ComputeClusterObservation) DeepCopy() *ComputeClusterObservation {
	if in == nil {
		return nil
	}
	out := new(ComputeClusterObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeClusterParameters) DeepCopyInto(out *ComputeClusterParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeClusterParameters.
func (in *ComputeClusterParameters) DeepCopy() *ComputeClusterParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeClusterParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeClusterSpec) DeepCopyInto(out *ComputeClusterSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeClusterSpec.
func (in *ComputeClusterSpec) DeepCopy() *ComputeClusterSpec {
	if in == nil {
		return nil
	}
	out := new(ComputeClusterSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeClusterStatus) DeepCopyInto(out *ComputeClusterStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeClusterStatus.
func (in *ComputeClusterStatus) DeepCopy() *ComputeClusterStatus {
	if in == nil {
		return nil
	}
	out := new(ComputeClusterStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeImageCapabilitySchema) DeepCopyInto(out *ComputeImageCapabilitySchema) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeImageCapabilitySchema.
func (in *ComputeImageCapabilitySchema) DeepCopy() *ComputeImageCapabilitySchema {
	if in == nil {
		return nil
	}
	out := new(ComputeImageCapabilitySchema)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeImageCapabilitySchema) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeImageCapabilitySchemaInitParameters) DeepCopyInto(out *ComputeImageCapabilitySchemaInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ComputeGlobalImageCapabilitySchemaVersionName != nil {
		in, out := &in.ComputeGlobalImageCapabilitySchemaVersionName, &out.ComputeGlobalImageCapabilitySchemaVersionName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.SchemaData != nil {
		in, out := &in.SchemaData, &out.SchemaData
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeImageCapabilitySchemaInitParameters.
func (in *ComputeImageCapabilitySchemaInitParameters) DeepCopy() *ComputeImageCapabilitySchemaInitParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeImageCapabilitySchemaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeImageCapabilitySchemaList) DeepCopyInto(out *ComputeImageCapabilitySchemaList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ComputeImageCapabilitySchema, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeImageCapabilitySchemaList.
func (in *ComputeImageCapabilitySchemaList) DeepCopy() *ComputeImageCapabilitySchemaList {
	if in == nil {
		return nil
	}
	out := new(ComputeImageCapabilitySchemaList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ComputeImageCapabilitySchemaList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeImageCapabilitySchemaObservation) DeepCopyInto(out *ComputeImageCapabilitySchemaObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ComputeGlobalImageCapabilitySchemaID != nil {
		in, out := &in.ComputeGlobalImageCapabilitySchemaID, &out.ComputeGlobalImageCapabilitySchemaID
		*out = new(string)
		**out = **in
	}
	if in.ComputeGlobalImageCapabilitySchemaVersionName != nil {
		in, out := &in.ComputeGlobalImageCapabilitySchemaVersionName, &out.ComputeGlobalImageCapabilitySchemaVersionName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.SchemaData != nil {
		in, out := &in.SchemaData, &out.SchemaData
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeImageCapabilitySchemaObservation.
func (in *ComputeImageCapabilitySchemaObservation) DeepCopy() *ComputeImageCapabilitySchemaObservation {
	if in == nil {
		return nil
	}
	out := new(ComputeImageCapabilitySchemaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeImageCapabilitySchemaParameters) DeepCopyInto(out *ComputeImageCapabilitySchemaParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ComputeGlobalImageCapabilitySchemaVersionName != nil {
		in, out := &in.ComputeGlobalImageCapabilitySchemaVersionName, &out.ComputeGlobalImageCapabilitySchemaVersionName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.SchemaData != nil {
		in, out := &in.SchemaData, &out.SchemaData
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeImageCapabilitySchemaParameters.
func (in *ComputeImageCapabilitySchemaParameters) DeepCopy() *ComputeImageCapabilitySchemaParameters {
	if in == nil {
		return nil
	}
	out := new(ComputeImageCapabilitySchemaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeImageCapabilitySchemaSpec) DeepCopyInto(out *ComputeImageCapabilitySchemaSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeImageCapabilitySchemaSpec.
func (in *ComputeImageCapabilitySchemaSpec) DeepCopy() *ComputeImageCapabilitySchemaSpec {
	if in == nil {
		return nil
	}
	out := new(ComputeImageCapabilitySchemaSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ComputeImageCapabilitySchemaStatus) DeepCopyInto(out *ComputeImageCapabilitySchemaStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ComputeImageCapabilitySchemaStatus.
func (in *ComputeImageCapabilitySchemaStatus) DeepCopy() *ComputeImageCapabilitySchemaStatus {
	if in == nil {
		return nil
	}
	out := new(ComputeImageCapabilitySchemaStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleHistory) DeepCopyInto(out *ConsoleHistory) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleHistory.
func (in *ConsoleHistory) DeepCopy() *ConsoleHistory {
	if in == nil {
		return nil
	}
	out := new(ConsoleHistory)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConsoleHistory) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleHistoryInitParameters) DeepCopyInto(out *ConsoleHistoryInitParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleHistoryInitParameters.
func (in *ConsoleHistoryInitParameters) DeepCopy() *ConsoleHistoryInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConsoleHistoryInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleHistoryList) DeepCopyInto(out *ConsoleHistoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ConsoleHistory, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleHistoryList.
func (in *ConsoleHistoryList) DeepCopy() *ConsoleHistoryList {
	if in == nil {
		return nil
	}
	out := new(ConsoleHistoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ConsoleHistoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleHistoryObservation) DeepCopyInto(out *ConsoleHistoryObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleHistoryObservation.
func (in *ConsoleHistoryObservation) DeepCopy() *ConsoleHistoryObservation {
	if in == nil {
		return nil
	}
	out := new(ConsoleHistoryObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleHistoryParameters) DeepCopyInto(out *ConsoleHistoryParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleHistoryParameters.
func (in *ConsoleHistoryParameters) DeepCopy() *ConsoleHistoryParameters {
	if in == nil {
		return nil
	}
	out := new(ConsoleHistoryParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleHistorySpec) DeepCopyInto(out *ConsoleHistorySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleHistorySpec.
func (in *ConsoleHistorySpec) DeepCopy() *ConsoleHistorySpec {
	if in == nil {
		return nil
	}
	out := new(ConsoleHistorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsoleHistoryStatus) DeepCopyInto(out *ConsoleHistoryStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsoleHistoryStatus.
func (in *ConsoleHistoryStatus) DeepCopy() *ConsoleHistoryStatus {
	if in == nil {
		return nil
	}
	out := new(ConsoleHistoryStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Cpe) DeepCopyInto(out *Cpe) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Cpe.
func (in *Cpe) DeepCopy() *Cpe {
	if in == nil {
		return nil
	}
	out := new(Cpe)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Cpe) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CpeInitParameters) DeepCopyInto(out *CpeInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CpeDeviceShapeID != nil {
		in, out := &in.CpeDeviceShapeID, &out.CpeDeviceShapeID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IsPrivate != nil {
		in, out := &in.IsPrivate, &out.IsPrivate
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CpeInitParameters.
func (in *CpeInitParameters) DeepCopy() *CpeInitParameters {
	if in == nil {
		return nil
	}
	out := new(CpeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CpeList) DeepCopyInto(out *CpeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Cpe, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CpeList.
func (in *CpeList) DeepCopy() *CpeList {
	if in == nil {
		return nil
	}
	out := new(CpeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CpeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CpeObservation) DeepCopyInto(out *CpeObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CpeDeviceShapeID != nil {
		in, out := &in.CpeDeviceShapeID, &out.CpeDeviceShapeID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IsPrivate != nil {
		in, out := &in.IsPrivate, &out.IsPrivate
		*out = new(bool)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CpeObservation.
func (in *CpeObservation) DeepCopy() *CpeObservation {
	if in == nil {
		return nil
	}
	out := new(CpeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CpeParameters) DeepCopyInto(out *CpeParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CpeDeviceShapeID != nil {
		in, out := &in.CpeDeviceShapeID, &out.CpeDeviceShapeID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IsPrivate != nil {
		in, out := &in.IsPrivate, &out.IsPrivate
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CpeParameters.
func (in *CpeParameters) DeepCopy() *CpeParameters {
	if in == nil {
		return nil
	}
	out := new(CpeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CpeSpec) DeepCopyInto(out *CpeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CpeSpec.
func (in *CpeSpec) DeepCopy() *CpeSpec {
	if in == nil {
		return nil
	}
	out := new(CpeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CpeStatus) DeepCopyInto(out *CpeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CpeStatus.
func (in *CpeStatus) DeepCopy() *CpeStatus {
	if in == nil {
		return nil
	}
	out := new(CpeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsAutotunePoliciesInitParameters) DeepCopyInto(out *CreateDetailsAutotunePoliciesInitParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsAutotunePoliciesInitParameters.
func (in *CreateDetailsAutotunePoliciesInitParameters) DeepCopy() *CreateDetailsAutotunePoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsAutotunePoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsAutotunePoliciesObservation) DeepCopyInto(out *CreateDetailsAutotunePoliciesObservation) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsAutotunePoliciesObservation.
func (in *CreateDetailsAutotunePoliciesObservation) DeepCopy() *CreateDetailsAutotunePoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsAutotunePoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsAutotunePoliciesParameters) DeepCopyInto(out *CreateDetailsAutotunePoliciesParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsAutotunePoliciesParameters.
func (in *CreateDetailsAutotunePoliciesParameters) DeepCopy() *CreateDetailsAutotunePoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsAutotunePoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsBlockVolumeReplicasInitParameters) DeepCopyInto(out *CreateDetailsBlockVolumeReplicasInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsBlockVolumeReplicasInitParameters.
func (in *CreateDetailsBlockVolumeReplicasInitParameters) DeepCopy() *CreateDetailsBlockVolumeReplicasInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsBlockVolumeReplicasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsBlockVolumeReplicasObservation) DeepCopyInto(out *CreateDetailsBlockVolumeReplicasObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsBlockVolumeReplicasObservation.
func (in *CreateDetailsBlockVolumeReplicasObservation) DeepCopy() *CreateDetailsBlockVolumeReplicasObservation {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsBlockVolumeReplicasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsBlockVolumeReplicasParameters) DeepCopyInto(out *CreateDetailsBlockVolumeReplicasParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsBlockVolumeReplicasParameters.
func (in *CreateDetailsBlockVolumeReplicasParameters) DeepCopy() *CreateDetailsBlockVolumeReplicasParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsBlockVolumeReplicasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsInitParameters) DeepCopyInto(out *CreateDetailsInitParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]CreateDetailsAutotunePoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]BlockVolumeReplicasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]CreateDetailsSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsInitParameters.
func (in *CreateDetailsInitParameters) DeepCopy() *CreateDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsObservation) DeepCopyInto(out *CreateDetailsObservation) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]CreateDetailsAutotunePoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]BlockVolumeReplicasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]CreateDetailsSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsObservation.
func (in *CreateDetailsObservation) DeepCopy() *CreateDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsParameters) DeepCopyInto(out *CreateDetailsParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]CreateDetailsAutotunePoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]BlockVolumeReplicasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]CreateDetailsSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsParameters.
func (in *CreateDetailsParameters) DeepCopy() *CreateDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsSourceDetailsInitParameters) DeepCopyInto(out *CreateDetailsSourceDetailsInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsSourceDetailsInitParameters.
func (in *CreateDetailsSourceDetailsInitParameters) DeepCopy() *CreateDetailsSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsSourceDetailsObservation) DeepCopyInto(out *CreateDetailsSourceDetailsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsSourceDetailsObservation.
func (in *CreateDetailsSourceDetailsObservation) DeepCopy() *CreateDetailsSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateDetailsSourceDetailsParameters) DeepCopyInto(out *CreateDetailsSourceDetailsParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateDetailsSourceDetailsParameters.
func (in *CreateDetailsSourceDetailsParameters) DeepCopy() *CreateDetailsSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(CreateDetailsSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateVnicDetailsInitParameters) DeepCopyInto(out *CreateVnicDetailsInitParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateVnicDetailsInitParameters.
func (in *CreateVnicDetailsInitParameters) DeepCopy() *CreateVnicDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreateVnicDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateVnicDetailsObservation) DeepCopyInto(out *CreateVnicDetailsObservation) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateVnicDetailsObservation.
func (in *CreateVnicDetailsObservation) DeepCopy() *CreateVnicDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(CreateVnicDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CreateVnicDetailsParameters) DeepCopyInto(out *CreateVnicDetailsParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]CreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CreateVnicDetailsParameters.
func (in *CreateVnicDetailsParameters) DeepCopy() *CreateVnicDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(CreateVnicDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnect) DeepCopyInto(out *CrossConnect) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnect.
func (in *CrossConnect) DeepCopy() *CrossConnect {
	if in == nil {
		return nil
	}
	out := new(CrossConnect)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CrossConnect) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroup) DeepCopyInto(out *CrossConnectGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroup.
func (in *CrossConnectGroup) DeepCopy() *CrossConnectGroup {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CrossConnectGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupInitParameters) DeepCopyInto(out *CrossConnectGroupInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CustomerReferenceName != nil {
		in, out := &in.CustomerReferenceName, &out.CustomerReferenceName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MacsecProperties != nil {
		in, out := &in.MacsecProperties, &out.MacsecProperties
		*out = make([]CrossConnectGroupMacsecPropertiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupInitParameters.
func (in *CrossConnectGroupInitParameters) DeepCopy() *CrossConnectGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupList) DeepCopyInto(out *CrossConnectGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CrossConnectGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupList.
func (in *CrossConnectGroupList) DeepCopy() *CrossConnectGroupList {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CrossConnectGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupMacsecPropertiesInitParameters) DeepCopyInto(out *CrossConnectGroupMacsecPropertiesInitParameters) {
	*out = *in
	if in.EncryptionCipher != nil {
		in, out := &in.EncryptionCipher, &out.EncryptionCipher
		*out = new(string)
		**out = **in
	}
	if in.IsUnprotectedTrafficAllowed != nil {
		in, out := &in.IsUnprotectedTrafficAllowed, &out.IsUnprotectedTrafficAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]MacsecPropertiesPrimaryKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupMacsecPropertiesInitParameters.
func (in *CrossConnectGroupMacsecPropertiesInitParameters) DeepCopy() *CrossConnectGroupMacsecPropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupMacsecPropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupMacsecPropertiesObservation) DeepCopyInto(out *CrossConnectGroupMacsecPropertiesObservation) {
	*out = *in
	if in.EncryptionCipher != nil {
		in, out := &in.EncryptionCipher, &out.EncryptionCipher
		*out = new(string)
		**out = **in
	}
	if in.IsUnprotectedTrafficAllowed != nil {
		in, out := &in.IsUnprotectedTrafficAllowed, &out.IsUnprotectedTrafficAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]MacsecPropertiesPrimaryKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupMacsecPropertiesObservation.
func (in *CrossConnectGroupMacsecPropertiesObservation) DeepCopy() *CrossConnectGroupMacsecPropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupMacsecPropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupMacsecPropertiesParameters) DeepCopyInto(out *CrossConnectGroupMacsecPropertiesParameters) {
	*out = *in
	if in.EncryptionCipher != nil {
		in, out := &in.EncryptionCipher, &out.EncryptionCipher
		*out = new(string)
		**out = **in
	}
	if in.IsUnprotectedTrafficAllowed != nil {
		in, out := &in.IsUnprotectedTrafficAllowed, &out.IsUnprotectedTrafficAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]MacsecPropertiesPrimaryKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupMacsecPropertiesParameters.
func (in *CrossConnectGroupMacsecPropertiesParameters) DeepCopy() *CrossConnectGroupMacsecPropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupMacsecPropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupObservation) DeepCopyInto(out *CrossConnectGroupObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CustomerReferenceName != nil {
		in, out := &in.CustomerReferenceName, &out.CustomerReferenceName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MacsecProperties != nil {
		in, out := &in.MacsecProperties, &out.MacsecProperties
		*out = make([]CrossConnectGroupMacsecPropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OciLogicalDeviceName != nil {
		in, out := &in.OciLogicalDeviceName, &out.OciLogicalDeviceName
		*out = new(string)
		**out = **in
	}
	if in.OciPhysicalDeviceName != nil {
		in, out := &in.OciPhysicalDeviceName, &out.OciPhysicalDeviceName
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupObservation.
func (in *CrossConnectGroupObservation) DeepCopy() *CrossConnectGroupObservation {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupParameters) DeepCopyInto(out *CrossConnectGroupParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CustomerReferenceName != nil {
		in, out := &in.CustomerReferenceName, &out.CustomerReferenceName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.MacsecProperties != nil {
		in, out := &in.MacsecProperties, &out.MacsecProperties
		*out = make([]CrossConnectGroupMacsecPropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupParameters.
func (in *CrossConnectGroupParameters) DeepCopy() *CrossConnectGroupParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupSpec) DeepCopyInto(out *CrossConnectGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupSpec.
func (in *CrossConnectGroupSpec) DeepCopy() *CrossConnectGroupSpec {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectGroupStatus) DeepCopyInto(out *CrossConnectGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectGroupStatus.
func (in *CrossConnectGroupStatus) DeepCopy() *CrossConnectGroupStatus {
	if in == nil {
		return nil
	}
	out := new(CrossConnectGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectInitParameters) DeepCopyInto(out *CrossConnectInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectGroupID != nil {
		in, out := &in.CrossConnectGroupID, &out.CrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.CustomerReferenceName != nil {
		in, out := &in.CustomerReferenceName, &out.CustomerReferenceName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FarCrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.FarCrossConnectOrCrossConnectGroupID, &out.FarCrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsActive != nil {
		in, out := &in.IsActive, &out.IsActive
		*out = new(bool)
		**out = **in
	}
	if in.LocationName != nil {
		in, out := &in.LocationName, &out.LocationName
		*out = new(string)
		**out = **in
	}
	if in.MacsecProperties != nil {
		in, out := &in.MacsecProperties, &out.MacsecProperties
		*out = make([]MacsecPropertiesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NearCrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.NearCrossConnectOrCrossConnectGroupID, &out.NearCrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.PortSpeedShapeName != nil {
		in, out := &in.PortSpeedShapeName, &out.PortSpeedShapeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectInitParameters.
func (in *CrossConnectInitParameters) DeepCopy() *CrossConnectInitParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectList) DeepCopyInto(out *CrossConnectList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CrossConnect, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectList.
func (in *CrossConnectList) DeepCopy() *CrossConnectList {
	if in == nil {
		return nil
	}
	out := new(CrossConnectList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CrossConnectList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectMappingsInitParameters) DeepCopyInto(out *CrossConnectMappingsInitParameters) {
	*out = *in
	if in.BGPMd5AuthKey != nil {
		in, out := &in.BGPMd5AuthKey, &out.BGPMd5AuthKey
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.CrossConnectOrCrossConnectGroupID, &out.CrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPPeeringIP != nil {
		in, out := &in.CustomerBGPPeeringIP, &out.CustomerBGPPeeringIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPPeeringIPv6 != nil {
		in, out := &in.CustomerBGPPeeringIPv6, &out.CustomerBGPPeeringIPv6
		*out = new(string)
		**out = **in
	}
	if in.OracleBGPPeeringIP != nil {
		in, out := &in.OracleBGPPeeringIP, &out.OracleBGPPeeringIP
		*out = new(string)
		**out = **in
	}
	if in.OracleBGPPeeringIPv6 != nil {
		in, out := &in.OracleBGPPeeringIPv6, &out.OracleBGPPeeringIPv6
		*out = new(string)
		**out = **in
	}
	if in.Vlan != nil {
		in, out := &in.Vlan, &out.Vlan
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectMappingsInitParameters.
func (in *CrossConnectMappingsInitParameters) DeepCopy() *CrossConnectMappingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectMappingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectMappingsObservation) DeepCopyInto(out *CrossConnectMappingsObservation) {
	*out = *in
	if in.BGPMd5AuthKey != nil {
		in, out := &in.BGPMd5AuthKey, &out.BGPMd5AuthKey
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.CrossConnectOrCrossConnectGroupID, &out.CrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPPeeringIP != nil {
		in, out := &in.CustomerBGPPeeringIP, &out.CustomerBGPPeeringIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPPeeringIPv6 != nil {
		in, out := &in.CustomerBGPPeeringIPv6, &out.CustomerBGPPeeringIPv6
		*out = new(string)
		**out = **in
	}
	if in.OracleBGPPeeringIP != nil {
		in, out := &in.OracleBGPPeeringIP, &out.OracleBGPPeeringIP
		*out = new(string)
		**out = **in
	}
	if in.OracleBGPPeeringIPv6 != nil {
		in, out := &in.OracleBGPPeeringIPv6, &out.OracleBGPPeeringIPv6
		*out = new(string)
		**out = **in
	}
	if in.Vlan != nil {
		in, out := &in.Vlan, &out.Vlan
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectMappingsObservation.
func (in *CrossConnectMappingsObservation) DeepCopy() *CrossConnectMappingsObservation {
	if in == nil {
		return nil
	}
	out := new(CrossConnectMappingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectMappingsParameters) DeepCopyInto(out *CrossConnectMappingsParameters) {
	*out = *in
	if in.BGPMd5AuthKey != nil {
		in, out := &in.BGPMd5AuthKey, &out.BGPMd5AuthKey
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.CrossConnectOrCrossConnectGroupID, &out.CrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPPeeringIP != nil {
		in, out := &in.CustomerBGPPeeringIP, &out.CustomerBGPPeeringIP
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPPeeringIPv6 != nil {
		in, out := &in.CustomerBGPPeeringIPv6, &out.CustomerBGPPeeringIPv6
		*out = new(string)
		**out = **in
	}
	if in.OracleBGPPeeringIP != nil {
		in, out := &in.OracleBGPPeeringIP, &out.OracleBGPPeeringIP
		*out = new(string)
		**out = **in
	}
	if in.OracleBGPPeeringIPv6 != nil {
		in, out := &in.OracleBGPPeeringIPv6, &out.OracleBGPPeeringIPv6
		*out = new(string)
		**out = **in
	}
	if in.Vlan != nil {
		in, out := &in.Vlan, &out.Vlan
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectMappingsParameters.
func (in *CrossConnectMappingsParameters) DeepCopy() *CrossConnectMappingsParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectMappingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectObservation) DeepCopyInto(out *CrossConnectObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectGroupID != nil {
		in, out := &in.CrossConnectGroupID, &out.CrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.CustomerReferenceName != nil {
		in, out := &in.CustomerReferenceName, &out.CustomerReferenceName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FarCrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.FarCrossConnectOrCrossConnectGroupID, &out.FarCrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsActive != nil {
		in, out := &in.IsActive, &out.IsActive
		*out = new(bool)
		**out = **in
	}
	if in.LocationName != nil {
		in, out := &in.LocationName, &out.LocationName
		*out = new(string)
		**out = **in
	}
	if in.MacsecProperties != nil {
		in, out := &in.MacsecProperties, &out.MacsecProperties
		*out = make([]MacsecPropertiesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NearCrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.NearCrossConnectOrCrossConnectGroupID, &out.NearCrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.OciLogicalDeviceName != nil {
		in, out := &in.OciLogicalDeviceName, &out.OciLogicalDeviceName
		*out = new(string)
		**out = **in
	}
	if in.OciPhysicalDeviceName != nil {
		in, out := &in.OciPhysicalDeviceName, &out.OciPhysicalDeviceName
		*out = new(string)
		**out = **in
	}
	if in.PortName != nil {
		in, out := &in.PortName, &out.PortName
		*out = new(string)
		**out = **in
	}
	if in.PortSpeedShapeName != nil {
		in, out := &in.PortSpeedShapeName, &out.PortSpeedShapeName
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectObservation.
func (in *CrossConnectObservation) DeepCopy() *CrossConnectObservation {
	if in == nil {
		return nil
	}
	out := new(CrossConnectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectParameters) DeepCopyInto(out *CrossConnectParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectGroupID != nil {
		in, out := &in.CrossConnectGroupID, &out.CrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.CustomerReferenceName != nil {
		in, out := &in.CustomerReferenceName, &out.CustomerReferenceName
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FarCrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.FarCrossConnectOrCrossConnectGroupID, &out.FarCrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsActive != nil {
		in, out := &in.IsActive, &out.IsActive
		*out = new(bool)
		**out = **in
	}
	if in.LocationName != nil {
		in, out := &in.LocationName, &out.LocationName
		*out = new(string)
		**out = **in
	}
	if in.MacsecProperties != nil {
		in, out := &in.MacsecProperties, &out.MacsecProperties
		*out = make([]MacsecPropertiesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NearCrossConnectOrCrossConnectGroupID != nil {
		in, out := &in.NearCrossConnectOrCrossConnectGroupID, &out.NearCrossConnectOrCrossConnectGroupID
		*out = new(string)
		**out = **in
	}
	if in.PortSpeedShapeName != nil {
		in, out := &in.PortSpeedShapeName, &out.PortSpeedShapeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectParameters.
func (in *CrossConnectParameters) DeepCopy() *CrossConnectParameters {
	if in == nil {
		return nil
	}
	out := new(CrossConnectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectSpec) DeepCopyInto(out *CrossConnectSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectSpec.
func (in *CrossConnectSpec) DeepCopy() *CrossConnectSpec {
	if in == nil {
		return nil
	}
	out := new(CrossConnectSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossConnectStatus) DeepCopyInto(out *CrossConnectStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossConnectStatus.
func (in *CrossConnectStatus) DeepCopy() *CrossConnectStatus {
	if in == nil {
		return nil
	}
	out := new(CrossConnectStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DHCPOptions) DeepCopyInto(out *DHCPOptions) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DHCPOptions.
func (in *DHCPOptions) DeepCopy() *DHCPOptions {
	if in == nil {
		return nil
	}
	out := new(DHCPOptions)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DHCPOptions) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DHCPOptionsInitParameters) DeepCopyInto(out *DHCPOptionsInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DomainNameType != nil {
		in, out := &in.DomainNameType, &out.DomainNameType
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DHCPOptionsInitParameters.
func (in *DHCPOptionsInitParameters) DeepCopy() *DHCPOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DHCPOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DHCPOptionsList) DeepCopyInto(out *DHCPOptionsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DHCPOptions, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DHCPOptionsList.
func (in *DHCPOptionsList) DeepCopy() *DHCPOptionsList {
	if in == nil {
		return nil
	}
	out := new(DHCPOptionsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DHCPOptionsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DHCPOptionsObservation) DeepCopyInto(out *DHCPOptionsObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DomainNameType != nil {
		in, out := &in.DomainNameType, &out.DomainNameType
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DHCPOptionsObservation.
func (in *DHCPOptionsObservation) DeepCopy() *DHCPOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(DHCPOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DHCPOptionsParameters) DeepCopyInto(out *DHCPOptionsParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DomainNameType != nil {
		in, out := &in.DomainNameType, &out.DomainNameType
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]OptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DHCPOptionsParameters.
func (in *DHCPOptionsParameters) DeepCopy() *DHCPOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(DHCPOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DHCPOptionsSpec) DeepCopyInto(out *DHCPOptionsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DHCPOptionsSpec.
func (in *DHCPOptionsSpec) DeepCopy() *DHCPOptionsSpec {
	if in == nil {
		return nil
	}
	out := new(DHCPOptionsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DHCPOptionsStatus) DeepCopyInto(out *DHCPOptionsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DHCPOptionsStatus.
func (in *DHCPOptionsStatus) DeepCopy() *DHCPOptionsStatus {
	if in == nil {
		return nil
	}
	out := new(DHCPOptionsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedVMHost) DeepCopyInto(out *DedicatedVMHost) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedVMHost.
func (in *DedicatedVMHost) DeepCopy() *DedicatedVMHost {
	if in == nil {
		return nil
	}
	out := new(DedicatedVMHost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DedicatedVMHost) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedVMHostInitParameters) DeepCopyInto(out *DedicatedVMHostInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DedicatedVMHostShape != nil {
		in, out := &in.DedicatedVMHostShape, &out.DedicatedVMHostShape
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedVMHostInitParameters.
func (in *DedicatedVMHostInitParameters) DeepCopy() *DedicatedVMHostInitParameters {
	if in == nil {
		return nil
	}
	out := new(DedicatedVMHostInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedVMHostList) DeepCopyInto(out *DedicatedVMHostList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DedicatedVMHost, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedVMHostList.
func (in *DedicatedVMHostList) DeepCopy() *DedicatedVMHostList {
	if in == nil {
		return nil
	}
	out := new(DedicatedVMHostList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DedicatedVMHostList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedVMHostObservation) DeepCopyInto(out *DedicatedVMHostObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DedicatedVMHostShape != nil {
		in, out := &in.DedicatedVMHostShape, &out.DedicatedVMHostShape
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RemainingMemoryInGbs != nil {
		in, out := &in.RemainingMemoryInGbs, &out.RemainingMemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.RemainingOcpus != nil {
		in, out := &in.RemainingOcpus, &out.RemainingOcpus
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TotalMemoryInGbs != nil {
		in, out := &in.TotalMemoryInGbs, &out.TotalMemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.TotalOcpus != nil {
		in, out := &in.TotalOcpus, &out.TotalOcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedVMHostObservation.
func (in *DedicatedVMHostObservation) DeepCopy() *DedicatedVMHostObservation {
	if in == nil {
		return nil
	}
	out := new(DedicatedVMHostObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedVMHostParameters) DeepCopyInto(out *DedicatedVMHostParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DedicatedVMHostShape != nil {
		in, out := &in.DedicatedVMHostShape, &out.DedicatedVMHostShape
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedVMHostParameters.
func (in *DedicatedVMHostParameters) DeepCopy() *DedicatedVMHostParameters {
	if in == nil {
		return nil
	}
	out := new(DedicatedVMHostParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedVMHostSpec) DeepCopyInto(out *DedicatedVMHostSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedVMHostSpec.
func (in *DedicatedVMHostSpec) DeepCopy() *DedicatedVMHostSpec {
	if in == nil {
		return nil
	}
	out := new(DedicatedVMHostSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DedicatedVMHostStatus) DeepCopyInto(out *DedicatedVMHostStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DedicatedVMHostStatus.
func (in *DedicatedVMHostStatus) DeepCopy() *DedicatedVMHostStatus {
	if in == nil {
		return nil
	}
	out := new(DedicatedVMHostStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultDrgRouteTablesInitParameters) DeepCopyInto(out *DefaultDrgRouteTablesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultDrgRouteTablesInitParameters.
func (in *DefaultDrgRouteTablesInitParameters) DeepCopy() *DefaultDrgRouteTablesInitParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultDrgRouteTablesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultDrgRouteTablesObservation) DeepCopyInto(out *DefaultDrgRouteTablesObservation) {
	*out = *in
	if in.IpsecTunnel != nil {
		in, out := &in.IpsecTunnel, &out.IpsecTunnel
		*out = new(string)
		**out = **in
	}
	if in.RemotePeeringConnection != nil {
		in, out := &in.RemotePeeringConnection, &out.RemotePeeringConnection
		*out = new(string)
		**out = **in
	}
	if in.Vcn != nil {
		in, out := &in.Vcn, &out.Vcn
		*out = new(string)
		**out = **in
	}
	if in.VirtualCircuit != nil {
		in, out := &in.VirtualCircuit, &out.VirtualCircuit
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultDrgRouteTablesObservation.
func (in *DefaultDrgRouteTablesObservation) DeepCopy() *DefaultDrgRouteTablesObservation {
	if in == nil {
		return nil
	}
	out := new(DefaultDrgRouteTablesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DefaultDrgRouteTablesParameters) DeepCopyInto(out *DefaultDrgRouteTablesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DefaultDrgRouteTablesParameters.
func (in *DefaultDrgRouteTablesParameters) DeepCopy() *DefaultDrgRouteTablesParameters {
	if in == nil {
		return nil
	}
	out := new(DefaultDrgRouteTablesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationPortRangeInitParameters) DeepCopyInto(out *DestinationPortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationPortRangeInitParameters.
func (in *DestinationPortRangeInitParameters) DeepCopy() *DestinationPortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationPortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationPortRangeObservation) DeepCopyInto(out *DestinationPortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationPortRangeObservation.
func (in *DestinationPortRangeObservation) DeepCopy() *DestinationPortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(DestinationPortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DestinationPortRangeParameters) DeepCopyInto(out *DestinationPortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DestinationPortRangeParameters.
func (in *DestinationPortRangeParameters) DeepCopy() *DestinationPortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(DestinationPortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DpdConfigInitParameters) DeepCopyInto(out *DpdConfigInitParameters) {
	*out = *in
	if in.DpdMode != nil {
		in, out := &in.DpdMode, &out.DpdMode
		*out = new(string)
		**out = **in
	}
	if in.DpdTimeoutInSec != nil {
		in, out := &in.DpdTimeoutInSec, &out.DpdTimeoutInSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DpdConfigInitParameters.
func (in *DpdConfigInitParameters) DeepCopy() *DpdConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(DpdConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DpdConfigObservation) DeepCopyInto(out *DpdConfigObservation) {
	*out = *in
	if in.DpdMode != nil {
		in, out := &in.DpdMode, &out.DpdMode
		*out = new(string)
		**out = **in
	}
	if in.DpdTimeoutInSec != nil {
		in, out := &in.DpdTimeoutInSec, &out.DpdTimeoutInSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DpdConfigObservation.
func (in *DpdConfigObservation) DeepCopy() *DpdConfigObservation {
	if in == nil {
		return nil
	}
	out := new(DpdConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DpdConfigParameters) DeepCopyInto(out *DpdConfigParameters) {
	*out = *in
	if in.DpdMode != nil {
		in, out := &in.DpdMode, &out.DpdMode
		*out = new(string)
		**out = **in
	}
	if in.DpdTimeoutInSec != nil {
		in, out := &in.DpdTimeoutInSec, &out.DpdTimeoutInSec
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DpdConfigParameters.
func (in *DpdConfigParameters) DeepCopy() *DpdConfigParameters {
	if in == nil {
		return nil
	}
	out := new(DpdConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Drg) DeepCopyInto(out *Drg) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Drg.
func (in *Drg) DeepCopy() *Drg {
	if in == nil {
		return nil
	}
	out := new(Drg)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Drg) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAllAttachmentsInitParameters) DeepCopyInto(out *DrgAllAttachmentsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAllAttachmentsInitParameters.
func (in *DrgAllAttachmentsInitParameters) DeepCopy() *DrgAllAttachmentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAllAttachmentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAllAttachmentsObservation) DeepCopyInto(out *DrgAllAttachmentsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAllAttachmentsObservation.
func (in *DrgAllAttachmentsObservation) DeepCopy() *DrgAllAttachmentsObservation {
	if in == nil {
		return nil
	}
	out := new(DrgAllAttachmentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAllAttachmentsParameters) DeepCopyInto(out *DrgAllAttachmentsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAllAttachmentsParameters.
func (in *DrgAllAttachmentsParameters) DeepCopy() *DrgAllAttachmentsParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAllAttachmentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachment) DeepCopyInto(out *DrgAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachment.
func (in *DrgAttachment) DeepCopy() *DrgAttachment {
	if in == nil {
		return nil
	}
	out := new(DrgAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentInitParameters) DeepCopyInto(out *DrgAttachmentInitParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.ExportDrgRouteDistributionID != nil {
		in, out := &in.ExportDrgRouteDistributionID, &out.ExportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NetworkDetails != nil {
		in, out := &in.NetworkDetails, &out.NetworkDetails
		*out = make([]NetworkDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoveExportDrgRouteDistributionTrigger != nil {
		in, out := &in.RemoveExportDrgRouteDistributionTrigger, &out.RemoveExportDrgRouteDistributionTrigger
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentInitParameters.
func (in *DrgAttachmentInitParameters) DeepCopy() *DrgAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentList) DeepCopyInto(out *DrgAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DrgAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentList.
func (in *DrgAttachmentList) DeepCopy() *DrgAttachmentList {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagement) DeepCopyInto(out *DrgAttachmentManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagement.
func (in *DrgAttachmentManagement) DeepCopy() *DrgAttachmentManagement {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgAttachmentManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementInitParameters) DeepCopyInto(out *DrgAttachmentManagementInitParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.ExportDrgRouteDistributionID != nil {
		in, out := &in.ExportDrgRouteDistributionID, &out.ExportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NetworkDetails != nil {
		in, out := &in.NetworkDetails, &out.NetworkDetails
		*out = make([]DrgAttachmentManagementNetworkDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.RemoveExportDrgRouteDistributionTrigger != nil {
		in, out := &in.RemoveExportDrgRouteDistributionTrigger, &out.RemoveExportDrgRouteDistributionTrigger
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementInitParameters.
func (in *DrgAttachmentManagementInitParameters) DeepCopy() *DrgAttachmentManagementInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementList) DeepCopyInto(out *DrgAttachmentManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DrgAttachmentManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementList.
func (in *DrgAttachmentManagementList) DeepCopy() *DrgAttachmentManagementList {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgAttachmentManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementNetworkDetailsInitParameters) DeepCopyInto(out *DrgAttachmentManagementNetworkDetailsInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementNetworkDetailsInitParameters.
func (in *DrgAttachmentManagementNetworkDetailsInitParameters) DeepCopy() *DrgAttachmentManagementNetworkDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementNetworkDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementNetworkDetailsObservation) DeepCopyInto(out *DrgAttachmentManagementNetworkDetailsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IpsecConnectionID != nil {
		in, out := &in.IpsecConnectionID, &out.IpsecConnectionID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementNetworkDetailsObservation.
func (in *DrgAttachmentManagementNetworkDetailsObservation) DeepCopy() *DrgAttachmentManagementNetworkDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementNetworkDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementNetworkDetailsParameters) DeepCopyInto(out *DrgAttachmentManagementNetworkDetailsParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementNetworkDetailsParameters.
func (in *DrgAttachmentManagementNetworkDetailsParameters) DeepCopy() *DrgAttachmentManagementNetworkDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementNetworkDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementObservation) DeepCopyInto(out *DrgAttachmentManagementObservation) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.ExportDrgRouteDistributionID != nil {
		in, out := &in.ExportDrgRouteDistributionID, &out.ExportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsCrossTenancy != nil {
		in, out := &in.IsCrossTenancy, &out.IsCrossTenancy
		*out = new(bool)
		**out = **in
	}
	if in.NetworkDetails != nil {
		in, out := &in.NetworkDetails, &out.NetworkDetails
		*out = make([]DrgAttachmentManagementNetworkDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.RemoveExportDrgRouteDistributionTrigger != nil {
		in, out := &in.RemoveExportDrgRouteDistributionTrigger, &out.RemoveExportDrgRouteDistributionTrigger
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementObservation.
func (in *DrgAttachmentManagementObservation) DeepCopy() *DrgAttachmentManagementObservation {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementParameters) DeepCopyInto(out *DrgAttachmentManagementParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.ExportDrgRouteDistributionID != nil {
		in, out := &in.ExportDrgRouteDistributionID, &out.ExportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NetworkDetails != nil {
		in, out := &in.NetworkDetails, &out.NetworkDetails
		*out = make([]DrgAttachmentManagementNetworkDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.RemoveExportDrgRouteDistributionTrigger != nil {
		in, out := &in.RemoveExportDrgRouteDistributionTrigger, &out.RemoveExportDrgRouteDistributionTrigger
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementParameters.
func (in *DrgAttachmentManagementParameters) DeepCopy() *DrgAttachmentManagementParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementSpec) DeepCopyInto(out *DrgAttachmentManagementSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementSpec.
func (in *DrgAttachmentManagementSpec) DeepCopy() *DrgAttachmentManagementSpec {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentManagementStatus) DeepCopyInto(out *DrgAttachmentManagementStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentManagementStatus.
func (in *DrgAttachmentManagementStatus) DeepCopy() *DrgAttachmentManagementStatus {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentObservation) DeepCopyInto(out *DrgAttachmentObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.ExportDrgRouteDistributionID != nil {
		in, out := &in.ExportDrgRouteDistributionID, &out.ExportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsCrossTenancy != nil {
		in, out := &in.IsCrossTenancy, &out.IsCrossTenancy
		*out = new(bool)
		**out = **in
	}
	if in.NetworkDetails != nil {
		in, out := &in.NetworkDetails, &out.NetworkDetails
		*out = make([]NetworkDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoveExportDrgRouteDistributionTrigger != nil {
		in, out := &in.RemoveExportDrgRouteDistributionTrigger, &out.RemoveExportDrgRouteDistributionTrigger
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentObservation.
func (in *DrgAttachmentObservation) DeepCopy() *DrgAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentParameters) DeepCopyInto(out *DrgAttachmentParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.ExportDrgRouteDistributionID != nil {
		in, out := &in.ExportDrgRouteDistributionID, &out.ExportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NetworkDetails != nil {
		in, out := &in.NetworkDetails, &out.NetworkDetails
		*out = make([]NetworkDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.RemoveExportDrgRouteDistributionTrigger != nil {
		in, out := &in.RemoveExportDrgRouteDistributionTrigger, &out.RemoveExportDrgRouteDistributionTrigger
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentParameters.
func (in *DrgAttachmentParameters) DeepCopy() *DrgAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentSpec) DeepCopyInto(out *DrgAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentSpec.
func (in *DrgAttachmentSpec) DeepCopy() *DrgAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentStatus) DeepCopyInto(out *DrgAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentStatus.
func (in *DrgAttachmentStatus) DeepCopy() *DrgAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentsList) DeepCopyInto(out *DrgAttachmentsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentsList.
func (in *DrgAttachmentsList) DeepCopy() *DrgAttachmentsList {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgAttachmentsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentsListInitParameters) DeepCopyInto(out *DrgAttachmentsListInitParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.IsCrossTenancy != nil {
		in, out := &in.IsCrossTenancy, &out.IsCrossTenancy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentsListInitParameters.
func (in *DrgAttachmentsListInitParameters) DeepCopy() *DrgAttachmentsListInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentsListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentsListList) DeepCopyInto(out *DrgAttachmentsListList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DrgAttachmentsList, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentsListList.
func (in *DrgAttachmentsListList) DeepCopy() *DrgAttachmentsListList {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentsListList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgAttachmentsListList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentsListObservation) DeepCopyInto(out *DrgAttachmentsListObservation) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.DrgAllAttachments != nil {
		in, out := &in.DrgAllAttachments, &out.DrgAllAttachments
		*out = make([]DrgAllAttachmentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsCrossTenancy != nil {
		in, out := &in.IsCrossTenancy, &out.IsCrossTenancy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentsListObservation.
func (in *DrgAttachmentsListObservation) DeepCopy() *DrgAttachmentsListObservation {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentsListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentsListParameters) DeepCopyInto(out *DrgAttachmentsListParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.IsCrossTenancy != nil {
		in, out := &in.IsCrossTenancy, &out.IsCrossTenancy
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentsListParameters.
func (in *DrgAttachmentsListParameters) DeepCopy() *DrgAttachmentsListParameters {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentsListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentsListSpec) DeepCopyInto(out *DrgAttachmentsListSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentsListSpec.
func (in *DrgAttachmentsListSpec) DeepCopy() *DrgAttachmentsListSpec {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentsListSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgAttachmentsListStatus) DeepCopyInto(out *DrgAttachmentsListStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgAttachmentsListStatus.
func (in *DrgAttachmentsListStatus) DeepCopy() *DrgAttachmentsListStatus {
	if in == nil {
		return nil
	}
	out := new(DrgAttachmentsListStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgInitParameters) DeepCopyInto(out *DrgInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgInitParameters.
func (in *DrgInitParameters) DeepCopy() *DrgInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgList) DeepCopyInto(out *DrgList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Drg, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgList.
func (in *DrgList) DeepCopy() *DrgList {
	if in == nil {
		return nil
	}
	out := new(DrgList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgObservation) DeepCopyInto(out *DrgObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefaultDrgRouteTables != nil {
		in, out := &in.DefaultDrgRouteTables, &out.DefaultDrgRouteTables
		*out = make([]DefaultDrgRouteTablesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DefaultExportDrgRouteDistributionID != nil {
		in, out := &in.DefaultExportDrgRouteDistributionID, &out.DefaultExportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RedundancyStatus != nil {
		in, out := &in.RedundancyStatus, &out.RedundancyStatus
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgObservation.
func (in *DrgObservation) DeepCopy() *DrgObservation {
	if in == nil {
		return nil
	}
	out := new(DrgObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgParameters) DeepCopyInto(out *DrgParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgParameters.
func (in *DrgParameters) DeepCopy() *DrgParameters {
	if in == nil {
		return nil
	}
	out := new(DrgParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistribution) DeepCopyInto(out *DrgRouteDistribution) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistribution.
func (in *DrgRouteDistribution) DeepCopy() *DrgRouteDistribution {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistribution)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteDistribution) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionInitParameters) DeepCopyInto(out *DrgRouteDistributionInitParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DistributionType != nil {
		in, out := &in.DistributionType, &out.DistributionType
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionInitParameters.
func (in *DrgRouteDistributionInitParameters) DeepCopy() *DrgRouteDistributionInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionList) DeepCopyInto(out *DrgRouteDistributionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DrgRouteDistribution, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionList.
func (in *DrgRouteDistributionList) DeepCopy() *DrgRouteDistributionList {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteDistributionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionObservation) DeepCopyInto(out *DrgRouteDistributionObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DistributionType != nil {
		in, out := &in.DistributionType, &out.DistributionType
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionObservation.
func (in *DrgRouteDistributionObservation) DeepCopy() *DrgRouteDistributionObservation {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionParameters) DeepCopyInto(out *DrgRouteDistributionParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DistributionType != nil {
		in, out := &in.DistributionType, &out.DistributionType
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionParameters.
func (in *DrgRouteDistributionParameters) DeepCopy() *DrgRouteDistributionParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionSpec) DeepCopyInto(out *DrgRouteDistributionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionSpec.
func (in *DrgRouteDistributionSpec) DeepCopy() *DrgRouteDistributionSpec {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatement) DeepCopyInto(out *DrgRouteDistributionStatement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatement.
func (in *DrgRouteDistributionStatement) DeepCopy() *DrgRouteDistributionStatement {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteDistributionStatement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatementInitParameters) DeepCopyInto(out *DrgRouteDistributionStatementInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteDistributionID != nil {
		in, out := &in.DrgRouteDistributionID, &out.DrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = make([]MatchCriteriaInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatementInitParameters.
func (in *DrgRouteDistributionStatementInitParameters) DeepCopy() *DrgRouteDistributionStatementInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatementList) DeepCopyInto(out *DrgRouteDistributionStatementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DrgRouteDistributionStatement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatementList.
func (in *DrgRouteDistributionStatementList) DeepCopy() *DrgRouteDistributionStatementList {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteDistributionStatementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatementObservation) DeepCopyInto(out *DrgRouteDistributionStatementObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteDistributionID != nil {
		in, out := &in.DrgRouteDistributionID, &out.DrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = make([]MatchCriteriaObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatementObservation.
func (in *DrgRouteDistributionStatementObservation) DeepCopy() *DrgRouteDistributionStatementObservation {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatementParameters) DeepCopyInto(out *DrgRouteDistributionStatementParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteDistributionID != nil {
		in, out := &in.DrgRouteDistributionID, &out.DrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.MatchCriteria != nil {
		in, out := &in.MatchCriteria, &out.MatchCriteria
		*out = make([]MatchCriteriaParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatementParameters.
func (in *DrgRouteDistributionStatementParameters) DeepCopy() *DrgRouteDistributionStatementParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatementSpec) DeepCopyInto(out *DrgRouteDistributionStatementSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatementSpec.
func (in *DrgRouteDistributionStatementSpec) DeepCopy() *DrgRouteDistributionStatementSpec {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatementStatus) DeepCopyInto(out *DrgRouteDistributionStatementStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatementStatus.
func (in *DrgRouteDistributionStatementStatus) DeepCopy() *DrgRouteDistributionStatementStatus {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteDistributionStatus) DeepCopyInto(out *DrgRouteDistributionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteDistributionStatus.
func (in *DrgRouteDistributionStatus) DeepCopy() *DrgRouteDistributionStatus {
	if in == nil {
		return nil
	}
	out := new(DrgRouteDistributionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTable) DeepCopyInto(out *DrgRouteTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTable.
func (in *DrgRouteTable) DeepCopy() *DrgRouteTable {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableInitParameters) DeepCopyInto(out *DrgRouteTableInitParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ImportDrgRouteDistributionID != nil {
		in, out := &in.ImportDrgRouteDistributionID, &out.ImportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.IsEcmpEnabled != nil {
		in, out := &in.IsEcmpEnabled, &out.IsEcmpEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoveImportTrigger != nil {
		in, out := &in.RemoveImportTrigger, &out.RemoveImportTrigger
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableInitParameters.
func (in *DrgRouteTableInitParameters) DeepCopy() *DrgRouteTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableList) DeepCopyInto(out *DrgRouteTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DrgRouteTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableList.
func (in *DrgRouteTableList) DeepCopy() *DrgRouteTableList {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableObservation) DeepCopyInto(out *DrgRouteTableObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImportDrgRouteDistributionID != nil {
		in, out := &in.ImportDrgRouteDistributionID, &out.ImportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.IsEcmpEnabled != nil {
		in, out := &in.IsEcmpEnabled, &out.IsEcmpEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoveImportTrigger != nil {
		in, out := &in.RemoveImportTrigger, &out.RemoveImportTrigger
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableObservation.
func (in *DrgRouteTableObservation) DeepCopy() *DrgRouteTableObservation {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableParameters) DeepCopyInto(out *DrgRouteTableParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ImportDrgRouteDistributionID != nil {
		in, out := &in.ImportDrgRouteDistributionID, &out.ImportDrgRouteDistributionID
		*out = new(string)
		**out = **in
	}
	if in.IsEcmpEnabled != nil {
		in, out := &in.IsEcmpEnabled, &out.IsEcmpEnabled
		*out = new(bool)
		**out = **in
	}
	if in.RemoveImportTrigger != nil {
		in, out := &in.RemoveImportTrigger, &out.RemoveImportTrigger
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableParameters.
func (in *DrgRouteTableParameters) DeepCopy() *DrgRouteTableParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableRouteRule) DeepCopyInto(out *DrgRouteTableRouteRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableRouteRule.
func (in *DrgRouteTableRouteRule) DeepCopy() *DrgRouteTableRouteRule {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableRouteRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteTableRouteRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableRouteRuleInitParameters) DeepCopyInto(out *DrgRouteTableRouteRuleInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.NextHopDrgAttachmentID != nil {
		in, out := &in.NextHopDrgAttachmentID, &out.NextHopDrgAttachmentID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableRouteRuleInitParameters.
func (in *DrgRouteTableRouteRuleInitParameters) DeepCopy() *DrgRouteTableRouteRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableRouteRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableRouteRuleList) DeepCopyInto(out *DrgRouteTableRouteRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DrgRouteTableRouteRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableRouteRuleList.
func (in *DrgRouteTableRouteRuleList) DeepCopy() *DrgRouteTableRouteRuleList {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableRouteRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DrgRouteTableRouteRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableRouteRuleObservation) DeepCopyInto(out *DrgRouteTableRouteRuleObservation) {
	*out = *in
	if in.Attributes != nil {
		in, out := &in.Attributes, &out.Attributes
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsBlackhole != nil {
		in, out := &in.IsBlackhole, &out.IsBlackhole
		*out = new(bool)
		**out = **in
	}
	if in.IsConflict != nil {
		in, out := &in.IsConflict, &out.IsConflict
		*out = new(bool)
		**out = **in
	}
	if in.NextHopDrgAttachmentID != nil {
		in, out := &in.NextHopDrgAttachmentID, &out.NextHopDrgAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.RouteProvenance != nil {
		in, out := &in.RouteProvenance, &out.RouteProvenance
		*out = new(string)
		**out = **in
	}
	if in.RouteType != nil {
		in, out := &in.RouteType, &out.RouteType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableRouteRuleObservation.
func (in *DrgRouteTableRouteRuleObservation) DeepCopy() *DrgRouteTableRouteRuleObservation {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableRouteRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableRouteRuleParameters) DeepCopyInto(out *DrgRouteTableRouteRuleParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.DrgRouteTableID != nil {
		in, out := &in.DrgRouteTableID, &out.DrgRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.NextHopDrgAttachmentID != nil {
		in, out := &in.NextHopDrgAttachmentID, &out.NextHopDrgAttachmentID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableRouteRuleParameters.
func (in *DrgRouteTableRouteRuleParameters) DeepCopy() *DrgRouteTableRouteRuleParameters {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableRouteRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableRouteRuleSpec) DeepCopyInto(out *DrgRouteTableRouteRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableRouteRuleSpec.
func (in *DrgRouteTableRouteRuleSpec) DeepCopy() *DrgRouteTableRouteRuleSpec {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableRouteRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableRouteRuleStatus) DeepCopyInto(out *DrgRouteTableRouteRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableRouteRuleStatus.
func (in *DrgRouteTableRouteRuleStatus) DeepCopy() *DrgRouteTableRouteRuleStatus {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableRouteRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableSpec) DeepCopyInto(out *DrgRouteTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableSpec.
func (in *DrgRouteTableSpec) DeepCopy() *DrgRouteTableSpec {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgRouteTableStatus) DeepCopyInto(out *DrgRouteTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgRouteTableStatus.
func (in *DrgRouteTableStatus) DeepCopy() *DrgRouteTableStatus {
	if in == nil {
		return nil
	}
	out := new(DrgRouteTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgSpec) DeepCopyInto(out *DrgSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgSpec.
func (in *DrgSpec) DeepCopy() *DrgSpec {
	if in == nil {
		return nil
	}
	out := new(DrgSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DrgStatus) DeepCopyInto(out *DrgStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DrgStatus.
func (in *DrgStatus) DeepCopy() *DrgStatus {
	if in == nil {
		return nil
	}
	out := new(DrgStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesIcmpOptionsInitParameters) DeepCopyInto(out *EgressSecurityRulesIcmpOptionsInitParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesIcmpOptionsInitParameters.
func (in *EgressSecurityRulesIcmpOptionsInitParameters) DeepCopy() *EgressSecurityRulesIcmpOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesIcmpOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesIcmpOptionsObservation) DeepCopyInto(out *EgressSecurityRulesIcmpOptionsObservation) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesIcmpOptionsObservation.
func (in *EgressSecurityRulesIcmpOptionsObservation) DeepCopy() *EgressSecurityRulesIcmpOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesIcmpOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesIcmpOptionsParameters) DeepCopyInto(out *EgressSecurityRulesIcmpOptionsParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesIcmpOptionsParameters.
func (in *EgressSecurityRulesIcmpOptionsParameters) DeepCopy() *EgressSecurityRulesIcmpOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesIcmpOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesInitParameters) DeepCopyInto(out *EgressSecurityRulesInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.IcmpOptions != nil {
		in, out := &in.IcmpOptions, &out.IcmpOptions
		*out = make([]EgressSecurityRulesIcmpOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Stateless != nil {
		in, out := &in.Stateless, &out.Stateless
		*out = new(bool)
		**out = **in
	}
	if in.TCPOptions != nil {
		in, out := &in.TCPOptions, &out.TCPOptions
		*out = make([]EgressSecurityRulesTCPOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UDPOptions != nil {
		in, out := &in.UDPOptions, &out.UDPOptions
		*out = make([]EgressSecurityRulesUDPOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesInitParameters.
func (in *EgressSecurityRulesInitParameters) DeepCopy() *EgressSecurityRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesObservation) DeepCopyInto(out *EgressSecurityRulesObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.IcmpOptions != nil {
		in, out := &in.IcmpOptions, &out.IcmpOptions
		*out = make([]EgressSecurityRulesIcmpOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Stateless != nil {
		in, out := &in.Stateless, &out.Stateless
		*out = new(bool)
		**out = **in
	}
	if in.TCPOptions != nil {
		in, out := &in.TCPOptions, &out.TCPOptions
		*out = make([]EgressSecurityRulesTCPOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UDPOptions != nil {
		in, out := &in.UDPOptions, &out.UDPOptions
		*out = make([]EgressSecurityRulesUDPOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesObservation.
func (in *EgressSecurityRulesObservation) DeepCopy() *EgressSecurityRulesObservation {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesParameters) DeepCopyInto(out *EgressSecurityRulesParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.IcmpOptions != nil {
		in, out := &in.IcmpOptions, &out.IcmpOptions
		*out = make([]EgressSecurityRulesIcmpOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Stateless != nil {
		in, out := &in.Stateless, &out.Stateless
		*out = new(bool)
		**out = **in
	}
	if in.TCPOptions != nil {
		in, out := &in.TCPOptions, &out.TCPOptions
		*out = make([]EgressSecurityRulesTCPOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UDPOptions != nil {
		in, out := &in.UDPOptions, &out.UDPOptions
		*out = make([]EgressSecurityRulesUDPOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesParameters.
func (in *EgressSecurityRulesParameters) DeepCopy() *EgressSecurityRulesParameters {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesTCPOptionsInitParameters) DeepCopyInto(out *EgressSecurityRulesTCPOptionsInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]EgressSecurityRulesTCPOptionsSourcePortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesTCPOptionsInitParameters.
func (in *EgressSecurityRulesTCPOptionsInitParameters) DeepCopy() *EgressSecurityRulesTCPOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesTCPOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesTCPOptionsObservation) DeepCopyInto(out *EgressSecurityRulesTCPOptionsObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]EgressSecurityRulesTCPOptionsSourcePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesTCPOptionsObservation.
func (in *EgressSecurityRulesTCPOptionsObservation) DeepCopy() *EgressSecurityRulesTCPOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesTCPOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesTCPOptionsParameters) DeepCopyInto(out *EgressSecurityRulesTCPOptionsParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]EgressSecurityRulesTCPOptionsSourcePortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesTCPOptionsParameters.
func (in *EgressSecurityRulesTCPOptionsParameters) DeepCopy() *EgressSecurityRulesTCPOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesTCPOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesTCPOptionsSourcePortRangeInitParameters) DeepCopyInto(out *EgressSecurityRulesTCPOptionsSourcePortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesTCPOptionsSourcePortRangeInitParameters.
func (in *EgressSecurityRulesTCPOptionsSourcePortRangeInitParameters) DeepCopy() *EgressSecurityRulesTCPOptionsSourcePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesTCPOptionsSourcePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesTCPOptionsSourcePortRangeObservation) DeepCopyInto(out *EgressSecurityRulesTCPOptionsSourcePortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesTCPOptionsSourcePortRangeObservation.
func (in *EgressSecurityRulesTCPOptionsSourcePortRangeObservation) DeepCopy() *EgressSecurityRulesTCPOptionsSourcePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesTCPOptionsSourcePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesTCPOptionsSourcePortRangeParameters) DeepCopyInto(out *EgressSecurityRulesTCPOptionsSourcePortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesTCPOptionsSourcePortRangeParameters.
func (in *EgressSecurityRulesTCPOptionsSourcePortRangeParameters) DeepCopy() *EgressSecurityRulesTCPOptionsSourcePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesTCPOptionsSourcePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesUDPOptionsInitParameters) DeepCopyInto(out *EgressSecurityRulesUDPOptionsInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]EgressSecurityRulesUDPOptionsSourcePortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesUDPOptionsInitParameters.
func (in *EgressSecurityRulesUDPOptionsInitParameters) DeepCopy() *EgressSecurityRulesUDPOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesUDPOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesUDPOptionsObservation) DeepCopyInto(out *EgressSecurityRulesUDPOptionsObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]EgressSecurityRulesUDPOptionsSourcePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesUDPOptionsObservation.
func (in *EgressSecurityRulesUDPOptionsObservation) DeepCopy() *EgressSecurityRulesUDPOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesUDPOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesUDPOptionsParameters) DeepCopyInto(out *EgressSecurityRulesUDPOptionsParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]EgressSecurityRulesUDPOptionsSourcePortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesUDPOptionsParameters.
func (in *EgressSecurityRulesUDPOptionsParameters) DeepCopy() *EgressSecurityRulesUDPOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesUDPOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesUDPOptionsSourcePortRangeInitParameters) DeepCopyInto(out *EgressSecurityRulesUDPOptionsSourcePortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesUDPOptionsSourcePortRangeInitParameters.
func (in *EgressSecurityRulesUDPOptionsSourcePortRangeInitParameters) DeepCopy() *EgressSecurityRulesUDPOptionsSourcePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesUDPOptionsSourcePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesUDPOptionsSourcePortRangeObservation) DeepCopyInto(out *EgressSecurityRulesUDPOptionsSourcePortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesUDPOptionsSourcePortRangeObservation.
func (in *EgressSecurityRulesUDPOptionsSourcePortRangeObservation) DeepCopy() *EgressSecurityRulesUDPOptionsSourcePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesUDPOptionsSourcePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EgressSecurityRulesUDPOptionsSourcePortRangeParameters) DeepCopyInto(out *EgressSecurityRulesUDPOptionsSourcePortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EgressSecurityRulesUDPOptionsSourcePortRangeParameters.
func (in *EgressSecurityRulesUDPOptionsSourcePortRangeParameters) DeepCopy() *EgressSecurityRulesUDPOptionsSourcePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(EgressSecurityRulesUDPOptionsSourcePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionDomainConfigInitParameters) DeepCopyInto(out *EncryptionDomainConfigInitParameters) {
	*out = *in
	if in.CpeTrafficSelector != nil {
		in, out := &in.CpeTrafficSelector, &out.CpeTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OracleTrafficSelector != nil {
		in, out := &in.OracleTrafficSelector, &out.OracleTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionDomainConfigInitParameters.
func (in *EncryptionDomainConfigInitParameters) DeepCopy() *EncryptionDomainConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionDomainConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionDomainConfigObservation) DeepCopyInto(out *EncryptionDomainConfigObservation) {
	*out = *in
	if in.CpeTrafficSelector != nil {
		in, out := &in.CpeTrafficSelector, &out.CpeTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OracleTrafficSelector != nil {
		in, out := &in.OracleTrafficSelector, &out.OracleTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionDomainConfigObservation.
func (in *EncryptionDomainConfigObservation) DeepCopy() *EncryptionDomainConfigObservation {
	if in == nil {
		return nil
	}
	out := new(EncryptionDomainConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EncryptionDomainConfigParameters) DeepCopyInto(out *EncryptionDomainConfigParameters) {
	*out = *in
	if in.CpeTrafficSelector != nil {
		in, out := &in.CpeTrafficSelector, &out.CpeTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OracleTrafficSelector != nil {
		in, out := &in.OracleTrafficSelector, &out.OracleTrafficSelector
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EncryptionDomainConfigParameters.
func (in *EncryptionDomainConfigParameters) DeepCopy() *EncryptionDomainConfigParameters {
	if in == nil {
		return nil
	}
	out := new(EncryptionDomainConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLogCaptureFilterRulesInitParameters) DeepCopyInto(out *FlowLogCaptureFilterRulesInitParameters) {
	*out = *in
	if in.DestinationCidr != nil {
		in, out := &in.DestinationCidr, &out.DestinationCidr
		*out = new(string)
		**out = **in
	}
	if in.FlowLogType != nil {
		in, out := &in.FlowLogType, &out.FlowLogType
		*out = new(string)
		**out = **in
	}
	if in.IcmpOptions != nil {
		in, out := &in.IcmpOptions, &out.IcmpOptions
		*out = make([]IcmpOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.SamplingRate != nil {
		in, out := &in.SamplingRate, &out.SamplingRate
		*out = new(float64)
		**out = **in
	}
	if in.SourceCidr != nil {
		in, out := &in.SourceCidr, &out.SourceCidr
		*out = new(string)
		**out = **in
	}
	if in.TCPOptions != nil {
		in, out := &in.TCPOptions, &out.TCPOptions
		*out = make([]TCPOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UDPOptions != nil {
		in, out := &in.UDPOptions, &out.UDPOptions
		*out = make([]UDPOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLogCaptureFilterRulesInitParameters.
func (in *FlowLogCaptureFilterRulesInitParameters) DeepCopy() *FlowLogCaptureFilterRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(FlowLogCaptureFilterRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLogCaptureFilterRulesObservation) DeepCopyInto(out *FlowLogCaptureFilterRulesObservation) {
	*out = *in
	if in.DestinationCidr != nil {
		in, out := &in.DestinationCidr, &out.DestinationCidr
		*out = new(string)
		**out = **in
	}
	if in.FlowLogType != nil {
		in, out := &in.FlowLogType, &out.FlowLogType
		*out = new(string)
		**out = **in
	}
	if in.IcmpOptions != nil {
		in, out := &in.IcmpOptions, &out.IcmpOptions
		*out = make([]IcmpOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.SamplingRate != nil {
		in, out := &in.SamplingRate, &out.SamplingRate
		*out = new(float64)
		**out = **in
	}
	if in.SourceCidr != nil {
		in, out := &in.SourceCidr, &out.SourceCidr
		*out = new(string)
		**out = **in
	}
	if in.TCPOptions != nil {
		in, out := &in.TCPOptions, &out.TCPOptions
		*out = make([]TCPOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UDPOptions != nil {
		in, out := &in.UDPOptions, &out.UDPOptions
		*out = make([]UDPOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLogCaptureFilterRulesObservation.
func (in *FlowLogCaptureFilterRulesObservation) DeepCopy() *FlowLogCaptureFilterRulesObservation {
	if in == nil {
		return nil
	}
	out := new(FlowLogCaptureFilterRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FlowLogCaptureFilterRulesParameters) DeepCopyInto(out *FlowLogCaptureFilterRulesParameters) {
	*out = *in
	if in.DestinationCidr != nil {
		in, out := &in.DestinationCidr, &out.DestinationCidr
		*out = new(string)
		**out = **in
	}
	if in.FlowLogType != nil {
		in, out := &in.FlowLogType, &out.FlowLogType
		*out = new(string)
		**out = **in
	}
	if in.IcmpOptions != nil {
		in, out := &in.IcmpOptions, &out.IcmpOptions
		*out = make([]IcmpOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsEnabled != nil {
		in, out := &in.IsEnabled, &out.IsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.SamplingRate != nil {
		in, out := &in.SamplingRate, &out.SamplingRate
		*out = new(float64)
		**out = **in
	}
	if in.SourceCidr != nil {
		in, out := &in.SourceCidr, &out.SourceCidr
		*out = new(string)
		**out = **in
	}
	if in.TCPOptions != nil {
		in, out := &in.TCPOptions, &out.TCPOptions
		*out = make([]TCPOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UDPOptions != nil {
		in, out := &in.UDPOptions, &out.UDPOptions
		*out = make([]UDPOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FlowLogCaptureFilterRulesParameters.
func (in *FlowLogCaptureFilterRulesParameters) DeepCopy() *FlowLogCaptureFilterRulesParameters {
	if in == nil {
		return nil
	}
	out := new(FlowLogCaptureFilterRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6) DeepCopyInto(out *IPv6) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6.
func (in *IPv6) DeepCopy() *IPv6 {
	if in == nil {
		return nil
	}
	out := new(IPv6)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPv6) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6InitParameters) DeepCopyInto(out *IPv6InitParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
	if in.VnicID != nil {
		in, out := &in.VnicID, &out.VnicID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6InitParameters.
func (in *IPv6InitParameters) DeepCopy() *IPv6InitParameters {
	if in == nil {
		return nil
	}
	out := new(IPv6InitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6List) DeepCopyInto(out *IPv6List) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IPv6, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6List.
func (in *IPv6List) DeepCopy() *IPv6List {
	if in == nil {
		return nil
	}
	out := new(IPv6List)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IPv6List) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6Observation) DeepCopyInto(out *IPv6Observation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VnicID != nil {
		in, out := &in.VnicID, &out.VnicID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6Observation.
func (in *IPv6Observation) DeepCopy() *IPv6Observation {
	if in == nil {
		return nil
	}
	out := new(IPv6Observation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6Parameters) DeepCopyInto(out *IPv6Parameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
	if in.VnicID != nil {
		in, out := &in.VnicID, &out.VnicID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6Parameters.
func (in *IPv6Parameters) DeepCopy() *IPv6Parameters {
	if in == nil {
		return nil
	}
	out := new(IPv6Parameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6Spec) DeepCopyInto(out *IPv6Spec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6Spec.
func (in *IPv6Spec) DeepCopy() *IPv6Spec {
	if in == nil {
		return nil
	}
	out := new(IPv6Spec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IPv6Status) DeepCopyInto(out *IPv6Status) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IPv6Status.
func (in *IPv6Status) DeepCopy() *IPv6Status {
	if in == nil {
		return nil
	}
	out := new(IPv6Status)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IcmpOptionsInitParameters) DeepCopyInto(out *IcmpOptionsInitParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IcmpOptionsInitParameters.
func (in *IcmpOptionsInitParameters) DeepCopy() *IcmpOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IcmpOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IcmpOptionsObservation) DeepCopyInto(out *IcmpOptionsObservation) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IcmpOptionsObservation.
func (in *IcmpOptionsObservation) DeepCopy() *IcmpOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(IcmpOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IcmpOptionsParameters) DeepCopyInto(out *IcmpOptionsParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IcmpOptionsParameters.
func (in *IcmpOptionsParameters) DeepCopy() *IcmpOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(IcmpOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Image) DeepCopyInto(out *Image) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Image.
func (in *Image) DeepCopy() *Image {
	if in == nil {
		return nil
	}
	out := new(Image)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Image) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageInitParameters) DeepCopyInto(out *ImageInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ImageSourceDetails != nil {
		in, out := &in.ImageSourceDetails, &out.ImageSourceDetails
		*out = make([]ImageSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageInitParameters.
func (in *ImageInitParameters) DeepCopy() *ImageInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImageInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageList) DeepCopyInto(out *ImageList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Image, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageList.
func (in *ImageList) DeepCopy() *ImageList {
	if in == nil {
		return nil
	}
	out := new(ImageList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ImageList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageObservation) DeepCopyInto(out *ImageObservation) {
	*out = *in
	if in.AgentFeatures != nil {
		in, out := &in.AgentFeatures, &out.AgentFeatures
		*out = make([]AgentFeaturesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BaseImageID != nil {
		in, out := &in.BaseImageID, &out.BaseImageID
		*out = new(string)
		**out = **in
	}
	if in.BillableSizeInGbs != nil {
		in, out := &in.BillableSizeInGbs, &out.BillableSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateImageAllowed != nil {
		in, out := &in.CreateImageAllowed, &out.CreateImageAllowed
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageSourceDetails != nil {
		in, out := &in.ImageSourceDetails, &out.ImageSourceDetails
		*out = make([]ImageSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]LaunchOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ListingType != nil {
		in, out := &in.ListingType, &out.ListingType
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageObservation.
func (in *ImageObservation) DeepCopy() *ImageObservation {
	if in == nil {
		return nil
	}
	out := new(ImageObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageParameters) DeepCopyInto(out *ImageParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ImageSourceDetails != nil {
		in, out := &in.ImageSourceDetails, &out.ImageSourceDetails
		*out = make([]ImageSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageParameters.
func (in *ImageParameters) DeepCopy() *ImageParameters {
	if in == nil {
		return nil
	}
	out := new(ImageParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageSourceDetailsInitParameters) DeepCopyInto(out *ImageSourceDetailsInitParameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
	if in.SourceImageType != nil {
		in, out := &in.SourceImageType, &out.SourceImageType
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.SourceURI != nil {
		in, out := &in.SourceURI, &out.SourceURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageSourceDetailsInitParameters.
func (in *ImageSourceDetailsInitParameters) DeepCopy() *ImageSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ImageSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageSourceDetailsObservation) DeepCopyInto(out *ImageSourceDetailsObservation) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
	if in.SourceImageType != nil {
		in, out := &in.SourceImageType, &out.SourceImageType
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.SourceURI != nil {
		in, out := &in.SourceURI, &out.SourceURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageSourceDetailsObservation.
func (in *ImageSourceDetailsObservation) DeepCopy() *ImageSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(ImageSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageSourceDetailsParameters) DeepCopyInto(out *ImageSourceDetailsParameters) {
	*out = *in
	if in.BucketName != nil {
		in, out := &in.BucketName, &out.BucketName
		*out = new(string)
		**out = **in
	}
	if in.NamespaceName != nil {
		in, out := &in.NamespaceName, &out.NamespaceName
		*out = new(string)
		**out = **in
	}
	if in.ObjectName != nil {
		in, out := &in.ObjectName, &out.ObjectName
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
	if in.SourceImageType != nil {
		in, out := &in.SourceImageType, &out.SourceImageType
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.SourceURI != nil {
		in, out := &in.SourceURI, &out.SourceURI
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageSourceDetailsParameters.
func (in *ImageSourceDetailsParameters) DeepCopy() *ImageSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(ImageSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageSpec) DeepCopyInto(out *ImageSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageSpec.
func (in *ImageSpec) DeepCopy() *ImageSpec {
	if in == nil {
		return nil
	}
	out := new(ImageSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ImageStatus) DeepCopyInto(out *ImageStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ImageStatus.
func (in *ImageStatus) DeepCopy() *ImageStatus {
	if in == nil {
		return nil
	}
	out := new(ImageStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesIcmpOptionsInitParameters) DeepCopyInto(out *IngressSecurityRulesIcmpOptionsInitParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesIcmpOptionsInitParameters.
func (in *IngressSecurityRulesIcmpOptionsInitParameters) DeepCopy() *IngressSecurityRulesIcmpOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesIcmpOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesIcmpOptionsObservation) DeepCopyInto(out *IngressSecurityRulesIcmpOptionsObservation) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesIcmpOptionsObservation.
func (in *IngressSecurityRulesIcmpOptionsObservation) DeepCopy() *IngressSecurityRulesIcmpOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesIcmpOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesIcmpOptionsParameters) DeepCopyInto(out *IngressSecurityRulesIcmpOptionsParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesIcmpOptionsParameters.
func (in *IngressSecurityRulesIcmpOptionsParameters) DeepCopy() *IngressSecurityRulesIcmpOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesIcmpOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesInitParameters) DeepCopyInto(out *IngressSecurityRulesInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IcmpOptions != nil {
		in, out := &in.IcmpOptions, &out.IcmpOptions
		*out = make([]IngressSecurityRulesIcmpOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Stateless != nil {
		in, out := &in.Stateless, &out.Stateless
		*out = new(bool)
		**out = **in
	}
	if in.TCPOptions != nil {
		in, out := &in.TCPOptions, &out.TCPOptions
		*out = make([]IngressSecurityRulesTCPOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UDPOptions != nil {
		in, out := &in.UDPOptions, &out.UDPOptions
		*out = make([]IngressSecurityRulesUDPOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesInitParameters.
func (in *IngressSecurityRulesInitParameters) DeepCopy() *IngressSecurityRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesObservation) DeepCopyInto(out *IngressSecurityRulesObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IcmpOptions != nil {
		in, out := &in.IcmpOptions, &out.IcmpOptions
		*out = make([]IngressSecurityRulesIcmpOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Stateless != nil {
		in, out := &in.Stateless, &out.Stateless
		*out = new(bool)
		**out = **in
	}
	if in.TCPOptions != nil {
		in, out := &in.TCPOptions, &out.TCPOptions
		*out = make([]IngressSecurityRulesTCPOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UDPOptions != nil {
		in, out := &in.UDPOptions, &out.UDPOptions
		*out = make([]IngressSecurityRulesUDPOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesObservation.
func (in *IngressSecurityRulesObservation) DeepCopy() *IngressSecurityRulesObservation {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesParameters) DeepCopyInto(out *IngressSecurityRulesParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.IcmpOptions != nil {
		in, out := &in.IcmpOptions, &out.IcmpOptions
		*out = make([]IngressSecurityRulesIcmpOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Stateless != nil {
		in, out := &in.Stateless, &out.Stateless
		*out = new(bool)
		**out = **in
	}
	if in.TCPOptions != nil {
		in, out := &in.TCPOptions, &out.TCPOptions
		*out = make([]IngressSecurityRulesTCPOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UDPOptions != nil {
		in, out := &in.UDPOptions, &out.UDPOptions
		*out = make([]IngressSecurityRulesUDPOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesParameters.
func (in *IngressSecurityRulesParameters) DeepCopy() *IngressSecurityRulesParameters {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesTCPOptionsInitParameters) DeepCopyInto(out *IngressSecurityRulesTCPOptionsInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]IngressSecurityRulesTCPOptionsSourcePortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesTCPOptionsInitParameters.
func (in *IngressSecurityRulesTCPOptionsInitParameters) DeepCopy() *IngressSecurityRulesTCPOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesTCPOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesTCPOptionsObservation) DeepCopyInto(out *IngressSecurityRulesTCPOptionsObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]IngressSecurityRulesTCPOptionsSourcePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesTCPOptionsObservation.
func (in *IngressSecurityRulesTCPOptionsObservation) DeepCopy() *IngressSecurityRulesTCPOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesTCPOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesTCPOptionsParameters) DeepCopyInto(out *IngressSecurityRulesTCPOptionsParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]IngressSecurityRulesTCPOptionsSourcePortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesTCPOptionsParameters.
func (in *IngressSecurityRulesTCPOptionsParameters) DeepCopy() *IngressSecurityRulesTCPOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesTCPOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesTCPOptionsSourcePortRangeInitParameters) DeepCopyInto(out *IngressSecurityRulesTCPOptionsSourcePortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesTCPOptionsSourcePortRangeInitParameters.
func (in *IngressSecurityRulesTCPOptionsSourcePortRangeInitParameters) DeepCopy() *IngressSecurityRulesTCPOptionsSourcePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesTCPOptionsSourcePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesTCPOptionsSourcePortRangeObservation) DeepCopyInto(out *IngressSecurityRulesTCPOptionsSourcePortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesTCPOptionsSourcePortRangeObservation.
func (in *IngressSecurityRulesTCPOptionsSourcePortRangeObservation) DeepCopy() *IngressSecurityRulesTCPOptionsSourcePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesTCPOptionsSourcePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesTCPOptionsSourcePortRangeParameters) DeepCopyInto(out *IngressSecurityRulesTCPOptionsSourcePortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesTCPOptionsSourcePortRangeParameters.
func (in *IngressSecurityRulesTCPOptionsSourcePortRangeParameters) DeepCopy() *IngressSecurityRulesTCPOptionsSourcePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesTCPOptionsSourcePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesUDPOptionsInitParameters) DeepCopyInto(out *IngressSecurityRulesUDPOptionsInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]IngressSecurityRulesUDPOptionsSourcePortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesUDPOptionsInitParameters.
func (in *IngressSecurityRulesUDPOptionsInitParameters) DeepCopy() *IngressSecurityRulesUDPOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesUDPOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesUDPOptionsObservation) DeepCopyInto(out *IngressSecurityRulesUDPOptionsObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]IngressSecurityRulesUDPOptionsSourcePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesUDPOptionsObservation.
func (in *IngressSecurityRulesUDPOptionsObservation) DeepCopy() *IngressSecurityRulesUDPOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesUDPOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesUDPOptionsParameters) DeepCopyInto(out *IngressSecurityRulesUDPOptionsParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]IngressSecurityRulesUDPOptionsSourcePortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesUDPOptionsParameters.
func (in *IngressSecurityRulesUDPOptionsParameters) DeepCopy() *IngressSecurityRulesUDPOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesUDPOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesUDPOptionsSourcePortRangeInitParameters) DeepCopyInto(out *IngressSecurityRulesUDPOptionsSourcePortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesUDPOptionsSourcePortRangeInitParameters.
func (in *IngressSecurityRulesUDPOptionsSourcePortRangeInitParameters) DeepCopy() *IngressSecurityRulesUDPOptionsSourcePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesUDPOptionsSourcePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesUDPOptionsSourcePortRangeObservation) DeepCopyInto(out *IngressSecurityRulesUDPOptionsSourcePortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesUDPOptionsSourcePortRangeObservation.
func (in *IngressSecurityRulesUDPOptionsSourcePortRangeObservation) DeepCopy() *IngressSecurityRulesUDPOptionsSourcePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesUDPOptionsSourcePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IngressSecurityRulesUDPOptionsSourcePortRangeParameters) DeepCopyInto(out *IngressSecurityRulesUDPOptionsSourcePortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IngressSecurityRulesUDPOptionsSourcePortRangeParameters.
func (in *IngressSecurityRulesUDPOptionsSourcePortRangeParameters) DeepCopy() *IngressSecurityRulesUDPOptionsSourcePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(IngressSecurityRulesUDPOptionsSourcePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Instance) DeepCopyInto(out *Instance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Instance.
func (in *Instance) DeepCopy() *Instance {
	if in == nil {
		return nil
	}
	out := new(Instance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Instance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConfiguration) DeepCopyInto(out *InstanceConfiguration) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConfiguration.
func (in *InstanceConfiguration) DeepCopy() *InstanceConfiguration {
	if in == nil {
		return nil
	}
	out := new(InstanceConfiguration)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceConfiguration) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConfigurationInitParameters) DeepCopyInto(out *InstanceConfigurationInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceDetails != nil {
		in, out := &in.InstanceDetails, &out.InstanceDetails
		*out = make([]InstanceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConfigurationInitParameters.
func (in *InstanceConfigurationInitParameters) DeepCopy() *InstanceConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConfigurationList) DeepCopyInto(out *InstanceConfigurationList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceConfiguration, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConfigurationList.
func (in *InstanceConfigurationList) DeepCopy() *InstanceConfigurationList {
	if in == nil {
		return nil
	}
	out := new(InstanceConfigurationList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceConfigurationList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConfigurationObservation) DeepCopyInto(out *InstanceConfigurationObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DeferredFields != nil {
		in, out := &in.DeferredFields, &out.DeferredFields
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceDetails != nil {
		in, out := &in.InstanceDetails, &out.InstanceDetails
		*out = make([]InstanceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConfigurationObservation.
func (in *InstanceConfigurationObservation) DeepCopy() *InstanceConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConfigurationParameters) DeepCopyInto(out *InstanceConfigurationParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceDetails != nil {
		in, out := &in.InstanceDetails, &out.InstanceDetails
		*out = make([]InstanceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConfigurationParameters.
func (in *InstanceConfigurationParameters) DeepCopy() *InstanceConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConfigurationSpec) DeepCopyInto(out *InstanceConfigurationSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConfigurationSpec.
func (in *InstanceConfigurationSpec) DeepCopy() *InstanceConfigurationSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceConfigurationSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConfigurationStatus) DeepCopyInto(out *InstanceConfigurationStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConfigurationStatus.
func (in *InstanceConfigurationStatus) DeepCopy() *InstanceConfigurationStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceConfigurationStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConsoleConnection) DeepCopyInto(out *InstanceConsoleConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConsoleConnection.
func (in *InstanceConsoleConnection) DeepCopy() *InstanceConsoleConnection {
	if in == nil {
		return nil
	}
	out := new(InstanceConsoleConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceConsoleConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConsoleConnectionInitParameters) DeepCopyInto(out *InstanceConsoleConnectionInitParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConsoleConnectionInitParameters.
func (in *InstanceConsoleConnectionInitParameters) DeepCopy() *InstanceConsoleConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceConsoleConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConsoleConnectionList) DeepCopyInto(out *InstanceConsoleConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstanceConsoleConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConsoleConnectionList.
func (in *InstanceConsoleConnectionList) DeepCopy() *InstanceConsoleConnectionList {
	if in == nil {
		return nil
	}
	out := new(InstanceConsoleConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceConsoleConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConsoleConnectionObservation) DeepCopyInto(out *InstanceConsoleConnectionObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ConnectionString != nil {
		in, out := &in.ConnectionString, &out.ConnectionString
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Fingerprint != nil {
		in, out := &in.Fingerprint, &out.Fingerprint
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.ServiceHostKeyFingerprint != nil {
		in, out := &in.ServiceHostKeyFingerprint, &out.ServiceHostKeyFingerprint
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.VncConnectionString != nil {
		in, out := &in.VncConnectionString, &out.VncConnectionString
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConsoleConnectionObservation.
func (in *InstanceConsoleConnectionObservation) DeepCopy() *InstanceConsoleConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceConsoleConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConsoleConnectionParameters) DeepCopyInto(out *InstanceConsoleConnectionParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConsoleConnectionParameters.
func (in *InstanceConsoleConnectionParameters) DeepCopy() *InstanceConsoleConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceConsoleConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConsoleConnectionSpec) DeepCopyInto(out *InstanceConsoleConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConsoleConnectionSpec.
func (in *InstanceConsoleConnectionSpec) DeepCopy() *InstanceConsoleConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceConsoleConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceConsoleConnectionStatus) DeepCopyInto(out *InstanceConsoleConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceConsoleConnectionStatus.
func (in *InstanceConsoleConnectionStatus) DeepCopy() *InstanceConsoleConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceConsoleConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsInitParameters) DeepCopyInto(out *InstanceDetailsInitParameters) {
	*out = *in
	if in.BlockVolumes != nil {
		in, out := &in.BlockVolumes, &out.BlockVolumes
		*out = make([]BlockVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.LaunchDetails != nil {
		in, out := &in.LaunchDetails, &out.LaunchDetails
		*out = make([]LaunchDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]InstanceDetailsOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnics != nil {
		in, out := &in.SecondaryVnics, &out.SecondaryVnics
		*out = make([]InstanceDetailsSecondaryVnicsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsInitParameters.
func (in *InstanceDetailsInitParameters) DeepCopy() *InstanceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsObservation) DeepCopyInto(out *InstanceDetailsObservation) {
	*out = *in
	if in.BlockVolumes != nil {
		in, out := &in.BlockVolumes, &out.BlockVolumes
		*out = make([]BlockVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.LaunchDetails != nil {
		in, out := &in.LaunchDetails, &out.LaunchDetails
		*out = make([]LaunchDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]InstanceDetailsOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnics != nil {
		in, out := &in.SecondaryVnics, &out.SecondaryVnics
		*out = make([]InstanceDetailsSecondaryVnicsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsObservation.
func (in *InstanceDetailsObservation) DeepCopy() *InstanceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsOptionsInitParameters) DeepCopyInto(out *InstanceDetailsOptionsInitParameters) {
	*out = *in
	if in.BlockVolumes != nil {
		in, out := &in.BlockVolumes, &out.BlockVolumes
		*out = make([]OptionsBlockVolumesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchDetails != nil {
		in, out := &in.LaunchDetails, &out.LaunchDetails
		*out = make([]OptionsLaunchDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnics != nil {
		in, out := &in.SecondaryVnics, &out.SecondaryVnics
		*out = make([]SecondaryVnicsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsOptionsInitParameters.
func (in *InstanceDetailsOptionsInitParameters) DeepCopy() *InstanceDetailsOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsOptionsObservation) DeepCopyInto(out *InstanceDetailsOptionsObservation) {
	*out = *in
	if in.BlockVolumes != nil {
		in, out := &in.BlockVolumes, &out.BlockVolumes
		*out = make([]OptionsBlockVolumesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchDetails != nil {
		in, out := &in.LaunchDetails, &out.LaunchDetails
		*out = make([]OptionsLaunchDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnics != nil {
		in, out := &in.SecondaryVnics, &out.SecondaryVnics
		*out = make([]SecondaryVnicsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsOptionsObservation.
func (in *InstanceDetailsOptionsObservation) DeepCopy() *InstanceDetailsOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsOptionsParameters) DeepCopyInto(out *InstanceDetailsOptionsParameters) {
	*out = *in
	if in.BlockVolumes != nil {
		in, out := &in.BlockVolumes, &out.BlockVolumes
		*out = make([]OptionsBlockVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchDetails != nil {
		in, out := &in.LaunchDetails, &out.LaunchDetails
		*out = make([]OptionsLaunchDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnics != nil {
		in, out := &in.SecondaryVnics, &out.SecondaryVnics
		*out = make([]SecondaryVnicsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsOptionsParameters.
func (in *InstanceDetailsOptionsParameters) DeepCopy() *InstanceDetailsOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsParameters) DeepCopyInto(out *InstanceDetailsParameters) {
	*out = *in
	if in.BlockVolumes != nil {
		in, out := &in.BlockVolumes, &out.BlockVolumes
		*out = make([]BlockVolumesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.LaunchDetails != nil {
		in, out := &in.LaunchDetails, &out.LaunchDetails
		*out = make([]LaunchDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Options != nil {
		in, out := &in.Options, &out.Options
		*out = make([]InstanceDetailsOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnics != nil {
		in, out := &in.SecondaryVnics, &out.SecondaryVnics
		*out = make([]InstanceDetailsSecondaryVnicsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsParameters.
func (in *InstanceDetailsParameters) DeepCopy() *InstanceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsInitParameters) DeepCopyInto(out *InstanceDetailsSecondaryVnicsCreateVnicDetailsInitParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsCreateVnicDetailsInitParameters.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsInitParameters) DeepCopy() *InstanceDetailsSecondaryVnicsCreateVnicDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsCreateVnicDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsObservation) DeepCopyInto(out *InstanceDetailsSecondaryVnicsCreateVnicDetailsObservation) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsCreateVnicDetailsObservation.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsObservation) DeepCopy() *InstanceDetailsSecondaryVnicsCreateVnicDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsCreateVnicDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsParameters) DeepCopyInto(out *InstanceDetailsSecondaryVnicsCreateVnicDetailsParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]InstanceDetailsSecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsCreateVnicDetailsParameters.
func (in *InstanceDetailsSecondaryVnicsCreateVnicDetailsParameters) DeepCopy() *InstanceDetailsSecondaryVnicsCreateVnicDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsCreateVnicDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsInitParameters) DeepCopyInto(out *InstanceDetailsSecondaryVnicsInitParameters) {
	*out = *in
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]InstanceDetailsSecondaryVnicsCreateVnicDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NicIndex != nil {
		in, out := &in.NicIndex, &out.NicIndex
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsInitParameters.
func (in *InstanceDetailsSecondaryVnicsInitParameters) DeepCopy() *InstanceDetailsSecondaryVnicsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsObservation) DeepCopyInto(out *InstanceDetailsSecondaryVnicsObservation) {
	*out = *in
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]InstanceDetailsSecondaryVnicsCreateVnicDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NicIndex != nil {
		in, out := &in.NicIndex, &out.NicIndex
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsObservation.
func (in *InstanceDetailsSecondaryVnicsObservation) DeepCopy() *InstanceDetailsSecondaryVnicsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceDetailsSecondaryVnicsParameters) DeepCopyInto(out *InstanceDetailsSecondaryVnicsParameters) {
	*out = *in
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]InstanceDetailsSecondaryVnicsCreateVnicDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NicIndex != nil {
		in, out := &in.NicIndex, &out.NicIndex
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceDetailsSecondaryVnicsParameters.
func (in *InstanceDetailsSecondaryVnicsParameters) DeepCopy() *InstanceDetailsSecondaryVnicsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceDetailsSecondaryVnicsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceInitParameters) DeepCopyInto(out *InstanceInitParameters) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]AgentConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Async != nil {
		in, out := &in.Async, &out.Async
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]AvailabilityConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ComputeClusterID != nil {
		in, out := &in.ComputeClusterID, &out.ComputeClusterID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]CreateVnicDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]InstanceOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]InstanceLaunchOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchVolumeAttachments != nil {
		in, out := &in.LaunchVolumeAttachments, &out.LaunchVolumeAttachments
		*out = make([]LaunchVolumeAttachmentsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]PlatformConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]PreemptibleInstanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.PreserveDataVolumesCreatedAtLaunch != nil {
		in, out := &in.PreserveDataVolumesCreatedAtLaunch, &out.PreserveDataVolumesCreatedAtLaunch
		*out = new(bool)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]ShapeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]InstanceSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.UpdateOperationConstraint != nil {
		in, out := &in.UpdateOperationConstraint, &out.UpdateOperationConstraint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceInitParameters.
func (in *InstanceInitParameters) DeepCopy() *InstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceLaunchOptionsInitParameters) DeepCopyInto(out *InstanceLaunchOptionsInitParameters) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceLaunchOptionsInitParameters.
func (in *InstanceLaunchOptionsInitParameters) DeepCopy() *InstanceLaunchOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceLaunchOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceLaunchOptionsObservation) DeepCopyInto(out *InstanceLaunchOptionsObservation) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceLaunchOptionsObservation.
func (in *InstanceLaunchOptionsObservation) DeepCopy() *InstanceLaunchOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceLaunchOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceLaunchOptionsParameters) DeepCopyInto(out *InstanceLaunchOptionsParameters) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceLaunchOptionsParameters.
func (in *InstanceLaunchOptionsParameters) DeepCopy() *InstanceLaunchOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceLaunchOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceList) DeepCopyInto(out *InstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Instance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceList.
func (in *InstanceList) DeepCopy() *InstanceList {
	if in == nil {
		return nil
	}
	out := new(InstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceObservation) DeepCopyInto(out *InstanceObservation) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]AgentConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Async != nil {
		in, out := &in.Async, &out.Async
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]AvailabilityConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ComputeClusterID != nil {
		in, out := &in.ComputeClusterID, &out.ComputeClusterID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]CreateVnicDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]InstanceOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsCrossNumaNode != nil {
		in, out := &in.IsCrossNumaNode, &out.IsCrossNumaNode
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]InstanceLaunchOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchVolumeAttachments != nil {
		in, out := &in.LaunchVolumeAttachments, &out.LaunchVolumeAttachments
		*out = make([]LaunchVolumeAttachmentsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]PlatformConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]PreemptibleInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.PreserveDataVolumesCreatedAtLaunch != nil {
		in, out := &in.PreserveDataVolumesCreatedAtLaunch, &out.PreserveDataVolumesCreatedAtLaunch
		*out = new(bool)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]ShapeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]InstanceSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeMaintenanceRebootDue != nil {
		in, out := &in.TimeMaintenanceRebootDue, &out.TimeMaintenanceRebootDue
		*out = new(string)
		**out = **in
	}
	if in.UpdateOperationConstraint != nil {
		in, out := &in.UpdateOperationConstraint, &out.UpdateOperationConstraint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceObservation.
func (in *InstanceObservation) DeepCopy() *InstanceObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceOptionsInitParameters) DeepCopyInto(out *InstanceOptionsInitParameters) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceOptionsInitParameters.
func (in *InstanceOptionsInitParameters) DeepCopy() *InstanceOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceOptionsObservation) DeepCopyInto(out *InstanceOptionsObservation) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceOptionsObservation.
func (in *InstanceOptionsObservation) DeepCopy() *InstanceOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceOptionsParameters) DeepCopyInto(out *InstanceOptionsParameters) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceOptionsParameters.
func (in *InstanceOptionsParameters) DeepCopy() *InstanceOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceParameters) DeepCopyInto(out *InstanceParameters) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]AgentConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Async != nil {
		in, out := &in.Async, &out.Async
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]AvailabilityConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ComputeClusterID != nil {
		in, out := &in.ComputeClusterID, &out.ComputeClusterID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]CreateVnicDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Image != nil {
		in, out := &in.Image, &out.Image
		*out = new(string)
		**out = **in
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]InstanceOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]InstanceLaunchOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LaunchVolumeAttachments != nil {
		in, out := &in.LaunchVolumeAttachments, &out.LaunchVolumeAttachments
		*out = make([]LaunchVolumeAttachmentsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]PlatformConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]PreemptibleInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.PreserveDataVolumesCreatedAtLaunch != nil {
		in, out := &in.PreserveDataVolumesCreatedAtLaunch, &out.PreserveDataVolumesCreatedAtLaunch
		*out = new(bool)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]ShapeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]InstanceSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.UpdateOperationConstraint != nil {
		in, out := &in.UpdateOperationConstraint, &out.UpdateOperationConstraint
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceParameters.
func (in *InstanceParameters) DeepCopy() *InstanceParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePool) DeepCopyInto(out *InstancePool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePool.
func (in *InstancePool) DeepCopy() *InstancePool {
	if in == nil {
		return nil
	}
	out := new(InstancePool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstancePool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInitParameters) DeepCopyInto(out *InstancePoolInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceDisplayNameFormatter != nil {
		in, out := &in.InstanceDisplayNameFormatter, &out.InstanceDisplayNameFormatter
		*out = new(string)
		**out = **in
	}
	if in.InstanceHostnameFormatter != nil {
		in, out := &in.InstanceHostnameFormatter, &out.InstanceHostnameFormatter
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]InstancePoolLoadBalancersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConfigurations != nil {
		in, out := &in.PlacementConfigurations, &out.PlacementConfigurations
		*out = make([]InstancePoolPlacementConfigurationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInitParameters.
func (in *InstancePoolInitParameters) DeepCopy() *InstancePoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInstance) DeepCopyInto(out *InstancePoolInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInstance.
func (in *InstancePoolInstance) DeepCopy() *InstancePoolInstance {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstancePoolInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInstanceInitParameters) DeepCopyInto(out *InstancePoolInstanceInitParameters) {
	*out = *in
	if in.AutoTerminateInstanceOnDelete != nil {
		in, out := &in.AutoTerminateInstanceOnDelete, &out.AutoTerminateInstanceOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.DecrementSizeOnDelete != nil {
		in, out := &in.DecrementSizeOnDelete, &out.DecrementSizeOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInstanceInitParameters.
func (in *InstancePoolInstanceInitParameters) DeepCopy() *InstancePoolInstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInstanceList) DeepCopyInto(out *InstancePoolInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstancePoolInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInstanceList.
func (in *InstancePoolInstanceList) DeepCopy() *InstancePoolInstanceList {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstancePoolInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInstanceObservation) DeepCopyInto(out *InstancePoolInstanceObservation) {
	*out = *in
	if in.AutoTerminateInstanceOnDelete != nil {
		in, out := &in.AutoTerminateInstanceOnDelete, &out.AutoTerminateInstanceOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DecrementSizeOnDelete != nil {
		in, out := &in.DecrementSizeOnDelete, &out.DecrementSizeOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerBackends != nil {
		in, out := &in.LoadBalancerBackends, &out.LoadBalancerBackends
		*out = make([]LoadBalancerBackendsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInstanceObservation.
func (in *InstancePoolInstanceObservation) DeepCopy() *InstancePoolInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInstanceParameters) DeepCopyInto(out *InstancePoolInstanceParameters) {
	*out = *in
	if in.AutoTerminateInstanceOnDelete != nil {
		in, out := &in.AutoTerminateInstanceOnDelete, &out.AutoTerminateInstanceOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.DecrementSizeOnDelete != nil {
		in, out := &in.DecrementSizeOnDelete, &out.DecrementSizeOnDelete
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInstanceParameters.
func (in *InstancePoolInstanceParameters) DeepCopy() *InstancePoolInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInstanceSpec) DeepCopyInto(out *InstancePoolInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInstanceSpec.
func (in *InstancePoolInstanceSpec) DeepCopy() *InstancePoolInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolInstanceStatus) DeepCopyInto(out *InstancePoolInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolInstanceStatus.
func (in *InstancePoolInstanceStatus) DeepCopy() *InstancePoolInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(InstancePoolInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolList) DeepCopyInto(out *InstancePoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InstancePool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolList.
func (in *InstancePoolList) DeepCopy() *InstancePoolList {
	if in == nil {
		return nil
	}
	out := new(InstancePoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InstancePoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolLoadBalancersInitParameters) DeepCopyInto(out *InstancePoolLoadBalancersInitParameters) {
	*out = *in
	if in.BackendSetName != nil {
		in, out := &in.BackendSetName, &out.BackendSetName
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.VnicSelection != nil {
		in, out := &in.VnicSelection, &out.VnicSelection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolLoadBalancersInitParameters.
func (in *InstancePoolLoadBalancersInitParameters) DeepCopy() *InstancePoolLoadBalancersInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolLoadBalancersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolLoadBalancersObservation) DeepCopyInto(out *InstancePoolLoadBalancersObservation) {
	*out = *in
	if in.BackendSetName != nil {
		in, out := &in.BackendSetName, &out.BackendSetName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.VnicSelection != nil {
		in, out := &in.VnicSelection, &out.VnicSelection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolLoadBalancersObservation.
func (in *InstancePoolLoadBalancersObservation) DeepCopy() *InstancePoolLoadBalancersObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolLoadBalancersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolLoadBalancersParameters) DeepCopyInto(out *InstancePoolLoadBalancersParameters) {
	*out = *in
	if in.BackendSetName != nil {
		in, out := &in.BackendSetName, &out.BackendSetName
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.VnicSelection != nil {
		in, out := &in.VnicSelection, &out.VnicSelection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolLoadBalancersParameters.
func (in *InstancePoolLoadBalancersParameters) DeepCopy() *InstancePoolLoadBalancersParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolLoadBalancersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolObservation) DeepCopyInto(out *InstancePoolObservation) {
	*out = *in
	if in.ActualSize != nil {
		in, out := &in.ActualSize, &out.ActualSize
		*out = new(float64)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceDisplayNameFormatter != nil {
		in, out := &in.InstanceDisplayNameFormatter, &out.InstanceDisplayNameFormatter
		*out = new(string)
		**out = **in
	}
	if in.InstanceHostnameFormatter != nil {
		in, out := &in.InstanceHostnameFormatter, &out.InstanceHostnameFormatter
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]InstancePoolLoadBalancersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConfigurations != nil {
		in, out := &in.PlacementConfigurations, &out.PlacementConfigurations
		*out = make([]InstancePoolPlacementConfigurationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolObservation.
func (in *InstancePoolObservation) DeepCopy() *InstancePoolObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolParameters) DeepCopyInto(out *InstancePoolParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceDisplayNameFormatter != nil {
		in, out := &in.InstanceDisplayNameFormatter, &out.InstanceDisplayNameFormatter
		*out = new(string)
		**out = **in
	}
	if in.InstanceHostnameFormatter != nil {
		in, out := &in.InstanceHostnameFormatter, &out.InstanceHostnameFormatter
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]InstancePoolLoadBalancersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConfigurations != nil {
		in, out := &in.PlacementConfigurations, &out.PlacementConfigurations
		*out = make([]InstancePoolPlacementConfigurationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolParameters.
func (in *InstancePoolParameters) DeepCopy() *InstancePoolParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolPlacementConfigurationsInitParameters) DeepCopyInto(out *InstancePoolPlacementConfigurationsInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.FaultDomains != nil {
		in, out := &in.FaultDomains, &out.FaultDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrimarySubnetID != nil {
		in, out := &in.PrimarySubnetID, &out.PrimarySubnetID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryVnicSubnets != nil {
		in, out := &in.PrimaryVnicSubnets, &out.PrimaryVnicSubnets
		*out = make([]PlacementConfigurationsPrimaryVnicSubnetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnicSubnets != nil {
		in, out := &in.SecondaryVnicSubnets, &out.SecondaryVnicSubnets
		*out = make([]PlacementConfigurationsSecondaryVnicSubnetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolPlacementConfigurationsInitParameters.
func (in *InstancePoolPlacementConfigurationsInitParameters) DeepCopy() *InstancePoolPlacementConfigurationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolPlacementConfigurationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolPlacementConfigurationsObservation) DeepCopyInto(out *InstancePoolPlacementConfigurationsObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.FaultDomains != nil {
		in, out := &in.FaultDomains, &out.FaultDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrimarySubnetID != nil {
		in, out := &in.PrimarySubnetID, &out.PrimarySubnetID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryVnicSubnets != nil {
		in, out := &in.PrimaryVnicSubnets, &out.PrimaryVnicSubnets
		*out = make([]PlacementConfigurationsPrimaryVnicSubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnicSubnets != nil {
		in, out := &in.SecondaryVnicSubnets, &out.SecondaryVnicSubnets
		*out = make([]PlacementConfigurationsSecondaryVnicSubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolPlacementConfigurationsObservation.
func (in *InstancePoolPlacementConfigurationsObservation) DeepCopy() *InstancePoolPlacementConfigurationsObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolPlacementConfigurationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolPlacementConfigurationsParameters) DeepCopyInto(out *InstancePoolPlacementConfigurationsParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.FaultDomains != nil {
		in, out := &in.FaultDomains, &out.FaultDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrimarySubnetID != nil {
		in, out := &in.PrimarySubnetID, &out.PrimarySubnetID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryVnicSubnets != nil {
		in, out := &in.PrimaryVnicSubnets, &out.PrimaryVnicSubnets
		*out = make([]PlacementConfigurationsPrimaryVnicSubnetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnicSubnets != nil {
		in, out := &in.SecondaryVnicSubnets, &out.SecondaryVnicSubnets
		*out = make([]PlacementConfigurationsSecondaryVnicSubnetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolPlacementConfigurationsParameters.
func (in *InstancePoolPlacementConfigurationsParameters) DeepCopy() *InstancePoolPlacementConfigurationsParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolPlacementConfigurationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolSpec) DeepCopyInto(out *InstancePoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolSpec.
func (in *InstancePoolSpec) DeepCopy() *InstancePoolSpec {
	if in == nil {
		return nil
	}
	out := new(InstancePoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolStatus) DeepCopyInto(out *InstancePoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolStatus.
func (in *InstancePoolStatus) DeepCopy() *InstancePoolStatus {
	if in == nil {
		return nil
	}
	out := new(InstancePoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolsInitParameters) DeepCopyInto(out *InstancePoolsInitParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolsInitParameters.
func (in *InstancePoolsInitParameters) DeepCopy() *InstancePoolsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolsObservation) DeepCopyInto(out *InstancePoolsObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.InstanceDisplayNameFormatter != nil {
		in, out := &in.InstanceDisplayNameFormatter, &out.InstanceDisplayNameFormatter
		*out = new(string)
		**out = **in
	}
	if in.InstanceHostnameFormatter != nil {
		in, out := &in.InstanceHostnameFormatter, &out.InstanceHostnameFormatter
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancers != nil {
		in, out := &in.LoadBalancers, &out.LoadBalancers
		*out = make([]LoadBalancersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PlacementConfigurations != nil {
		in, out := &in.PlacementConfigurations, &out.PlacementConfigurations
		*out = make([]PlacementConfigurationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolsObservation.
func (in *InstancePoolsObservation) DeepCopy() *InstancePoolsObservation {
	if in == nil {
		return nil
	}
	out := new(InstancePoolsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstancePoolsParameters) DeepCopyInto(out *InstancePoolsParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceConfigurationID != nil {
		in, out := &in.InstanceConfigurationID, &out.InstanceConfigurationID
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstancePoolsParameters.
func (in *InstancePoolsParameters) DeepCopy() *InstancePoolsParameters {
	if in == nil {
		return nil
	}
	out := new(InstancePoolsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceReservationConfigsInitParameters) DeepCopyInto(out *InstanceReservationConfigsInitParameters) {
	*out = *in
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = make([]ClusterConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.InstanceShape != nil {
		in, out := &in.InstanceShape, &out.InstanceShape
		*out = new(string)
		**out = **in
	}
	if in.InstanceShapeConfig != nil {
		in, out := &in.InstanceShapeConfig, &out.InstanceShapeConfig
		*out = make([]InstanceShapeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReservedCount != nil {
		in, out := &in.ReservedCount, &out.ReservedCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceReservationConfigsInitParameters.
func (in *InstanceReservationConfigsInitParameters) DeepCopy() *InstanceReservationConfigsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceReservationConfigsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceReservationConfigsObservation) DeepCopyInto(out *InstanceReservationConfigsObservation) {
	*out = *in
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = make([]ClusterConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.InstanceShape != nil {
		in, out := &in.InstanceShape, &out.InstanceShape
		*out = new(string)
		**out = **in
	}
	if in.InstanceShapeConfig != nil {
		in, out := &in.InstanceShapeConfig, &out.InstanceShapeConfig
		*out = make([]InstanceShapeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReservedCount != nil {
		in, out := &in.ReservedCount, &out.ReservedCount
		*out = new(string)
		**out = **in
	}
	if in.UsedCount != nil {
		in, out := &in.UsedCount, &out.UsedCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceReservationConfigsObservation.
func (in *InstanceReservationConfigsObservation) DeepCopy() *InstanceReservationConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceReservationConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceReservationConfigsParameters) DeepCopyInto(out *InstanceReservationConfigsParameters) {
	*out = *in
	if in.ClusterConfig != nil {
		in, out := &in.ClusterConfig, &out.ClusterConfig
		*out = make([]ClusterConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.InstanceShape != nil {
		in, out := &in.InstanceShape, &out.InstanceShape
		*out = new(string)
		**out = **in
	}
	if in.InstanceShapeConfig != nil {
		in, out := &in.InstanceShapeConfig, &out.InstanceShapeConfig
		*out = make([]InstanceShapeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReservedCount != nil {
		in, out := &in.ReservedCount, &out.ReservedCount
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceReservationConfigsParameters.
func (in *InstanceReservationConfigsParameters) DeepCopy() *InstanceReservationConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceReservationConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceShapeConfigInitParameters) DeepCopyInto(out *InstanceShapeConfigInitParameters) {
	*out = *in
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceShapeConfigInitParameters.
func (in *InstanceShapeConfigInitParameters) DeepCopy() *InstanceShapeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceShapeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceShapeConfigObservation) DeepCopyInto(out *InstanceShapeConfigObservation) {
	*out = *in
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceShapeConfigObservation.
func (in *InstanceShapeConfigObservation) DeepCopy() *InstanceShapeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceShapeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceShapeConfigParameters) DeepCopyInto(out *InstanceShapeConfigParameters) {
	*out = *in
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceShapeConfigParameters.
func (in *InstanceShapeConfigParameters) DeepCopy() *InstanceShapeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceShapeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSourceDetailsInitParameters) DeepCopyInto(out *InstanceSourceDetailsInitParameters) {
	*out = *in
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]InstanceSourceImageFilterDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsPreserveBootVolumeEnabled != nil {
		in, out := &in.IsPreserveBootVolumeEnabled, &out.IsPreserveBootVolumeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSourceDetailsInitParameters.
func (in *InstanceSourceDetailsInitParameters) DeepCopy() *InstanceSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSourceDetailsObservation) DeepCopyInto(out *InstanceSourceDetailsObservation) {
	*out = *in
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]InstanceSourceImageFilterDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsPreserveBootVolumeEnabled != nil {
		in, out := &in.IsPreserveBootVolumeEnabled, &out.IsPreserveBootVolumeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSourceDetailsObservation.
func (in *InstanceSourceDetailsObservation) DeepCopy() *InstanceSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSourceDetailsParameters) DeepCopyInto(out *InstanceSourceDetailsParameters) {
	*out = *in
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]InstanceSourceImageFilterDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsPreserveBootVolumeEnabled != nil {
		in, out := &in.IsPreserveBootVolumeEnabled, &out.IsPreserveBootVolumeEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSourceDetailsParameters.
func (in *InstanceSourceDetailsParameters) DeepCopy() *InstanceSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSourceImageFilterDetailsInitParameters) DeepCopyInto(out *InstanceSourceImageFilterDetailsInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSourceImageFilterDetailsInitParameters.
func (in *InstanceSourceImageFilterDetailsInitParameters) DeepCopy() *InstanceSourceImageFilterDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceSourceImageFilterDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSourceImageFilterDetailsObservation) DeepCopyInto(out *InstanceSourceImageFilterDetailsObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSourceImageFilterDetailsObservation.
func (in *InstanceSourceImageFilterDetailsObservation) DeepCopy() *InstanceSourceImageFilterDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(InstanceSourceImageFilterDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSourceImageFilterDetailsParameters) DeepCopyInto(out *InstanceSourceImageFilterDetailsParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSourceImageFilterDetailsParameters.
func (in *InstanceSourceImageFilterDetailsParameters) DeepCopy() *InstanceSourceImageFilterDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(InstanceSourceImageFilterDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceSpec) DeepCopyInto(out *InstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceSpec.
func (in *InstanceSpec) DeepCopy() *InstanceSpec {
	if in == nil {
		return nil
	}
	out := new(InstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InstanceStatus) DeepCopyInto(out *InstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InstanceStatus.
func (in *InstanceStatus) DeepCopy() *InstanceStatus {
	if in == nil {
		return nil
	}
	out := new(InstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGateway) DeepCopyInto(out *InternetGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGateway.
func (in *InternetGateway) DeepCopy() *InternetGateway {
	if in == nil {
		return nil
	}
	out := new(InternetGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InternetGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGatewayInitParameters) DeepCopyInto(out *InternetGatewayInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGatewayInitParameters.
func (in *InternetGatewayInitParameters) DeepCopy() *InternetGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(InternetGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGatewayList) DeepCopyInto(out *InternetGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]InternetGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGatewayList.
func (in *InternetGatewayList) DeepCopy() *InternetGatewayList {
	if in == nil {
		return nil
	}
	out := new(InternetGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *InternetGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGatewayObservation) DeepCopyInto(out *InternetGatewayObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGatewayObservation.
func (in *InternetGatewayObservation) DeepCopy() *InternetGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(InternetGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGatewayParameters) DeepCopyInto(out *InternetGatewayParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGatewayParameters.
func (in *InternetGatewayParameters) DeepCopy() *InternetGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(InternetGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGatewaySpec) DeepCopyInto(out *InternetGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGatewaySpec.
func (in *InternetGatewaySpec) DeepCopy() *InternetGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(InternetGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InternetGatewayStatus) DeepCopyInto(out *InternetGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InternetGatewayStatus.
func (in *InternetGatewayStatus) DeepCopy() *InternetGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(InternetGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ipsec) DeepCopyInto(out *Ipsec) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ipsec.
func (in *Ipsec) DeepCopy() *Ipsec {
	if in == nil {
		return nil
	}
	out := new(Ipsec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Ipsec) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecConnectionTunnelManagement) DeepCopyInto(out *IpsecConnectionTunnelManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecConnectionTunnelManagement.
func (in *IpsecConnectionTunnelManagement) DeepCopy() *IpsecConnectionTunnelManagement {
	if in == nil {
		return nil
	}
	out := new(IpsecConnectionTunnelManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IpsecConnectionTunnelManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecConnectionTunnelManagementInitParameters) DeepCopyInto(out *IpsecConnectionTunnelManagementInitParameters) {
	*out = *in
	if in.BGPSessionInfo != nil {
		in, out := &in.BGPSessionInfo, &out.BGPSessionInfo
		*out = make([]BGPSessionInfoInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DpdConfig != nil {
		in, out := &in.DpdConfig, &out.DpdConfig
		*out = make([]DpdConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionDomainConfig != nil {
		in, out := &in.EncryptionDomainConfig, &out.EncryptionDomainConfig
		*out = make([]EncryptionDomainConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IkeVersion != nil {
		in, out := &in.IkeVersion, &out.IkeVersion
		*out = new(string)
		**out = **in
	}
	if in.IpsecID != nil {
		in, out := &in.IpsecID, &out.IpsecID
		*out = new(string)
		**out = **in
	}
	if in.NATTranslationEnabled != nil {
		in, out := &in.NATTranslationEnabled, &out.NATTranslationEnabled
		*out = new(string)
		**out = **in
	}
	if in.OracleCanInitiate != nil {
		in, out := &in.OracleCanInitiate, &out.OracleCanInitiate
		*out = new(string)
		**out = **in
	}
	if in.PhaseOneDetails != nil {
		in, out := &in.PhaseOneDetails, &out.PhaseOneDetails
		*out = make([]PhaseOneDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PhaseTwoDetails != nil {
		in, out := &in.PhaseTwoDetails, &out.PhaseTwoDetails
		*out = make([]PhaseTwoDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(string)
		**out = **in
	}
	if in.SharedSecretSecretRef != nil {
		in, out := &in.SharedSecretSecretRef, &out.SharedSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TunnelID != nil {
		in, out := &in.TunnelID, &out.TunnelID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecConnectionTunnelManagementInitParameters.
func (in *IpsecConnectionTunnelManagementInitParameters) DeepCopy() *IpsecConnectionTunnelManagementInitParameters {
	if in == nil {
		return nil
	}
	out := new(IpsecConnectionTunnelManagementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecConnectionTunnelManagementList) DeepCopyInto(out *IpsecConnectionTunnelManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]IpsecConnectionTunnelManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecConnectionTunnelManagementList.
func (in *IpsecConnectionTunnelManagementList) DeepCopy() *IpsecConnectionTunnelManagementList {
	if in == nil {
		return nil
	}
	out := new(IpsecConnectionTunnelManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IpsecConnectionTunnelManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecConnectionTunnelManagementObservation) DeepCopyInto(out *IpsecConnectionTunnelManagementObservation) {
	*out = *in
	if in.AssociatedVirtualCircuits != nil {
		in, out := &in.AssociatedVirtualCircuits, &out.AssociatedVirtualCircuits
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BGPSessionInfo != nil {
		in, out := &in.BGPSessionInfo, &out.BGPSessionInfo
		*out = make([]BGPSessionInfoObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CpeIP != nil {
		in, out := &in.CpeIP, &out.CpeIP
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DpdConfig != nil {
		in, out := &in.DpdConfig, &out.DpdConfig
		*out = make([]DpdConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DpdMode != nil {
		in, out := &in.DpdMode, &out.DpdMode
		*out = new(string)
		**out = **in
	}
	if in.DpdTimeoutInSec != nil {
		in, out := &in.DpdTimeoutInSec, &out.DpdTimeoutInSec
		*out = new(float64)
		**out = **in
	}
	if in.EncryptionDomainConfig != nil {
		in, out := &in.EncryptionDomainConfig, &out.EncryptionDomainConfig
		*out = make([]EncryptionDomainConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IkeVersion != nil {
		in, out := &in.IkeVersion, &out.IkeVersion
		*out = new(string)
		**out = **in
	}
	if in.IpsecID != nil {
		in, out := &in.IpsecID, &out.IpsecID
		*out = new(string)
		**out = **in
	}
	if in.NATTranslationEnabled != nil {
		in, out := &in.NATTranslationEnabled, &out.NATTranslationEnabled
		*out = new(string)
		**out = **in
	}
	if in.OracleCanInitiate != nil {
		in, out := &in.OracleCanInitiate, &out.OracleCanInitiate
		*out = new(string)
		**out = **in
	}
	if in.PhaseOneDetails != nil {
		in, out := &in.PhaseOneDetails, &out.PhaseOneDetails
		*out = make([]PhaseOneDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PhaseTwoDetails != nil {
		in, out := &in.PhaseTwoDetails, &out.PhaseTwoDetails
		*out = make([]PhaseTwoDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeStatusUpdated != nil {
		in, out := &in.TimeStatusUpdated, &out.TimeStatusUpdated
		*out = new(string)
		**out = **in
	}
	if in.TunnelID != nil {
		in, out := &in.TunnelID, &out.TunnelID
		*out = new(string)
		**out = **in
	}
	if in.VPNIP != nil {
		in, out := &in.VPNIP, &out.VPNIP
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecConnectionTunnelManagementObservation.
func (in *IpsecConnectionTunnelManagementObservation) DeepCopy() *IpsecConnectionTunnelManagementObservation {
	if in == nil {
		return nil
	}
	out := new(IpsecConnectionTunnelManagementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecConnectionTunnelManagementParameters) DeepCopyInto(out *IpsecConnectionTunnelManagementParameters) {
	*out = *in
	if in.BGPSessionInfo != nil {
		in, out := &in.BGPSessionInfo, &out.BGPSessionInfo
		*out = make([]BGPSessionInfoParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DpdConfig != nil {
		in, out := &in.DpdConfig, &out.DpdConfig
		*out = make([]DpdConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.EncryptionDomainConfig != nil {
		in, out := &in.EncryptionDomainConfig, &out.EncryptionDomainConfig
		*out = make([]EncryptionDomainConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IkeVersion != nil {
		in, out := &in.IkeVersion, &out.IkeVersion
		*out = new(string)
		**out = **in
	}
	if in.IpsecID != nil {
		in, out := &in.IpsecID, &out.IpsecID
		*out = new(string)
		**out = **in
	}
	if in.NATTranslationEnabled != nil {
		in, out := &in.NATTranslationEnabled, &out.NATTranslationEnabled
		*out = new(string)
		**out = **in
	}
	if in.OracleCanInitiate != nil {
		in, out := &in.OracleCanInitiate, &out.OracleCanInitiate
		*out = new(string)
		**out = **in
	}
	if in.PhaseOneDetails != nil {
		in, out := &in.PhaseOneDetails, &out.PhaseOneDetails
		*out = make([]PhaseOneDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PhaseTwoDetails != nil {
		in, out := &in.PhaseTwoDetails, &out.PhaseTwoDetails
		*out = make([]PhaseTwoDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Routing != nil {
		in, out := &in.Routing, &out.Routing
		*out = new(string)
		**out = **in
	}
	if in.SharedSecretSecretRef != nil {
		in, out := &in.SharedSecretSecretRef, &out.SharedSecretSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.TunnelID != nil {
		in, out := &in.TunnelID, &out.TunnelID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecConnectionTunnelManagementParameters.
func (in *IpsecConnectionTunnelManagementParameters) DeepCopy() *IpsecConnectionTunnelManagementParameters {
	if in == nil {
		return nil
	}
	out := new(IpsecConnectionTunnelManagementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecConnectionTunnelManagementSpec) DeepCopyInto(out *IpsecConnectionTunnelManagementSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecConnectionTunnelManagementSpec.
func (in *IpsecConnectionTunnelManagementSpec) DeepCopy() *IpsecConnectionTunnelManagementSpec {
	if in == nil {
		return nil
	}
	out := new(IpsecConnectionTunnelManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecConnectionTunnelManagementStatus) DeepCopyInto(out *IpsecConnectionTunnelManagementStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecConnectionTunnelManagementStatus.
func (in *IpsecConnectionTunnelManagementStatus) DeepCopy() *IpsecConnectionTunnelManagementStatus {
	if in == nil {
		return nil
	}
	out := new(IpsecConnectionTunnelManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecInitParameters) DeepCopyInto(out *IpsecInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CpeID != nil {
		in, out := &in.CpeID, &out.CpeID
		*out = new(string)
		**out = **in
	}
	if in.CpeLocalIdentifier != nil {
		in, out := &in.CpeLocalIdentifier, &out.CpeLocalIdentifier
		*out = new(string)
		**out = **in
	}
	if in.CpeLocalIdentifierType != nil {
		in, out := &in.CpeLocalIdentifierType, &out.CpeLocalIdentifierType
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StaticRoutes != nil {
		in, out := &in.StaticRoutes, &out.StaticRoutes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecInitParameters.
func (in *IpsecInitParameters) DeepCopy() *IpsecInitParameters {
	if in == nil {
		return nil
	}
	out := new(IpsecInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecList) DeepCopyInto(out *IpsecList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Ipsec, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecList.
func (in *IpsecList) DeepCopy() *IpsecList {
	if in == nil {
		return nil
	}
	out := new(IpsecList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *IpsecList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecObservation) DeepCopyInto(out *IpsecObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CpeID != nil {
		in, out := &in.CpeID, &out.CpeID
		*out = new(string)
		**out = **in
	}
	if in.CpeLocalIdentifier != nil {
		in, out := &in.CpeLocalIdentifier, &out.CpeLocalIdentifier
		*out = new(string)
		**out = **in
	}
	if in.CpeLocalIdentifierType != nil {
		in, out := &in.CpeLocalIdentifierType, &out.CpeLocalIdentifierType
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.StaticRoutes != nil {
		in, out := &in.StaticRoutes, &out.StaticRoutes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TransportType != nil {
		in, out := &in.TransportType, &out.TransportType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecObservation.
func (in *IpsecObservation) DeepCopy() *IpsecObservation {
	if in == nil {
		return nil
	}
	out := new(IpsecObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecParameters) DeepCopyInto(out *IpsecParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CpeID != nil {
		in, out := &in.CpeID, &out.CpeID
		*out = new(string)
		**out = **in
	}
	if in.CpeLocalIdentifier != nil {
		in, out := &in.CpeLocalIdentifier, &out.CpeLocalIdentifier
		*out = new(string)
		**out = **in
	}
	if in.CpeLocalIdentifierType != nil {
		in, out := &in.CpeLocalIdentifierType, &out.CpeLocalIdentifierType
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.StaticRoutes != nil {
		in, out := &in.StaticRoutes, &out.StaticRoutes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecParameters.
func (in *IpsecParameters) DeepCopy() *IpsecParameters {
	if in == nil {
		return nil
	}
	out := new(IpsecParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecSpec) DeepCopyInto(out *IpsecSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecSpec.
func (in *IpsecSpec) DeepCopy() *IpsecSpec {
	if in == nil {
		return nil
	}
	out := new(IpsecSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *IpsecStatus) DeepCopyInto(out *IpsecStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new IpsecStatus.
func (in *IpsecStatus) DeepCopy() *IpsecStatus {
	if in == nil {
		return nil
	}
	out := new(IpsecStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ipv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *Ipv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ipv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *Ipv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *Ipv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(Ipv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ipv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *Ipv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ipv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *Ipv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *Ipv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(Ipv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Ipv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *Ipv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Ipv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *Ipv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *Ipv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(Ipv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchCreateVolumeDetailsInitParameters) DeepCopyInto(out *LaunchCreateVolumeDetailsInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.VolumeCreationType != nil {
		in, out := &in.VolumeCreationType, &out.VolumeCreationType
		*out = new(string)
		**out = **in
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchCreateVolumeDetailsInitParameters.
func (in *LaunchCreateVolumeDetailsInitParameters) DeepCopy() *LaunchCreateVolumeDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchCreateVolumeDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchCreateVolumeDetailsObservation) DeepCopyInto(out *LaunchCreateVolumeDetailsObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.VolumeCreationType != nil {
		in, out := &in.VolumeCreationType, &out.VolumeCreationType
		*out = new(string)
		**out = **in
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchCreateVolumeDetailsObservation.
func (in *LaunchCreateVolumeDetailsObservation) DeepCopy() *LaunchCreateVolumeDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchCreateVolumeDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchCreateVolumeDetailsParameters) DeepCopyInto(out *LaunchCreateVolumeDetailsParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.VolumeCreationType != nil {
		in, out := &in.VolumeCreationType, &out.VolumeCreationType
		*out = new(string)
		**out = **in
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchCreateVolumeDetailsParameters.
func (in *LaunchCreateVolumeDetailsParameters) DeepCopy() *LaunchCreateVolumeDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchCreateVolumeDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAgentConfigInitParameters) DeepCopyInto(out *LaunchDetailsAgentConfigInitParameters) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]AgentConfigPluginsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAgentConfigInitParameters.
func (in *LaunchDetailsAgentConfigInitParameters) DeepCopy() *LaunchDetailsAgentConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAgentConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAgentConfigObservation) DeepCopyInto(out *LaunchDetailsAgentConfigObservation) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]AgentConfigPluginsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAgentConfigObservation.
func (in *LaunchDetailsAgentConfigObservation) DeepCopy() *LaunchDetailsAgentConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAgentConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAgentConfigParameters) DeepCopyInto(out *LaunchDetailsAgentConfigParameters) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]AgentConfigPluginsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAgentConfigParameters.
func (in *LaunchDetailsAgentConfigParameters) DeepCopy() *LaunchDetailsAgentConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAgentConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAgentConfigPluginsConfigInitParameters) DeepCopyInto(out *LaunchDetailsAgentConfigPluginsConfigInitParameters) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAgentConfigPluginsConfigInitParameters.
func (in *LaunchDetailsAgentConfigPluginsConfigInitParameters) DeepCopy() *LaunchDetailsAgentConfigPluginsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAgentConfigPluginsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAgentConfigPluginsConfigObservation) DeepCopyInto(out *LaunchDetailsAgentConfigPluginsConfigObservation) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAgentConfigPluginsConfigObservation.
func (in *LaunchDetailsAgentConfigPluginsConfigObservation) DeepCopy() *LaunchDetailsAgentConfigPluginsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAgentConfigPluginsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAgentConfigPluginsConfigParameters) DeepCopyInto(out *LaunchDetailsAgentConfigPluginsConfigParameters) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAgentConfigPluginsConfigParameters.
func (in *LaunchDetailsAgentConfigPluginsConfigParameters) DeepCopy() *LaunchDetailsAgentConfigPluginsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAgentConfigPluginsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAvailabilityConfigInitParameters) DeepCopyInto(out *LaunchDetailsAvailabilityConfigInitParameters) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAvailabilityConfigInitParameters.
func (in *LaunchDetailsAvailabilityConfigInitParameters) DeepCopy() *LaunchDetailsAvailabilityConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAvailabilityConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAvailabilityConfigObservation) DeepCopyInto(out *LaunchDetailsAvailabilityConfigObservation) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAvailabilityConfigObservation.
func (in *LaunchDetailsAvailabilityConfigObservation) DeepCopy() *LaunchDetailsAvailabilityConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAvailabilityConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsAvailabilityConfigParameters) DeepCopyInto(out *LaunchDetailsAvailabilityConfigParameters) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsAvailabilityConfigParameters.
func (in *LaunchDetailsAvailabilityConfigParameters) DeepCopy() *LaunchDetailsAvailabilityConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsAvailabilityConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsCreateVnicDetailsInitParameters) DeepCopyInto(out *LaunchDetailsCreateVnicDetailsInitParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsCreateVnicDetailsInitParameters.
func (in *LaunchDetailsCreateVnicDetailsInitParameters) DeepCopy() *LaunchDetailsCreateVnicDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsCreateVnicDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsCreateVnicDetailsObservation) DeepCopyInto(out *LaunchDetailsCreateVnicDetailsObservation) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsCreateVnicDetailsObservation.
func (in *LaunchDetailsCreateVnicDetailsObservation) DeepCopy() *LaunchDetailsCreateVnicDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsCreateVnicDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsCreateVnicDetailsParameters) DeepCopyInto(out *LaunchDetailsCreateVnicDetailsParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]LaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsCreateVnicDetailsParameters.
func (in *LaunchDetailsCreateVnicDetailsParameters) DeepCopy() *LaunchDetailsCreateVnicDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsCreateVnicDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsInitParameters) DeepCopyInto(out *LaunchDetailsInitParameters) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]LaunchDetailsAgentConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]LaunchDetailsAvailabilityConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]LaunchDetailsCreateVnicDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]LaunchDetailsInstanceOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]LaunchDetailsLaunchOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]LaunchDetailsPlatformConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]LaunchDetailsPreemptibleInstanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredMaintenanceAction != nil {
		in, out := &in.PreferredMaintenanceAction, &out.PreferredMaintenanceAction
		*out = new(string)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]LaunchDetailsShapeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]LaunchDetailsSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsInitParameters.
func (in *LaunchDetailsInitParameters) DeepCopy() *LaunchDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsInstanceOptionsInitParameters) DeepCopyInto(out *LaunchDetailsInstanceOptionsInitParameters) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsInstanceOptionsInitParameters.
func (in *LaunchDetailsInstanceOptionsInitParameters) DeepCopy() *LaunchDetailsInstanceOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsInstanceOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsInstanceOptionsObservation) DeepCopyInto(out *LaunchDetailsInstanceOptionsObservation) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsInstanceOptionsObservation.
func (in *LaunchDetailsInstanceOptionsObservation) DeepCopy() *LaunchDetailsInstanceOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsInstanceOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsInstanceOptionsParameters) DeepCopyInto(out *LaunchDetailsInstanceOptionsParameters) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsInstanceOptionsParameters.
func (in *LaunchDetailsInstanceOptionsParameters) DeepCopy() *LaunchDetailsInstanceOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsInstanceOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsLaunchOptionsInitParameters) DeepCopyInto(out *LaunchDetailsLaunchOptionsInitParameters) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsLaunchOptionsInitParameters.
func (in *LaunchDetailsLaunchOptionsInitParameters) DeepCopy() *LaunchDetailsLaunchOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsLaunchOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsLaunchOptionsObservation) DeepCopyInto(out *LaunchDetailsLaunchOptionsObservation) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsLaunchOptionsObservation.
func (in *LaunchDetailsLaunchOptionsObservation) DeepCopy() *LaunchDetailsLaunchOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsLaunchOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsLaunchOptionsParameters) DeepCopyInto(out *LaunchDetailsLaunchOptionsParameters) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsLaunchOptionsParameters.
func (in *LaunchDetailsLaunchOptionsParameters) DeepCopy() *LaunchDetailsLaunchOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsLaunchOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsObservation) DeepCopyInto(out *LaunchDetailsObservation) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]LaunchDetailsAgentConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]LaunchDetailsAvailabilityConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]LaunchDetailsCreateVnicDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]LaunchDetailsInstanceOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]LaunchDetailsLaunchOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]LaunchDetailsPlatformConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]LaunchDetailsPreemptibleInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredMaintenanceAction != nil {
		in, out := &in.PreferredMaintenanceAction, &out.PreferredMaintenanceAction
		*out = new(string)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]LaunchDetailsShapeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]LaunchDetailsSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsObservation.
func (in *LaunchDetailsObservation) DeepCopy() *LaunchDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsParameters) DeepCopyInto(out *LaunchDetailsParameters) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]LaunchDetailsAgentConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]LaunchDetailsAvailabilityConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]LaunchDetailsCreateVnicDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]LaunchDetailsInstanceOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]LaunchDetailsLaunchOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]LaunchDetailsPlatformConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]LaunchDetailsPreemptibleInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredMaintenanceAction != nil {
		in, out := &in.PreferredMaintenanceAction, &out.PreferredMaintenanceAction
		*out = new(string)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]LaunchDetailsShapeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]LaunchDetailsSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsParameters.
func (in *LaunchDetailsParameters) DeepCopy() *LaunchDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPlatformConfigInitParameters) DeepCopyInto(out *LaunchDetailsPlatformConfigInitParameters) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPlatformConfigInitParameters.
func (in *LaunchDetailsPlatformConfigInitParameters) DeepCopy() *LaunchDetailsPlatformConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPlatformConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPlatformConfigObservation) DeepCopyInto(out *LaunchDetailsPlatformConfigObservation) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPlatformConfigObservation.
func (in *LaunchDetailsPlatformConfigObservation) DeepCopy() *LaunchDetailsPlatformConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPlatformConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPlatformConfigParameters) DeepCopyInto(out *LaunchDetailsPlatformConfigParameters) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPlatformConfigParameters.
func (in *LaunchDetailsPlatformConfigParameters) DeepCopy() *LaunchDetailsPlatformConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPlatformConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPreemptibleInstanceConfigInitParameters) DeepCopyInto(out *LaunchDetailsPreemptibleInstanceConfigInitParameters) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]PreemptibleInstanceConfigPreemptionActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPreemptibleInstanceConfigInitParameters.
func (in *LaunchDetailsPreemptibleInstanceConfigInitParameters) DeepCopy() *LaunchDetailsPreemptibleInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPreemptibleInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPreemptibleInstanceConfigObservation) DeepCopyInto(out *LaunchDetailsPreemptibleInstanceConfigObservation) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]PreemptibleInstanceConfigPreemptionActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPreemptibleInstanceConfigObservation.
func (in *LaunchDetailsPreemptibleInstanceConfigObservation) DeepCopy() *LaunchDetailsPreemptibleInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPreemptibleInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPreemptibleInstanceConfigParameters) DeepCopyInto(out *LaunchDetailsPreemptibleInstanceConfigParameters) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]PreemptibleInstanceConfigPreemptionActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPreemptibleInstanceConfigParameters.
func (in *LaunchDetailsPreemptibleInstanceConfigParameters) DeepCopy() *LaunchDetailsPreemptibleInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPreemptibleInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPreemptibleInstanceConfigPreemptionActionInitParameters) DeepCopyInto(out *LaunchDetailsPreemptibleInstanceConfigPreemptionActionInitParameters) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPreemptibleInstanceConfigPreemptionActionInitParameters.
func (in *LaunchDetailsPreemptibleInstanceConfigPreemptionActionInitParameters) DeepCopy() *LaunchDetailsPreemptibleInstanceConfigPreemptionActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPreemptibleInstanceConfigPreemptionActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPreemptibleInstanceConfigPreemptionActionObservation) DeepCopyInto(out *LaunchDetailsPreemptibleInstanceConfigPreemptionActionObservation) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPreemptibleInstanceConfigPreemptionActionObservation.
func (in *LaunchDetailsPreemptibleInstanceConfigPreemptionActionObservation) DeepCopy() *LaunchDetailsPreemptibleInstanceConfigPreemptionActionObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPreemptibleInstanceConfigPreemptionActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsPreemptibleInstanceConfigPreemptionActionParameters) DeepCopyInto(out *LaunchDetailsPreemptibleInstanceConfigPreemptionActionParameters) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsPreemptibleInstanceConfigPreemptionActionParameters.
func (in *LaunchDetailsPreemptibleInstanceConfigPreemptionActionParameters) DeepCopy() *LaunchDetailsPreemptibleInstanceConfigPreemptionActionParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsPreemptibleInstanceConfigPreemptionActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsShapeConfigInitParameters) DeepCopyInto(out *LaunchDetailsShapeConfigInitParameters) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsShapeConfigInitParameters.
func (in *LaunchDetailsShapeConfigInitParameters) DeepCopy() *LaunchDetailsShapeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsShapeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsShapeConfigObservation) DeepCopyInto(out *LaunchDetailsShapeConfigObservation) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsShapeConfigObservation.
func (in *LaunchDetailsShapeConfigObservation) DeepCopy() *LaunchDetailsShapeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsShapeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsShapeConfigParameters) DeepCopyInto(out *LaunchDetailsShapeConfigParameters) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsShapeConfigParameters.
func (in *LaunchDetailsShapeConfigParameters) DeepCopy() *LaunchDetailsShapeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsShapeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsSourceDetailsInitParameters) DeepCopyInto(out *LaunchDetailsSourceDetailsInitParameters) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]SourceDetailsInstanceSourceImageFilterDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsSourceDetailsInitParameters.
func (in *LaunchDetailsSourceDetailsInitParameters) DeepCopy() *LaunchDetailsSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsInitParameters) DeepCopyInto(out *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsInitParameters.
func (in *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsInitParameters) DeepCopy() *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsObservation) DeepCopyInto(out *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsObservation.
func (in *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsObservation) DeepCopy() *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsParameters) DeepCopyInto(out *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsParameters.
func (in *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsParameters) DeepCopy() *LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsSourceDetailsObservation) DeepCopyInto(out *LaunchDetailsSourceDetailsObservation) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]SourceDetailsInstanceSourceImageFilterDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsSourceDetailsObservation.
func (in *LaunchDetailsSourceDetailsObservation) DeepCopy() *LaunchDetailsSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchDetailsSourceDetailsParameters) DeepCopyInto(out *LaunchDetailsSourceDetailsParameters) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]SourceDetailsInstanceSourceImageFilterDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchDetailsSourceDetailsParameters.
func (in *LaunchDetailsSourceDetailsParameters) DeepCopy() *LaunchDetailsSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchDetailsSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchOptionsInitParameters) DeepCopyInto(out *LaunchOptionsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchOptionsInitParameters.
func (in *LaunchOptionsInitParameters) DeepCopy() *LaunchOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchOptionsObservation) DeepCopyInto(out *LaunchOptionsObservation) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchOptionsObservation.
func (in *LaunchOptionsObservation) DeepCopy() *LaunchOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchOptionsParameters) DeepCopyInto(out *LaunchOptionsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchOptionsParameters.
func (in *LaunchOptionsParameters) DeepCopy() *LaunchOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchVolumeAttachmentsInitParameters) DeepCopyInto(out *LaunchVolumeAttachmentsInitParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionInTransitType != nil {
		in, out := &in.EncryptionInTransitType, &out.EncryptionInTransitType
		*out = new(string)
		**out = **in
	}
	if in.IsAgentAutoISCSILoginEnabled != nil {
		in, out := &in.IsAgentAutoISCSILoginEnabled, &out.IsAgentAutoISCSILoginEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.LaunchCreateVolumeDetails != nil {
		in, out := &in.LaunchCreateVolumeDetails, &out.LaunchCreateVolumeDetails
		*out = make([]LaunchCreateVolumeDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchVolumeAttachmentsInitParameters.
func (in *LaunchVolumeAttachmentsInitParameters) DeepCopy() *LaunchVolumeAttachmentsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchVolumeAttachmentsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchVolumeAttachmentsObservation) DeepCopyInto(out *LaunchVolumeAttachmentsObservation) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionInTransitType != nil {
		in, out := &in.EncryptionInTransitType, &out.EncryptionInTransitType
		*out = new(string)
		**out = **in
	}
	if in.IsAgentAutoISCSILoginEnabled != nil {
		in, out := &in.IsAgentAutoISCSILoginEnabled, &out.IsAgentAutoISCSILoginEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.LaunchCreateVolumeDetails != nil {
		in, out := &in.LaunchCreateVolumeDetails, &out.LaunchCreateVolumeDetails
		*out = make([]LaunchCreateVolumeDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchVolumeAttachmentsObservation.
func (in *LaunchVolumeAttachmentsObservation) DeepCopy() *LaunchVolumeAttachmentsObservation {
	if in == nil {
		return nil
	}
	out := new(LaunchVolumeAttachmentsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LaunchVolumeAttachmentsParameters) DeepCopyInto(out *LaunchVolumeAttachmentsParameters) {
	*out = *in
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionInTransitType != nil {
		in, out := &in.EncryptionInTransitType, &out.EncryptionInTransitType
		*out = new(string)
		**out = **in
	}
	if in.IsAgentAutoISCSILoginEnabled != nil {
		in, out := &in.IsAgentAutoISCSILoginEnabled, &out.IsAgentAutoISCSILoginEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.LaunchCreateVolumeDetails != nil {
		in, out := &in.LaunchCreateVolumeDetails, &out.LaunchCreateVolumeDetails
		*out = make([]LaunchCreateVolumeDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LaunchVolumeAttachmentsParameters.
func (in *LaunchVolumeAttachmentsParameters) DeepCopy() *LaunchVolumeAttachmentsParameters {
	if in == nil {
		return nil
	}
	out := new(LaunchVolumeAttachmentsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendsInitParameters) DeepCopyInto(out *LoadBalancerBackendsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendsInitParameters.
func (in *LoadBalancerBackendsInitParameters) DeepCopy() *LoadBalancerBackendsInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendsObservation) DeepCopyInto(out *LoadBalancerBackendsObservation) {
	*out = *in
	if in.BackendHealthStatus != nil {
		in, out := &in.BackendHealthStatus, &out.BackendHealthStatus
		*out = new(string)
		**out = **in
	}
	if in.BackendName != nil {
		in, out := &in.BackendName, &out.BackendName
		*out = new(string)
		**out = **in
	}
	if in.BackendSetName != nil {
		in, out := &in.BackendSetName, &out.BackendSetName
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendsObservation.
func (in *LoadBalancerBackendsObservation) DeepCopy() *LoadBalancerBackendsObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancerBackendsParameters) DeepCopyInto(out *LoadBalancerBackendsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancerBackendsParameters.
func (in *LoadBalancerBackendsParameters) DeepCopy() *LoadBalancerBackendsParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancerBackendsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancersInitParameters) DeepCopyInto(out *LoadBalancersInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancersInitParameters.
func (in *LoadBalancersInitParameters) DeepCopy() *LoadBalancersInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancersObservation) DeepCopyInto(out *LoadBalancersObservation) {
	*out = *in
	if in.BackendSetName != nil {
		in, out := &in.BackendSetName, &out.BackendSetName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstancePoolID != nil {
		in, out := &in.InstancePoolID, &out.InstancePoolID
		*out = new(string)
		**out = **in
	}
	if in.LoadBalancerID != nil {
		in, out := &in.LoadBalancerID, &out.LoadBalancerID
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.VnicSelection != nil {
		in, out := &in.VnicSelection, &out.VnicSelection
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancersObservation.
func (in *LoadBalancersObservation) DeepCopy() *LoadBalancersObservation {
	if in == nil {
		return nil
	}
	out := new(LoadBalancersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoadBalancersParameters) DeepCopyInto(out *LoadBalancersParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoadBalancersParameters.
func (in *LoadBalancersParameters) DeepCopy() *LoadBalancersParameters {
	if in == nil {
		return nil
	}
	out := new(LoadBalancersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalPeeringGateway) DeepCopyInto(out *LocalPeeringGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalPeeringGateway.
func (in *LocalPeeringGateway) DeepCopy() *LocalPeeringGateway {
	if in == nil {
		return nil
	}
	out := new(LocalPeeringGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LocalPeeringGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalPeeringGatewayInitParameters) DeepCopyInto(out *LocalPeeringGatewayInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PeerID != nil {
		in, out := &in.PeerID, &out.PeerID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalPeeringGatewayInitParameters.
func (in *LocalPeeringGatewayInitParameters) DeepCopy() *LocalPeeringGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(LocalPeeringGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalPeeringGatewayList) DeepCopyInto(out *LocalPeeringGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LocalPeeringGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalPeeringGatewayList.
func (in *LocalPeeringGatewayList) DeepCopy() *LocalPeeringGatewayList {
	if in == nil {
		return nil
	}
	out := new(LocalPeeringGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LocalPeeringGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalPeeringGatewayObservation) DeepCopyInto(out *LocalPeeringGatewayObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsCrossTenancyPeering != nil {
		in, out := &in.IsCrossTenancyPeering, &out.IsCrossTenancyPeering
		*out = new(bool)
		**out = **in
	}
	if in.PeerAdvertisedCidr != nil {
		in, out := &in.PeerAdvertisedCidr, &out.PeerAdvertisedCidr
		*out = new(string)
		**out = **in
	}
	if in.PeerAdvertisedCidrDetails != nil {
		in, out := &in.PeerAdvertisedCidrDetails, &out.PeerAdvertisedCidrDetails
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PeerID != nil {
		in, out := &in.PeerID, &out.PeerID
		*out = new(string)
		**out = **in
	}
	if in.PeeringStatus != nil {
		in, out := &in.PeeringStatus, &out.PeeringStatus
		*out = new(string)
		**out = **in
	}
	if in.PeeringStatusDetails != nil {
		in, out := &in.PeeringStatusDetails, &out.PeeringStatusDetails
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalPeeringGatewayObservation.
func (in *LocalPeeringGatewayObservation) DeepCopy() *LocalPeeringGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(LocalPeeringGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalPeeringGatewayParameters) DeepCopyInto(out *LocalPeeringGatewayParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PeerID != nil {
		in, out := &in.PeerID, &out.PeerID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalPeeringGatewayParameters.
func (in *LocalPeeringGatewayParameters) DeepCopy() *LocalPeeringGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(LocalPeeringGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalPeeringGatewaySpec) DeepCopyInto(out *LocalPeeringGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalPeeringGatewaySpec.
func (in *LocalPeeringGatewaySpec) DeepCopy() *LocalPeeringGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(LocalPeeringGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LocalPeeringGatewayStatus) DeepCopyInto(out *LocalPeeringGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LocalPeeringGatewayStatus.
func (in *LocalPeeringGatewayStatus) DeepCopy() *LocalPeeringGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(LocalPeeringGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacsecPropertiesInitParameters) DeepCopyInto(out *MacsecPropertiesInitParameters) {
	*out = *in
	if in.EncryptionCipher != nil {
		in, out := &in.EncryptionCipher, &out.EncryptionCipher
		*out = new(string)
		**out = **in
	}
	if in.IsUnprotectedTrafficAllowed != nil {
		in, out := &in.IsUnprotectedTrafficAllowed, &out.IsUnprotectedTrafficAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]PrimaryKeyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacsecPropertiesInitParameters.
func (in *MacsecPropertiesInitParameters) DeepCopy() *MacsecPropertiesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MacsecPropertiesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacsecPropertiesObservation) DeepCopyInto(out *MacsecPropertiesObservation) {
	*out = *in
	if in.EncryptionCipher != nil {
		in, out := &in.EncryptionCipher, &out.EncryptionCipher
		*out = new(string)
		**out = **in
	}
	if in.IsUnprotectedTrafficAllowed != nil {
		in, out := &in.IsUnprotectedTrafficAllowed, &out.IsUnprotectedTrafficAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]PrimaryKeyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacsecPropertiesObservation.
func (in *MacsecPropertiesObservation) DeepCopy() *MacsecPropertiesObservation {
	if in == nil {
		return nil
	}
	out := new(MacsecPropertiesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacsecPropertiesParameters) DeepCopyInto(out *MacsecPropertiesParameters) {
	*out = *in
	if in.EncryptionCipher != nil {
		in, out := &in.EncryptionCipher, &out.EncryptionCipher
		*out = new(string)
		**out = **in
	}
	if in.IsUnprotectedTrafficAllowed != nil {
		in, out := &in.IsUnprotectedTrafficAllowed, &out.IsUnprotectedTrafficAllowed
		*out = new(bool)
		**out = **in
	}
	if in.PrimaryKey != nil {
		in, out := &in.PrimaryKey, &out.PrimaryKey
		*out = make([]PrimaryKeyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacsecPropertiesParameters.
func (in *MacsecPropertiesParameters) DeepCopy() *MacsecPropertiesParameters {
	if in == nil {
		return nil
	}
	out := new(MacsecPropertiesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacsecPropertiesPrimaryKeyInitParameters) DeepCopyInto(out *MacsecPropertiesPrimaryKeyInitParameters) {
	*out = *in
	if in.ConnectivityAssociationKeySecretID != nil {
		in, out := &in.ConnectivityAssociationKeySecretID, &out.ConnectivityAssociationKeySecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationKeySecretVersion != nil {
		in, out := &in.ConnectivityAssociationKeySecretVersion, &out.ConnectivityAssociationKeySecretVersion
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretID != nil {
		in, out := &in.ConnectivityAssociationNameSecretID, &out.ConnectivityAssociationNameSecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretVersion != nil {
		in, out := &in.ConnectivityAssociationNameSecretVersion, &out.ConnectivityAssociationNameSecretVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacsecPropertiesPrimaryKeyInitParameters.
func (in *MacsecPropertiesPrimaryKeyInitParameters) DeepCopy() *MacsecPropertiesPrimaryKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(MacsecPropertiesPrimaryKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacsecPropertiesPrimaryKeyObservation) DeepCopyInto(out *MacsecPropertiesPrimaryKeyObservation) {
	*out = *in
	if in.ConnectivityAssociationKeySecretID != nil {
		in, out := &in.ConnectivityAssociationKeySecretID, &out.ConnectivityAssociationKeySecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationKeySecretVersion != nil {
		in, out := &in.ConnectivityAssociationKeySecretVersion, &out.ConnectivityAssociationKeySecretVersion
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretID != nil {
		in, out := &in.ConnectivityAssociationNameSecretID, &out.ConnectivityAssociationNameSecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretVersion != nil {
		in, out := &in.ConnectivityAssociationNameSecretVersion, &out.ConnectivityAssociationNameSecretVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacsecPropertiesPrimaryKeyObservation.
func (in *MacsecPropertiesPrimaryKeyObservation) DeepCopy() *MacsecPropertiesPrimaryKeyObservation {
	if in == nil {
		return nil
	}
	out := new(MacsecPropertiesPrimaryKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MacsecPropertiesPrimaryKeyParameters) DeepCopyInto(out *MacsecPropertiesPrimaryKeyParameters) {
	*out = *in
	if in.ConnectivityAssociationKeySecretID != nil {
		in, out := &in.ConnectivityAssociationKeySecretID, &out.ConnectivityAssociationKeySecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationKeySecretVersion != nil {
		in, out := &in.ConnectivityAssociationKeySecretVersion, &out.ConnectivityAssociationKeySecretVersion
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretID != nil {
		in, out := &in.ConnectivityAssociationNameSecretID, &out.ConnectivityAssociationNameSecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretVersion != nil {
		in, out := &in.ConnectivityAssociationNameSecretVersion, &out.ConnectivityAssociationNameSecretVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MacsecPropertiesPrimaryKeyParameters.
func (in *MacsecPropertiesPrimaryKeyParameters) DeepCopy() *MacsecPropertiesPrimaryKeyParameters {
	if in == nil {
		return nil
	}
	out := new(MacsecPropertiesPrimaryKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchCriteriaInitParameters) DeepCopyInto(out *MatchCriteriaInitParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.DrgAttachmentID != nil {
		in, out := &in.DrgAttachmentID, &out.DrgAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchCriteriaInitParameters.
func (in *MatchCriteriaInitParameters) DeepCopy() *MatchCriteriaInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchCriteriaInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchCriteriaObservation) DeepCopyInto(out *MatchCriteriaObservation) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.DrgAttachmentID != nil {
		in, out := &in.DrgAttachmentID, &out.DrgAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchCriteriaObservation.
func (in *MatchCriteriaObservation) DeepCopy() *MatchCriteriaObservation {
	if in == nil {
		return nil
	}
	out := new(MatchCriteriaObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchCriteriaParameters) DeepCopyInto(out *MatchCriteriaParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.DrgAttachmentID != nil {
		in, out := &in.DrgAttachmentID, &out.DrgAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.MatchType != nil {
		in, out := &in.MatchType, &out.MatchType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchCriteriaParameters.
func (in *MatchCriteriaParameters) DeepCopy() *MatchCriteriaParameters {
	if in == nil {
		return nil
	}
	out := new(MatchCriteriaParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultipathDevicesInitParameters) DeepCopyInto(out *MultipathDevicesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultipathDevicesInitParameters.
func (in *MultipathDevicesInitParameters) DeepCopy() *MultipathDevicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(MultipathDevicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultipathDevicesObservation) DeepCopyInto(out *MultipathDevicesObservation) {
	*out = *in
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = new(string)
		**out = **in
	}
	if in.Iqn != nil {
		in, out := &in.Iqn, &out.Iqn
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultipathDevicesObservation.
func (in *MultipathDevicesObservation) DeepCopy() *MultipathDevicesObservation {
	if in == nil {
		return nil
	}
	out := new(MultipathDevicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MultipathDevicesParameters) DeepCopyInto(out *MultipathDevicesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MultipathDevicesParameters.
func (in *MultipathDevicesParameters) DeepCopy() *MultipathDevicesParameters {
	if in == nil {
		return nil
	}
	out := new(MultipathDevicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGateway) DeepCopyInto(out *NATGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGateway.
func (in *NATGateway) DeepCopy() *NATGateway {
	if in == nil {
		return nil
	}
	out := new(NATGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NATGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayInitParameters) DeepCopyInto(out *NATGatewayInitParameters) {
	*out = *in
	if in.BlockTraffic != nil {
		in, out := &in.BlockTraffic, &out.BlockTraffic
		*out = new(bool)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PublicIPID != nil {
		in, out := &in.PublicIPID, &out.PublicIPID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayInitParameters.
func (in *NATGatewayInitParameters) DeepCopy() *NATGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(NATGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayList) DeepCopyInto(out *NATGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NATGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayList.
func (in *NATGatewayList) DeepCopy() *NATGatewayList {
	if in == nil {
		return nil
	}
	out := new(NATGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NATGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayObservation) DeepCopyInto(out *NATGatewayObservation) {
	*out = *in
	if in.BlockTraffic != nil {
		in, out := &in.BlockTraffic, &out.BlockTraffic
		*out = new(bool)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NATIP != nil {
		in, out := &in.NATIP, &out.NATIP
		*out = new(string)
		**out = **in
	}
	if in.PublicIPID != nil {
		in, out := &in.PublicIPID, &out.PublicIPID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayObservation.
func (in *NATGatewayObservation) DeepCopy() *NATGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(NATGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayParameters) DeepCopyInto(out *NATGatewayParameters) {
	*out = *in
	if in.BlockTraffic != nil {
		in, out := &in.BlockTraffic, &out.BlockTraffic
		*out = new(bool)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PublicIPID != nil {
		in, out := &in.PublicIPID, &out.PublicIPID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayParameters.
func (in *NATGatewayParameters) DeepCopy() *NATGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(NATGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewaySpec) DeepCopyInto(out *NATGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewaySpec.
func (in *NATGatewaySpec) DeepCopy() *NATGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(NATGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NATGatewayStatus) DeepCopyInto(out *NATGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NATGatewayStatus.
func (in *NATGatewayStatus) DeepCopy() *NATGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(NATGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkDetailsInitParameters) DeepCopyInto(out *NetworkDetailsInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VcnRouteType != nil {
		in, out := &in.VcnRouteType, &out.VcnRouteType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkDetailsInitParameters.
func (in *NetworkDetailsInitParameters) DeepCopy() *NetworkDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkDetailsObservation) DeepCopyInto(out *NetworkDetailsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ids != nil {
		in, out := &in.Ids, &out.Ids
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IpsecConnectionID != nil {
		in, out := &in.IpsecConnectionID, &out.IpsecConnectionID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.TransportAttachmentID != nil {
		in, out := &in.TransportAttachmentID, &out.TransportAttachmentID
		*out = new(string)
		**out = **in
	}
	if in.TransportOnlyMode != nil {
		in, out := &in.TransportOnlyMode, &out.TransportOnlyMode
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VcnRouteType != nil {
		in, out := &in.VcnRouteType, &out.VcnRouteType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkDetailsObservation.
func (in *NetworkDetailsObservation) DeepCopy() *NetworkDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkDetailsParameters) DeepCopyInto(out *NetworkDetailsParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VcnRouteType != nil {
		in, out := &in.VcnRouteType, &out.VcnRouteType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkDetailsParameters.
func (in *NetworkDetailsParameters) DeepCopy() *NetworkDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroup) DeepCopyInto(out *NetworkSecurityGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroup.
func (in *NetworkSecurityGroup) DeepCopy() *NetworkSecurityGroup {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkSecurityGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupInitParameters) DeepCopyInto(out *NetworkSecurityGroupInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupInitParameters.
func (in *NetworkSecurityGroupInitParameters) DeepCopy() *NetworkSecurityGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupList) DeepCopyInto(out *NetworkSecurityGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkSecurityGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupList.
func (in *NetworkSecurityGroupList) DeepCopy() *NetworkSecurityGroupList {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkSecurityGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupObservation) DeepCopyInto(out *NetworkSecurityGroupObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupObservation.
func (in *NetworkSecurityGroupObservation) DeepCopy() *NetworkSecurityGroupObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupParameters) DeepCopyInto(out *NetworkSecurityGroupParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupParameters.
func (in *NetworkSecurityGroupParameters) DeepCopy() *NetworkSecurityGroupParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRule) DeepCopyInto(out *NetworkSecurityGroupSecurityRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRule.
func (in *NetworkSecurityGroupSecurityRule) DeepCopy() *NetworkSecurityGroupSecurityRule {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkSecurityGroupSecurityRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleIcmpOptionsInitParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleIcmpOptionsInitParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleIcmpOptionsInitParameters.
func (in *NetworkSecurityGroupSecurityRuleIcmpOptionsInitParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleIcmpOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleIcmpOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleIcmpOptionsObservation) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleIcmpOptionsObservation) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleIcmpOptionsObservation.
func (in *NetworkSecurityGroupSecurityRuleIcmpOptionsObservation) DeepCopy() *NetworkSecurityGroupSecurityRuleIcmpOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleIcmpOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleIcmpOptionsParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleIcmpOptionsParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleIcmpOptionsParameters.
func (in *NetworkSecurityGroupSecurityRuleIcmpOptionsParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleIcmpOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleIcmpOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleInitParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleInitParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.IcmpOptions != nil {
		in, out := &in.IcmpOptions, &out.IcmpOptions
		*out = make([]NetworkSecurityGroupSecurityRuleIcmpOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkSecurityGroupID != nil {
		in, out := &in.NetworkSecurityGroupID, &out.NetworkSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Stateless != nil {
		in, out := &in.Stateless, &out.Stateless
		*out = new(bool)
		**out = **in
	}
	if in.TCPOptions != nil {
		in, out := &in.TCPOptions, &out.TCPOptions
		*out = make([]NetworkSecurityGroupSecurityRuleTCPOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UDPOptions != nil {
		in, out := &in.UDPOptions, &out.UDPOptions
		*out = make([]NetworkSecurityGroupSecurityRuleUDPOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleInitParameters.
func (in *NetworkSecurityGroupSecurityRuleInitParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleList) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NetworkSecurityGroupSecurityRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleList.
func (in *NetworkSecurityGroupSecurityRuleList) DeepCopy() *NetworkSecurityGroupSecurityRuleList {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NetworkSecurityGroupSecurityRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleObservation) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleObservation) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IcmpOptions != nil {
		in, out := &in.IcmpOptions, &out.IcmpOptions
		*out = make([]NetworkSecurityGroupSecurityRuleIcmpOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsValid != nil {
		in, out := &in.IsValid, &out.IsValid
		*out = new(bool)
		**out = **in
	}
	if in.NetworkSecurityGroupID != nil {
		in, out := &in.NetworkSecurityGroupID, &out.NetworkSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Stateless != nil {
		in, out := &in.Stateless, &out.Stateless
		*out = new(bool)
		**out = **in
	}
	if in.TCPOptions != nil {
		in, out := &in.TCPOptions, &out.TCPOptions
		*out = make([]NetworkSecurityGroupSecurityRuleTCPOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.UDPOptions != nil {
		in, out := &in.UDPOptions, &out.UDPOptions
		*out = make([]NetworkSecurityGroupSecurityRuleUDPOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleObservation.
func (in *NetworkSecurityGroupSecurityRuleObservation) DeepCopy() *NetworkSecurityGroupSecurityRuleObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleParameters) {
	*out = *in
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.Direction != nil {
		in, out := &in.Direction, &out.Direction
		*out = new(string)
		**out = **in
	}
	if in.IcmpOptions != nil {
		in, out := &in.IcmpOptions, &out.IcmpOptions
		*out = make([]NetworkSecurityGroupSecurityRuleIcmpOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NetworkSecurityGroupID != nil {
		in, out := &in.NetworkSecurityGroupID, &out.NetworkSecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.Stateless != nil {
		in, out := &in.Stateless, &out.Stateless
		*out = new(bool)
		**out = **in
	}
	if in.TCPOptions != nil {
		in, out := &in.TCPOptions, &out.TCPOptions
		*out = make([]NetworkSecurityGroupSecurityRuleTCPOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.UDPOptions != nil {
		in, out := &in.UDPOptions, &out.UDPOptions
		*out = make([]NetworkSecurityGroupSecurityRuleUDPOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleParameters.
func (in *NetworkSecurityGroupSecurityRuleParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleSpec) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleSpec.
func (in *NetworkSecurityGroupSecurityRuleSpec) DeepCopy() *NetworkSecurityGroupSecurityRuleSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleStatus) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleStatus.
func (in *NetworkSecurityGroupSecurityRuleStatus) DeepCopy() *NetworkSecurityGroupSecurityRuleStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeInitParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeInitParameters.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeInitParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeObservation) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeObservation.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeObservation) DeepCopy() *NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeParameters.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsInitParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleTCPOptionsInitParameters) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleTCPOptionsInitParameters.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsInitParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleTCPOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleTCPOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsObservation) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleTCPOptionsObservation) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleTCPOptionsObservation.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsObservation) DeepCopy() *NetworkSecurityGroupSecurityRuleTCPOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleTCPOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleTCPOptionsParameters) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]NetworkSecurityGroupSecurityRuleTCPOptionsDestinationPortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleTCPOptionsParameters.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleTCPOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleTCPOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeInitParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeInitParameters.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeInitParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeObservation) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeObservation.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeObservation) DeepCopy() *NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeParameters.
func (in *NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleTCPOptionsSourcePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeInitParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeInitParameters.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeInitParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeObservation) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeObservation.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeObservation) DeepCopy() *NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeParameters.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsInitParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleUDPOptionsInitParameters) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleUDPOptionsInitParameters.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsInitParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleUDPOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleUDPOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsObservation) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleUDPOptionsObservation) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleUDPOptionsObservation.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsObservation) DeepCopy() *NetworkSecurityGroupSecurityRuleUDPOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleUDPOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleUDPOptionsParameters) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]NetworkSecurityGroupSecurityRuleUDPOptionsDestinationPortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleUDPOptionsParameters.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleUDPOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleUDPOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeInitParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeInitParameters.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeInitParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeObservation) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeObservation.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeObservation) DeepCopy() *NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeParameters) DeepCopyInto(out *NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeParameters.
func (in *NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeParameters) DeepCopy() *NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSecurityRuleUDPOptionsSourcePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupSpec) DeepCopyInto(out *NetworkSecurityGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupSpec.
func (in *NetworkSecurityGroupSpec) DeepCopy() *NetworkSecurityGroupSpec {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NetworkSecurityGroupStatus) DeepCopyInto(out *NetworkSecurityGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NetworkSecurityGroupStatus.
func (in *NetworkSecurityGroupStatus) DeepCopy() *NetworkSecurityGroupStatus {
	if in == nil {
		return nil
	}
	out := new(NetworkSecurityGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsBlockVolumesInitParameters) DeepCopyInto(out *OptionsBlockVolumesInitParameters) {
	*out = *in
	if in.AttachDetails != nil {
		in, out := &in.AttachDetails, &out.AttachDetails
		*out = make([]BlockVolumesAttachDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateDetails != nil {
		in, out := &in.CreateDetails, &out.CreateDetails
		*out = make([]BlockVolumesCreateDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsBlockVolumesInitParameters.
func (in *OptionsBlockVolumesInitParameters) DeepCopy() *OptionsBlockVolumesInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsBlockVolumesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsBlockVolumesObservation) DeepCopyInto(out *OptionsBlockVolumesObservation) {
	*out = *in
	if in.AttachDetails != nil {
		in, out := &in.AttachDetails, &out.AttachDetails
		*out = make([]BlockVolumesAttachDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateDetails != nil {
		in, out := &in.CreateDetails, &out.CreateDetails
		*out = make([]BlockVolumesCreateDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsBlockVolumesObservation.
func (in *OptionsBlockVolumesObservation) DeepCopy() *OptionsBlockVolumesObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsBlockVolumesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsBlockVolumesParameters) DeepCopyInto(out *OptionsBlockVolumesParameters) {
	*out = *in
	if in.AttachDetails != nil {
		in, out := &in.AttachDetails, &out.AttachDetails
		*out = make([]BlockVolumesAttachDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CreateDetails != nil {
		in, out := &in.CreateDetails, &out.CreateDetails
		*out = make([]BlockVolumesCreateDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsBlockVolumesParameters.
func (in *OptionsBlockVolumesParameters) DeepCopy() *OptionsBlockVolumesParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsBlockVolumesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsInitParameters) DeepCopyInto(out *OptionsInitParameters) {
	*out = *in
	if in.CustomDNSServers != nil {
		in, out := &in.CustomDNSServers, &out.CustomDNSServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SearchDomainNames != nil {
		in, out := &in.SearchDomainNames, &out.SearchDomainNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServerType != nil {
		in, out := &in.ServerType, &out.ServerType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsInitParameters.
func (in *OptionsInitParameters) DeepCopy() *OptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsAgentConfigInitParameters) DeepCopyInto(out *OptionsLaunchDetailsAgentConfigInitParameters) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]LaunchDetailsAgentConfigPluginsConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsAgentConfigInitParameters.
func (in *OptionsLaunchDetailsAgentConfigInitParameters) DeepCopy() *OptionsLaunchDetailsAgentConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsAgentConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsAgentConfigObservation) DeepCopyInto(out *OptionsLaunchDetailsAgentConfigObservation) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]LaunchDetailsAgentConfigPluginsConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsAgentConfigObservation.
func (in *OptionsLaunchDetailsAgentConfigObservation) DeepCopy() *OptionsLaunchDetailsAgentConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsAgentConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsAgentConfigParameters) DeepCopyInto(out *OptionsLaunchDetailsAgentConfigParameters) {
	*out = *in
	if in.AreAllPluginsDisabled != nil {
		in, out := &in.AreAllPluginsDisabled, &out.AreAllPluginsDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsManagementDisabled != nil {
		in, out := &in.IsManagementDisabled, &out.IsManagementDisabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMonitoringDisabled != nil {
		in, out := &in.IsMonitoringDisabled, &out.IsMonitoringDisabled
		*out = new(bool)
		**out = **in
	}
	if in.PluginsConfig != nil {
		in, out := &in.PluginsConfig, &out.PluginsConfig
		*out = make([]LaunchDetailsAgentConfigPluginsConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsAgentConfigParameters.
func (in *OptionsLaunchDetailsAgentConfigParameters) DeepCopy() *OptionsLaunchDetailsAgentConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsAgentConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsAvailabilityConfigInitParameters) DeepCopyInto(out *OptionsLaunchDetailsAvailabilityConfigInitParameters) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsAvailabilityConfigInitParameters.
func (in *OptionsLaunchDetailsAvailabilityConfigInitParameters) DeepCopy() *OptionsLaunchDetailsAvailabilityConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsAvailabilityConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsAvailabilityConfigObservation) DeepCopyInto(out *OptionsLaunchDetailsAvailabilityConfigObservation) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsAvailabilityConfigObservation.
func (in *OptionsLaunchDetailsAvailabilityConfigObservation) DeepCopy() *OptionsLaunchDetailsAvailabilityConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsAvailabilityConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsAvailabilityConfigParameters) DeepCopyInto(out *OptionsLaunchDetailsAvailabilityConfigParameters) {
	*out = *in
	if in.IsLiveMigrationPreferred != nil {
		in, out := &in.IsLiveMigrationPreferred, &out.IsLiveMigrationPreferred
		*out = new(bool)
		**out = **in
	}
	if in.RecoveryAction != nil {
		in, out := &in.RecoveryAction, &out.RecoveryAction
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsAvailabilityConfigParameters.
func (in *OptionsLaunchDetailsAvailabilityConfigParameters) DeepCopy() *OptionsLaunchDetailsAvailabilityConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsAvailabilityConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsCreateVnicDetailsInitParameters) DeepCopyInto(out *OptionsLaunchDetailsCreateVnicDetailsInitParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsCreateVnicDetailsInitParameters.
func (in *OptionsLaunchDetailsCreateVnicDetailsInitParameters) DeepCopy() *OptionsLaunchDetailsCreateVnicDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsCreateVnicDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsCreateVnicDetailsObservation) DeepCopyInto(out *OptionsLaunchDetailsCreateVnicDetailsObservation) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsCreateVnicDetailsObservation.
func (in *OptionsLaunchDetailsCreateVnicDetailsObservation) DeepCopy() *OptionsLaunchDetailsCreateVnicDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsCreateVnicDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsCreateVnicDetailsParameters) DeepCopyInto(out *OptionsLaunchDetailsCreateVnicDetailsParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]OptionsLaunchDetailsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsCreateVnicDetailsParameters.
func (in *OptionsLaunchDetailsCreateVnicDetailsParameters) DeepCopy() *OptionsLaunchDetailsCreateVnicDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsCreateVnicDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsInitParameters) DeepCopyInto(out *OptionsLaunchDetailsInitParameters) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]OptionsLaunchDetailsAgentConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]OptionsLaunchDetailsAvailabilityConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]OptionsLaunchDetailsCreateVnicDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]OptionsLaunchDetailsInstanceOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]OptionsLaunchDetailsLaunchOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]OptionsLaunchDetailsPlatformConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]OptionsLaunchDetailsPreemptibleInstanceConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredMaintenanceAction != nil {
		in, out := &in.PreferredMaintenanceAction, &out.PreferredMaintenanceAction
		*out = new(string)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]OptionsLaunchDetailsShapeConfigInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]OptionsLaunchDetailsSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsInitParameters.
func (in *OptionsLaunchDetailsInitParameters) DeepCopy() *OptionsLaunchDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsInstanceOptionsInitParameters) DeepCopyInto(out *OptionsLaunchDetailsInstanceOptionsInitParameters) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsInstanceOptionsInitParameters.
func (in *OptionsLaunchDetailsInstanceOptionsInitParameters) DeepCopy() *OptionsLaunchDetailsInstanceOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsInstanceOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsInstanceOptionsObservation) DeepCopyInto(out *OptionsLaunchDetailsInstanceOptionsObservation) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsInstanceOptionsObservation.
func (in *OptionsLaunchDetailsInstanceOptionsObservation) DeepCopy() *OptionsLaunchDetailsInstanceOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsInstanceOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsInstanceOptionsParameters) DeepCopyInto(out *OptionsLaunchDetailsInstanceOptionsParameters) {
	*out = *in
	if in.AreLegacyImdsEndpointsDisabled != nil {
		in, out := &in.AreLegacyImdsEndpointsDisabled, &out.AreLegacyImdsEndpointsDisabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsInstanceOptionsParameters.
func (in *OptionsLaunchDetailsInstanceOptionsParameters) DeepCopy() *OptionsLaunchDetailsInstanceOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsInstanceOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsLaunchOptionsInitParameters) DeepCopyInto(out *OptionsLaunchDetailsLaunchOptionsInitParameters) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsLaunchOptionsInitParameters.
func (in *OptionsLaunchDetailsLaunchOptionsInitParameters) DeepCopy() *OptionsLaunchDetailsLaunchOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsLaunchOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsLaunchOptionsObservation) DeepCopyInto(out *OptionsLaunchDetailsLaunchOptionsObservation) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsLaunchOptionsObservation.
func (in *OptionsLaunchDetailsLaunchOptionsObservation) DeepCopy() *OptionsLaunchDetailsLaunchOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsLaunchOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsLaunchOptionsParameters) DeepCopyInto(out *OptionsLaunchDetailsLaunchOptionsParameters) {
	*out = *in
	if in.BootVolumeType != nil {
		in, out := &in.BootVolumeType, &out.BootVolumeType
		*out = new(string)
		**out = **in
	}
	if in.Firmware != nil {
		in, out := &in.Firmware, &out.Firmware
		*out = new(string)
		**out = **in
	}
	if in.IsConsistentVolumeNamingEnabled != nil {
		in, out := &in.IsConsistentVolumeNamingEnabled, &out.IsConsistentVolumeNamingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NetworkType != nil {
		in, out := &in.NetworkType, &out.NetworkType
		*out = new(string)
		**out = **in
	}
	if in.RemoteDataVolumeType != nil {
		in, out := &in.RemoteDataVolumeType, &out.RemoteDataVolumeType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsLaunchOptionsParameters.
func (in *OptionsLaunchDetailsLaunchOptionsParameters) DeepCopy() *OptionsLaunchDetailsLaunchOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsLaunchOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsObservation) DeepCopyInto(out *OptionsLaunchDetailsObservation) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]OptionsLaunchDetailsAgentConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]OptionsLaunchDetailsAvailabilityConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]OptionsLaunchDetailsCreateVnicDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]OptionsLaunchDetailsInstanceOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]OptionsLaunchDetailsLaunchOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]OptionsLaunchDetailsPlatformConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]OptionsLaunchDetailsPreemptibleInstanceConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredMaintenanceAction != nil {
		in, out := &in.PreferredMaintenanceAction, &out.PreferredMaintenanceAction
		*out = new(string)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]OptionsLaunchDetailsShapeConfigObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]OptionsLaunchDetailsSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsObservation.
func (in *OptionsLaunchDetailsObservation) DeepCopy() *OptionsLaunchDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsParameters) DeepCopyInto(out *OptionsLaunchDetailsParameters) {
	*out = *in
	if in.AgentConfig != nil {
		in, out := &in.AgentConfig, &out.AgentConfig
		*out = make([]OptionsLaunchDetailsAgentConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityConfig != nil {
		in, out := &in.AvailabilityConfig, &out.AvailabilityConfig
		*out = make([]OptionsLaunchDetailsAvailabilityConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CapacityReservationID != nil {
		in, out := &in.CapacityReservationID, &out.CapacityReservationID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]OptionsLaunchDetailsCreateVnicDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DedicatedVMHostID != nil {
		in, out := &in.DedicatedVMHostID, &out.DedicatedVMHostID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExtendedMetadata != nil {
		in, out := &in.ExtendedMetadata, &out.ExtendedMetadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.FaultDomain != nil {
		in, out := &in.FaultDomain, &out.FaultDomain
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.InstanceOptions != nil {
		in, out := &in.InstanceOptions, &out.InstanceOptions
		*out = make([]OptionsLaunchDetailsInstanceOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IpxeScript != nil {
		in, out := &in.IpxeScript, &out.IpxeScript
		*out = new(string)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LaunchMode != nil {
		in, out := &in.LaunchMode, &out.LaunchMode
		*out = new(string)
		**out = **in
	}
	if in.LaunchOptions != nil {
		in, out := &in.LaunchOptions, &out.LaunchOptions
		*out = make([]OptionsLaunchDetailsLaunchOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Metadata != nil {
		in, out := &in.Metadata, &out.Metadata
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PlatformConfig != nil {
		in, out := &in.PlatformConfig, &out.PlatformConfig
		*out = make([]OptionsLaunchDetailsPlatformConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreemptibleInstanceConfig != nil {
		in, out := &in.PreemptibleInstanceConfig, &out.PreemptibleInstanceConfig
		*out = make([]OptionsLaunchDetailsPreemptibleInstanceConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.PreferredMaintenanceAction != nil {
		in, out := &in.PreferredMaintenanceAction, &out.PreferredMaintenanceAction
		*out = new(string)
		**out = **in
	}
	if in.Shape != nil {
		in, out := &in.Shape, &out.Shape
		*out = new(string)
		**out = **in
	}
	if in.ShapeConfig != nil {
		in, out := &in.ShapeConfig, &out.ShapeConfig
		*out = make([]OptionsLaunchDetailsShapeConfigParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]OptionsLaunchDetailsSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsParameters.
func (in *OptionsLaunchDetailsParameters) DeepCopy() *OptionsLaunchDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsPlatformConfigInitParameters) DeepCopyInto(out *OptionsLaunchDetailsPlatformConfigInitParameters) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsPlatformConfigInitParameters.
func (in *OptionsLaunchDetailsPlatformConfigInitParameters) DeepCopy() *OptionsLaunchDetailsPlatformConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsPlatformConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsPlatformConfigObservation) DeepCopyInto(out *OptionsLaunchDetailsPlatformConfigObservation) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsPlatformConfigObservation.
func (in *OptionsLaunchDetailsPlatformConfigObservation) DeepCopy() *OptionsLaunchDetailsPlatformConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsPlatformConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsPlatformConfigParameters) DeepCopyInto(out *OptionsLaunchDetailsPlatformConfigParameters) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsPlatformConfigParameters.
func (in *OptionsLaunchDetailsPlatformConfigParameters) DeepCopy() *OptionsLaunchDetailsPlatformConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsPlatformConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsPreemptibleInstanceConfigInitParameters) DeepCopyInto(out *OptionsLaunchDetailsPreemptibleInstanceConfigInitParameters) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]LaunchDetailsPreemptibleInstanceConfigPreemptionActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsPreemptibleInstanceConfigInitParameters.
func (in *OptionsLaunchDetailsPreemptibleInstanceConfigInitParameters) DeepCopy() *OptionsLaunchDetailsPreemptibleInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsPreemptibleInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsPreemptibleInstanceConfigObservation) DeepCopyInto(out *OptionsLaunchDetailsPreemptibleInstanceConfigObservation) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]LaunchDetailsPreemptibleInstanceConfigPreemptionActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsPreemptibleInstanceConfigObservation.
func (in *OptionsLaunchDetailsPreemptibleInstanceConfigObservation) DeepCopy() *OptionsLaunchDetailsPreemptibleInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsPreemptibleInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsPreemptibleInstanceConfigParameters) DeepCopyInto(out *OptionsLaunchDetailsPreemptibleInstanceConfigParameters) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]LaunchDetailsPreemptibleInstanceConfigPreemptionActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsPreemptibleInstanceConfigParameters.
func (in *OptionsLaunchDetailsPreemptibleInstanceConfigParameters) DeepCopy() *OptionsLaunchDetailsPreemptibleInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsPreemptibleInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsShapeConfigInitParameters) DeepCopyInto(out *OptionsLaunchDetailsShapeConfigInitParameters) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsShapeConfigInitParameters.
func (in *OptionsLaunchDetailsShapeConfigInitParameters) DeepCopy() *OptionsLaunchDetailsShapeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsShapeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsShapeConfigObservation) DeepCopyInto(out *OptionsLaunchDetailsShapeConfigObservation) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsShapeConfigObservation.
func (in *OptionsLaunchDetailsShapeConfigObservation) DeepCopy() *OptionsLaunchDetailsShapeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsShapeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsShapeConfigParameters) DeepCopyInto(out *OptionsLaunchDetailsShapeConfigParameters) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsShapeConfigParameters.
func (in *OptionsLaunchDetailsShapeConfigParameters) DeepCopy() *OptionsLaunchDetailsShapeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsShapeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsSourceDetailsInitParameters) DeepCopyInto(out *OptionsLaunchDetailsSourceDetailsInitParameters) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsSourceDetailsInitParameters.
func (in *OptionsLaunchDetailsSourceDetailsInitParameters) DeepCopy() *OptionsLaunchDetailsSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsSourceDetailsObservation) DeepCopyInto(out *OptionsLaunchDetailsSourceDetailsObservation) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsSourceDetailsObservation.
func (in *OptionsLaunchDetailsSourceDetailsObservation) DeepCopy() *OptionsLaunchDetailsSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsLaunchDetailsSourceDetailsParameters) DeepCopyInto(out *OptionsLaunchDetailsSourceDetailsParameters) {
	*out = *in
	if in.BootVolumeID != nil {
		in, out := &in.BootVolumeID, &out.BootVolumeID
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeSizeInGbs != nil {
		in, out := &in.BootVolumeSizeInGbs, &out.BootVolumeSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.BootVolumeVpusPerGb != nil {
		in, out := &in.BootVolumeVpusPerGb, &out.BootVolumeVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.InstanceSourceImageFilterDetails != nil {
		in, out := &in.InstanceSourceImageFilterDetails, &out.InstanceSourceImageFilterDetails
		*out = make([]LaunchDetailsSourceDetailsInstanceSourceImageFilterDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsLaunchDetailsSourceDetailsParameters.
func (in *OptionsLaunchDetailsSourceDetailsParameters) DeepCopy() *OptionsLaunchDetailsSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsLaunchDetailsSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsObservation) DeepCopyInto(out *OptionsObservation) {
	*out = *in
	if in.CustomDNSServers != nil {
		in, out := &in.CustomDNSServers, &out.CustomDNSServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SearchDomainNames != nil {
		in, out := &in.SearchDomainNames, &out.SearchDomainNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServerType != nil {
		in, out := &in.ServerType, &out.ServerType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsObservation.
func (in *OptionsObservation) DeepCopy() *OptionsObservation {
	if in == nil {
		return nil
	}
	out := new(OptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *OptionsParameters) DeepCopyInto(out *OptionsParameters) {
	*out = *in
	if in.CustomDNSServers != nil {
		in, out := &in.CustomDNSServers, &out.CustomDNSServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.SearchDomainNames != nil {
		in, out := &in.SearchDomainNames, &out.SearchDomainNames
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServerType != nil {
		in, out := &in.ServerType, &out.ServerType
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new OptionsParameters.
func (in *OptionsParameters) DeepCopy() *OptionsParameters {
	if in == nil {
		return nil
	}
	out := new(OptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhaseOneDetailsInitParameters) DeepCopyInto(out *PhaseOneDetailsInitParameters) {
	*out = *in
	if in.CustomAuthenticationAlgorithm != nil {
		in, out := &in.CustomAuthenticationAlgorithm, &out.CustomAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.CustomDhGroup != nil {
		in, out := &in.CustomDhGroup, &out.CustomDhGroup
		*out = new(string)
		**out = **in
	}
	if in.CustomEncryptionAlgorithm != nil {
		in, out := &in.CustomEncryptionAlgorithm, &out.CustomEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.IsCustomPhaseOneConfig != nil {
		in, out := &in.IsCustomPhaseOneConfig, &out.IsCustomPhaseOneConfig
		*out = new(bool)
		**out = **in
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhaseOneDetailsInitParameters.
func (in *PhaseOneDetailsInitParameters) DeepCopy() *PhaseOneDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PhaseOneDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhaseOneDetailsObservation) DeepCopyInto(out *PhaseOneDetailsObservation) {
	*out = *in
	if in.CustomAuthenticationAlgorithm != nil {
		in, out := &in.CustomAuthenticationAlgorithm, &out.CustomAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.CustomDhGroup != nil {
		in, out := &in.CustomDhGroup, &out.CustomDhGroup
		*out = new(string)
		**out = **in
	}
	if in.CustomEncryptionAlgorithm != nil {
		in, out := &in.CustomEncryptionAlgorithm, &out.CustomEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.IsCustomPhaseOneConfig != nil {
		in, out := &in.IsCustomPhaseOneConfig, &out.IsCustomPhaseOneConfig
		*out = new(bool)
		**out = **in
	}
	if in.IsIkeEstablished != nil {
		in, out := &in.IsIkeEstablished, &out.IsIkeEstablished
		*out = new(bool)
		**out = **in
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(float64)
		**out = **in
	}
	if in.NegotiatedAuthenticationAlgorithm != nil {
		in, out := &in.NegotiatedAuthenticationAlgorithm, &out.NegotiatedAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.NegotiatedDhGroup != nil {
		in, out := &in.NegotiatedDhGroup, &out.NegotiatedDhGroup
		*out = new(string)
		**out = **in
	}
	if in.NegotiatedEncryptionAlgorithm != nil {
		in, out := &in.NegotiatedEncryptionAlgorithm, &out.NegotiatedEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RemainingLifetime != nil {
		in, out := &in.RemainingLifetime, &out.RemainingLifetime
		*out = new(string)
		**out = **in
	}
	if in.RemainingLifetimeInt != nil {
		in, out := &in.RemainingLifetimeInt, &out.RemainingLifetimeInt
		*out = new(float64)
		**out = **in
	}
	if in.RemainingLifetimeLastRetrieved != nil {
		in, out := &in.RemainingLifetimeLastRetrieved, &out.RemainingLifetimeLastRetrieved
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhaseOneDetailsObservation.
func (in *PhaseOneDetailsObservation) DeepCopy() *PhaseOneDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(PhaseOneDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhaseOneDetailsParameters) DeepCopyInto(out *PhaseOneDetailsParameters) {
	*out = *in
	if in.CustomAuthenticationAlgorithm != nil {
		in, out := &in.CustomAuthenticationAlgorithm, &out.CustomAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.CustomDhGroup != nil {
		in, out := &in.CustomDhGroup, &out.CustomDhGroup
		*out = new(string)
		**out = **in
	}
	if in.CustomEncryptionAlgorithm != nil {
		in, out := &in.CustomEncryptionAlgorithm, &out.CustomEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.IsCustomPhaseOneConfig != nil {
		in, out := &in.IsCustomPhaseOneConfig, &out.IsCustomPhaseOneConfig
		*out = new(bool)
		**out = **in
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhaseOneDetailsParameters.
func (in *PhaseOneDetailsParameters) DeepCopy() *PhaseOneDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(PhaseOneDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhaseTwoDetailsInitParameters) DeepCopyInto(out *PhaseTwoDetailsInitParameters) {
	*out = *in
	if in.CustomAuthenticationAlgorithm != nil {
		in, out := &in.CustomAuthenticationAlgorithm, &out.CustomAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.CustomEncryptionAlgorithm != nil {
		in, out := &in.CustomEncryptionAlgorithm, &out.CustomEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.DhGroup != nil {
		in, out := &in.DhGroup, &out.DhGroup
		*out = new(string)
		**out = **in
	}
	if in.IsCustomPhaseTwoConfig != nil {
		in, out := &in.IsCustomPhaseTwoConfig, &out.IsCustomPhaseTwoConfig
		*out = new(bool)
		**out = **in
	}
	if in.IsPfsEnabled != nil {
		in, out := &in.IsPfsEnabled, &out.IsPfsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhaseTwoDetailsInitParameters.
func (in *PhaseTwoDetailsInitParameters) DeepCopy() *PhaseTwoDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PhaseTwoDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhaseTwoDetailsObservation) DeepCopyInto(out *PhaseTwoDetailsObservation) {
	*out = *in
	if in.CustomAuthenticationAlgorithm != nil {
		in, out := &in.CustomAuthenticationAlgorithm, &out.CustomAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.CustomEncryptionAlgorithm != nil {
		in, out := &in.CustomEncryptionAlgorithm, &out.CustomEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.DhGroup != nil {
		in, out := &in.DhGroup, &out.DhGroup
		*out = new(string)
		**out = **in
	}
	if in.IsCustomPhaseTwoConfig != nil {
		in, out := &in.IsCustomPhaseTwoConfig, &out.IsCustomPhaseTwoConfig
		*out = new(bool)
		**out = **in
	}
	if in.IsEspEstablished != nil {
		in, out := &in.IsEspEstablished, &out.IsEspEstablished
		*out = new(bool)
		**out = **in
	}
	if in.IsPfsEnabled != nil {
		in, out := &in.IsPfsEnabled, &out.IsPfsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(float64)
		**out = **in
	}
	if in.NegotiatedAuthenticationAlgorithm != nil {
		in, out := &in.NegotiatedAuthenticationAlgorithm, &out.NegotiatedAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.NegotiatedDhGroup != nil {
		in, out := &in.NegotiatedDhGroup, &out.NegotiatedDhGroup
		*out = new(string)
		**out = **in
	}
	if in.NegotiatedEncryptionAlgorithm != nil {
		in, out := &in.NegotiatedEncryptionAlgorithm, &out.NegotiatedEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.RemainingLifetime != nil {
		in, out := &in.RemainingLifetime, &out.RemainingLifetime
		*out = new(string)
		**out = **in
	}
	if in.RemainingLifetimeInt != nil {
		in, out := &in.RemainingLifetimeInt, &out.RemainingLifetimeInt
		*out = new(float64)
		**out = **in
	}
	if in.RemainingLifetimeLastRetrieved != nil {
		in, out := &in.RemainingLifetimeLastRetrieved, &out.RemainingLifetimeLastRetrieved
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhaseTwoDetailsObservation.
func (in *PhaseTwoDetailsObservation) DeepCopy() *PhaseTwoDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(PhaseTwoDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PhaseTwoDetailsParameters) DeepCopyInto(out *PhaseTwoDetailsParameters) {
	*out = *in
	if in.CustomAuthenticationAlgorithm != nil {
		in, out := &in.CustomAuthenticationAlgorithm, &out.CustomAuthenticationAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.CustomEncryptionAlgorithm != nil {
		in, out := &in.CustomEncryptionAlgorithm, &out.CustomEncryptionAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.DhGroup != nil {
		in, out := &in.DhGroup, &out.DhGroup
		*out = new(string)
		**out = **in
	}
	if in.IsCustomPhaseTwoConfig != nil {
		in, out := &in.IsCustomPhaseTwoConfig, &out.IsCustomPhaseTwoConfig
		*out = new(bool)
		**out = **in
	}
	if in.IsPfsEnabled != nil {
		in, out := &in.IsPfsEnabled, &out.IsPfsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PhaseTwoDetailsParameters.
func (in *PhaseTwoDetailsParameters) DeepCopy() *PhaseTwoDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(PhaseTwoDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationInitParameters) DeepCopyInto(out *PlacementConfigurationInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.PlacementConstraint != nil {
		in, out := &in.PlacementConstraint, &out.PlacementConstraint
		*out = new(string)
		**out = **in
	}
	if in.PrimarySubnetID != nil {
		in, out := &in.PrimarySubnetID, &out.PrimarySubnetID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryVnicSubnets != nil {
		in, out := &in.PrimaryVnicSubnets, &out.PrimaryVnicSubnets
		*out = make([]PlacementConfigurationPrimaryVnicSubnetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnicSubnets != nil {
		in, out := &in.SecondaryVnicSubnets, &out.SecondaryVnicSubnets
		*out = make([]PlacementConfigurationSecondaryVnicSubnetsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationInitParameters.
func (in *PlacementConfigurationInitParameters) DeepCopy() *PlacementConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationObservation) DeepCopyInto(out *PlacementConfigurationObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.PlacementConstraint != nil {
		in, out := &in.PlacementConstraint, &out.PlacementConstraint
		*out = new(string)
		**out = **in
	}
	if in.PrimarySubnetID != nil {
		in, out := &in.PrimarySubnetID, &out.PrimarySubnetID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryVnicSubnets != nil {
		in, out := &in.PrimaryVnicSubnets, &out.PrimaryVnicSubnets
		*out = make([]PlacementConfigurationPrimaryVnicSubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnicSubnets != nil {
		in, out := &in.SecondaryVnicSubnets, &out.SecondaryVnicSubnets
		*out = make([]PlacementConfigurationSecondaryVnicSubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationObservation.
func (in *PlacementConfigurationObservation) DeepCopy() *PlacementConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationParameters) DeepCopyInto(out *PlacementConfigurationParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.PlacementConstraint != nil {
		in, out := &in.PlacementConstraint, &out.PlacementConstraint
		*out = new(string)
		**out = **in
	}
	if in.PrimarySubnetID != nil {
		in, out := &in.PrimarySubnetID, &out.PrimarySubnetID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryVnicSubnets != nil {
		in, out := &in.PrimaryVnicSubnets, &out.PrimaryVnicSubnets
		*out = make([]PlacementConfigurationPrimaryVnicSubnetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnicSubnets != nil {
		in, out := &in.SecondaryVnicSubnets, &out.SecondaryVnicSubnets
		*out = make([]PlacementConfigurationSecondaryVnicSubnetsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationParameters.
func (in *PlacementConfigurationParameters) DeepCopy() *PlacementConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationPrimaryVnicSubnetsInitParameters) DeepCopyInto(out *PlacementConfigurationPrimaryVnicSubnetsInitParameters) {
	*out = *in
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationPrimaryVnicSubnetsInitParameters.
func (in *PlacementConfigurationPrimaryVnicSubnetsInitParameters) DeepCopy() *PlacementConfigurationPrimaryVnicSubnetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationPrimaryVnicSubnetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationPrimaryVnicSubnetsObservation) DeepCopyInto(out *PlacementConfigurationPrimaryVnicSubnetsObservation) {
	*out = *in
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationPrimaryVnicSubnetsObservation.
func (in *PlacementConfigurationPrimaryVnicSubnetsObservation) DeepCopy() *PlacementConfigurationPrimaryVnicSubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationPrimaryVnicSubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationPrimaryVnicSubnetsParameters) DeepCopyInto(out *PlacementConfigurationPrimaryVnicSubnetsParameters) {
	*out = *in
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationPrimaryVnicSubnetsParameters.
func (in *PlacementConfigurationPrimaryVnicSubnetsParameters) DeepCopy() *PlacementConfigurationPrimaryVnicSubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationPrimaryVnicSubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationSecondaryVnicSubnetsInitParameters) DeepCopyInto(out *PlacementConfigurationSecondaryVnicSubnetsInitParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationSecondaryVnicSubnetsInitParameters.
func (in *PlacementConfigurationSecondaryVnicSubnetsInitParameters) DeepCopy() *PlacementConfigurationSecondaryVnicSubnetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationSecondaryVnicSubnetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationSecondaryVnicSubnetsObservation) DeepCopyInto(out *PlacementConfigurationSecondaryVnicSubnetsObservation) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationSecondaryVnicSubnetsObservation.
func (in *PlacementConfigurationSecondaryVnicSubnetsObservation) DeepCopy() *PlacementConfigurationSecondaryVnicSubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationSecondaryVnicSubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationSecondaryVnicSubnetsParameters) DeepCopyInto(out *PlacementConfigurationSecondaryVnicSubnetsParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationSecondaryVnicSubnetsParameters.
func (in *PlacementConfigurationSecondaryVnicSubnetsParameters) DeepCopy() *PlacementConfigurationSecondaryVnicSubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationSecondaryVnicSubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsInitParameters) DeepCopyInto(out *PlacementConfigurationsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsInitParameters.
func (in *PlacementConfigurationsInitParameters) DeepCopy() *PlacementConfigurationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsObservation) DeepCopyInto(out *PlacementConfigurationsObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.FaultDomains != nil {
		in, out := &in.FaultDomains, &out.FaultDomains
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrimarySubnetID != nil {
		in, out := &in.PrimarySubnetID, &out.PrimarySubnetID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryVnicSubnets != nil {
		in, out := &in.PrimaryVnicSubnets, &out.PrimaryVnicSubnets
		*out = make([]PrimaryVnicSubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecondaryVnicSubnets != nil {
		in, out := &in.SecondaryVnicSubnets, &out.SecondaryVnicSubnets
		*out = make([]SecondaryVnicSubnetsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsObservation.
func (in *PlacementConfigurationsObservation) DeepCopy() *PlacementConfigurationsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsParameters) DeepCopyInto(out *PlacementConfigurationsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsParameters.
func (in *PlacementConfigurationsParameters) DeepCopy() *PlacementConfigurationsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsPrimaryVnicSubnetsInitParameters) DeepCopyInto(out *PlacementConfigurationsPrimaryVnicSubnetsInitParameters) {
	*out = *in
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsPrimaryVnicSubnetsInitParameters.
func (in *PlacementConfigurationsPrimaryVnicSubnetsInitParameters) DeepCopy() *PlacementConfigurationsPrimaryVnicSubnetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsPrimaryVnicSubnetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsPrimaryVnicSubnetsObservation) DeepCopyInto(out *PlacementConfigurationsPrimaryVnicSubnetsObservation) {
	*out = *in
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsPrimaryVnicSubnetsObservation.
func (in *PlacementConfigurationsPrimaryVnicSubnetsObservation) DeepCopy() *PlacementConfigurationsPrimaryVnicSubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsPrimaryVnicSubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsPrimaryVnicSubnetsParameters) DeepCopyInto(out *PlacementConfigurationsPrimaryVnicSubnetsParameters) {
	*out = *in
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationsPrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsPrimaryVnicSubnetsParameters.
func (in *PlacementConfigurationsPrimaryVnicSubnetsParameters) DeepCopy() *PlacementConfigurationsPrimaryVnicSubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsPrimaryVnicSubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsSecondaryVnicSubnetsInitParameters) DeepCopyInto(out *PlacementConfigurationsSecondaryVnicSubnetsInitParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsSecondaryVnicSubnetsInitParameters.
func (in *PlacementConfigurationsSecondaryVnicSubnetsInitParameters) DeepCopy() *PlacementConfigurationsSecondaryVnicSubnetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsSecondaryVnicSubnetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsSecondaryVnicSubnetsObservation) DeepCopyInto(out *PlacementConfigurationsSecondaryVnicSubnetsObservation) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsSecondaryVnicSubnetsObservation.
func (in *PlacementConfigurationsSecondaryVnicSubnetsObservation) DeepCopy() *PlacementConfigurationsSecondaryVnicSubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsSecondaryVnicSubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlacementConfigurationsSecondaryVnicSubnetsParameters) DeepCopyInto(out *PlacementConfigurationsSecondaryVnicSubnetsParameters) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]PlacementConfigurationsSecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlacementConfigurationsSecondaryVnicSubnetsParameters.
func (in *PlacementConfigurationsSecondaryVnicSubnetsParameters) DeepCopy() *PlacementConfigurationsSecondaryVnicSubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(PlacementConfigurationsSecondaryVnicSubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformConfigInitParameters) DeepCopyInto(out *PlatformConfigInitParameters) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformConfigInitParameters.
func (in *PlatformConfigInitParameters) DeepCopy() *PlatformConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PlatformConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformConfigObservation) DeepCopyInto(out *PlatformConfigObservation) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformConfigObservation.
func (in *PlatformConfigObservation) DeepCopy() *PlatformConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PlatformConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PlatformConfigParameters) DeepCopyInto(out *PlatformConfigParameters) {
	*out = *in
	if in.AreVirtualInstructionsEnabled != nil {
		in, out := &in.AreVirtualInstructionsEnabled, &out.AreVirtualInstructionsEnabled
		*out = new(bool)
		**out = **in
	}
	if in.ConfigMap != nil {
		in, out := &in.ConfigMap, &out.ConfigMap
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAccessControlServiceEnabled != nil {
		in, out := &in.IsAccessControlServiceEnabled, &out.IsAccessControlServiceEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsInputOutputMemoryManagementUnitEnabled != nil {
		in, out := &in.IsInputOutputMemoryManagementUnitEnabled, &out.IsInputOutputMemoryManagementUnitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMeasuredBootEnabled != nil {
		in, out := &in.IsMeasuredBootEnabled, &out.IsMeasuredBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMemoryEncryptionEnabled != nil {
		in, out := &in.IsMemoryEncryptionEnabled, &out.IsMemoryEncryptionEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSecureBootEnabled != nil {
		in, out := &in.IsSecureBootEnabled, &out.IsSecureBootEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsSymmetricMultiThreadingEnabled != nil {
		in, out := &in.IsSymmetricMultiThreadingEnabled, &out.IsSymmetricMultiThreadingEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTrustedPlatformModuleEnabled != nil {
		in, out := &in.IsTrustedPlatformModuleEnabled, &out.IsTrustedPlatformModuleEnabled
		*out = new(bool)
		**out = **in
	}
	if in.NumaNodesPerSocket != nil {
		in, out := &in.NumaNodesPerSocket, &out.NumaNodesPerSocket
		*out = new(string)
		**out = **in
	}
	if in.PercentageOfCoresEnabled != nil {
		in, out := &in.PercentageOfCoresEnabled, &out.PercentageOfCoresEnabled
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PlatformConfigParameters.
func (in *PlatformConfigParameters) DeepCopy() *PlatformConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PlatformConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginsConfigInitParameters) DeepCopyInto(out *PluginsConfigInitParameters) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginsConfigInitParameters.
func (in *PluginsConfigInitParameters) DeepCopy() *PluginsConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PluginsConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginsConfigObservation) DeepCopyInto(out *PluginsConfigObservation) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginsConfigObservation.
func (in *PluginsConfigObservation) DeepCopy() *PluginsConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PluginsConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PluginsConfigParameters) DeepCopyInto(out *PluginsConfigParameters) {
	*out = *in
	if in.DesiredState != nil {
		in, out := &in.DesiredState, &out.DesiredState
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PluginsConfigParameters.
func (in *PluginsConfigParameters) DeepCopy() *PluginsConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PluginsConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleInstanceConfigInitParameters) DeepCopyInto(out *PreemptibleInstanceConfigInitParameters) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]PreemptionActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleInstanceConfigInitParameters.
func (in *PreemptibleInstanceConfigInitParameters) DeepCopy() *PreemptibleInstanceConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptibleInstanceConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleInstanceConfigObservation) DeepCopyInto(out *PreemptibleInstanceConfigObservation) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]PreemptionActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleInstanceConfigObservation.
func (in *PreemptibleInstanceConfigObservation) DeepCopy() *PreemptibleInstanceConfigObservation {
	if in == nil {
		return nil
	}
	out := new(PreemptibleInstanceConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleInstanceConfigParameters) DeepCopyInto(out *PreemptibleInstanceConfigParameters) {
	*out = *in
	if in.PreemptionAction != nil {
		in, out := &in.PreemptionAction, &out.PreemptionAction
		*out = make([]PreemptionActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleInstanceConfigParameters.
func (in *PreemptibleInstanceConfigParameters) DeepCopy() *PreemptibleInstanceConfigParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptibleInstanceConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleInstanceConfigPreemptionActionInitParameters) DeepCopyInto(out *PreemptibleInstanceConfigPreemptionActionInitParameters) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleInstanceConfigPreemptionActionInitParameters.
func (in *PreemptibleInstanceConfigPreemptionActionInitParameters) DeepCopy() *PreemptibleInstanceConfigPreemptionActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptibleInstanceConfigPreemptionActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleInstanceConfigPreemptionActionObservation) DeepCopyInto(out *PreemptibleInstanceConfigPreemptionActionObservation) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleInstanceConfigPreemptionActionObservation.
func (in *PreemptibleInstanceConfigPreemptionActionObservation) DeepCopy() *PreemptibleInstanceConfigPreemptionActionObservation {
	if in == nil {
		return nil
	}
	out := new(PreemptibleInstanceConfigPreemptionActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptibleInstanceConfigPreemptionActionParameters) DeepCopyInto(out *PreemptibleInstanceConfigPreemptionActionParameters) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptibleInstanceConfigPreemptionActionParameters.
func (in *PreemptibleInstanceConfigPreemptionActionParameters) DeepCopy() *PreemptibleInstanceConfigPreemptionActionParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptibleInstanceConfigPreemptionActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptionActionInitParameters) DeepCopyInto(out *PreemptionActionInitParameters) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptionActionInitParameters.
func (in *PreemptionActionInitParameters) DeepCopy() *PreemptionActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptionActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptionActionObservation) DeepCopyInto(out *PreemptionActionObservation) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptionActionObservation.
func (in *PreemptionActionObservation) DeepCopy() *PreemptionActionObservation {
	if in == nil {
		return nil
	}
	out := new(PreemptionActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PreemptionActionParameters) DeepCopyInto(out *PreemptionActionParameters) {
	*out = *in
	if in.PreserveBootVolume != nil {
		in, out := &in.PreserveBootVolume, &out.PreserveBootVolume
		*out = new(bool)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PreemptionActionParameters.
func (in *PreemptionActionParameters) DeepCopy() *PreemptionActionParameters {
	if in == nil {
		return nil
	}
	out := new(PreemptionActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryKeyInitParameters) DeepCopyInto(out *PrimaryKeyInitParameters) {
	*out = *in
	if in.ConnectivityAssociationKeySecretID != nil {
		in, out := &in.ConnectivityAssociationKeySecretID, &out.ConnectivityAssociationKeySecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretID != nil {
		in, out := &in.ConnectivityAssociationNameSecretID, &out.ConnectivityAssociationNameSecretID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryKeyInitParameters.
func (in *PrimaryKeyInitParameters) DeepCopy() *PrimaryKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryKeyObservation) DeepCopyInto(out *PrimaryKeyObservation) {
	*out = *in
	if in.ConnectivityAssociationKeySecretID != nil {
		in, out := &in.ConnectivityAssociationKeySecretID, &out.ConnectivityAssociationKeySecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationKeySecretVersion != nil {
		in, out := &in.ConnectivityAssociationKeySecretVersion, &out.ConnectivityAssociationKeySecretVersion
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretID != nil {
		in, out := &in.ConnectivityAssociationNameSecretID, &out.ConnectivityAssociationNameSecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretVersion != nil {
		in, out := &in.ConnectivityAssociationNameSecretVersion, &out.ConnectivityAssociationNameSecretVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryKeyObservation.
func (in *PrimaryKeyObservation) DeepCopy() *PrimaryKeyObservation {
	if in == nil {
		return nil
	}
	out := new(PrimaryKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryKeyParameters) DeepCopyInto(out *PrimaryKeyParameters) {
	*out = *in
	if in.ConnectivityAssociationKeySecretID != nil {
		in, out := &in.ConnectivityAssociationKeySecretID, &out.ConnectivityAssociationKeySecretID
		*out = new(string)
		**out = **in
	}
	if in.ConnectivityAssociationNameSecretID != nil {
		in, out := &in.ConnectivityAssociationNameSecretID, &out.ConnectivityAssociationNameSecretID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryKeyParameters.
func (in *PrimaryKeyParameters) DeepCopy() *PrimaryKeyParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryVnicSubnetsInitParameters) DeepCopyInto(out *PrimaryVnicSubnetsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryVnicSubnetsInitParameters.
func (in *PrimaryVnicSubnetsInitParameters) DeepCopy() *PrimaryVnicSubnetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryVnicSubnetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryVnicSubnetsObservation) DeepCopyInto(out *PrimaryVnicSubnetsObservation) {
	*out = *in
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]Ipv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryVnicSubnetsObservation.
func (in *PrimaryVnicSubnetsObservation) DeepCopy() *PrimaryVnicSubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(PrimaryVnicSubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrimaryVnicSubnetsParameters) DeepCopyInto(out *PrimaryVnicSubnetsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrimaryVnicSubnetsParameters.
func (in *PrimaryVnicSubnetsParameters) DeepCopy() *PrimaryVnicSubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(PrimaryVnicSubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateIP) DeepCopyInto(out *PrivateIP) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateIP.
func (in *PrivateIP) DeepCopy() *PrivateIP {
	if in == nil {
		return nil
	}
	out := new(PrivateIP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateIP) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateIPInitParameters) DeepCopyInto(out *PrivateIPInitParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VnicID != nil {
		in, out := &in.VnicID, &out.VnicID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateIPInitParameters.
func (in *PrivateIPInitParameters) DeepCopy() *PrivateIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateIPList) DeepCopyInto(out *PrivateIPList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivateIP, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateIPList.
func (in *PrivateIPList) DeepCopy() *PrivateIPList {
	if in == nil {
		return nil
	}
	out := new(PrivateIPList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivateIPList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateIPObservation) DeepCopyInto(out *PrivateIPObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IsPrimary != nil {
		in, out := &in.IsPrimary, &out.IsPrimary
		*out = new(bool)
		**out = **in
	}
	if in.IsReserved != nil {
		in, out := &in.IsReserved, &out.IsReserved
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VnicID != nil {
		in, out := &in.VnicID, &out.VnicID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateIPObservation.
func (in *PrivateIPObservation) DeepCopy() *PrivateIPObservation {
	if in == nil {
		return nil
	}
	out := new(PrivateIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateIPParameters) DeepCopyInto(out *PrivateIPParameters) {
	*out = *in
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VnicID != nil {
		in, out := &in.VnicID, &out.VnicID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateIPParameters.
func (in *PrivateIPParameters) DeepCopy() *PrivateIPParameters {
	if in == nil {
		return nil
	}
	out := new(PrivateIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateIPSpec) DeepCopyInto(out *PrivateIPSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateIPSpec.
func (in *PrivateIPSpec) DeepCopy() *PrivateIPSpec {
	if in == nil {
		return nil
	}
	out := new(PrivateIPSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivateIPStatus) DeepCopyInto(out *PrivateIPStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivateIPStatus.
func (in *PrivateIPStatus) DeepCopy() *PrivateIPStatus {
	if in == nil {
		return nil
	}
	out := new(PrivateIPStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIP) DeepCopyInto(out *PublicIP) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIP.
func (in *PublicIP) DeepCopy() *PublicIP {
	if in == nil {
		return nil
	}
	out := new(PublicIP)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicIP) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPInitParameters) DeepCopyInto(out *PublicIPInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPID != nil {
		in, out := &in.PrivateIPID, &out.PrivateIPID
		*out = new(string)
		**out = **in
	}
	if in.PublicIPPoolID != nil {
		in, out := &in.PublicIPPoolID, &out.PublicIPPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPInitParameters.
func (in *PublicIPInitParameters) DeepCopy() *PublicIPInitParameters {
	if in == nil {
		return nil
	}
	out := new(PublicIPInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPList) DeepCopyInto(out *PublicIPList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PublicIP, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPList.
func (in *PublicIPList) DeepCopy() *PublicIPList {
	if in == nil {
		return nil
	}
	out := new(PublicIPList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicIPList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPObservation) DeepCopyInto(out *PublicIPObservation) {
	*out = *in
	if in.AssignedEntityID != nil {
		in, out := &in.AssignedEntityID, &out.AssignedEntityID
		*out = new(string)
		**out = **in
	}
	if in.AssignedEntityType != nil {
		in, out := &in.AssignedEntityType, &out.AssignedEntityType
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPID != nil {
		in, out := &in.PrivateIPID, &out.PrivateIPID
		*out = new(string)
		**out = **in
	}
	if in.PublicIPPoolID != nil {
		in, out := &in.PublicIPPoolID, &out.PublicIPPoolID
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPObservation.
func (in *PublicIPObservation) DeepCopy() *PublicIPObservation {
	if in == nil {
		return nil
	}
	out := new(PublicIPObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPParameters) DeepCopyInto(out *PublicIPParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Lifetime != nil {
		in, out := &in.Lifetime, &out.Lifetime
		*out = new(string)
		**out = **in
	}
	if in.PrivateIPID != nil {
		in, out := &in.PrivateIPID, &out.PrivateIPID
		*out = new(string)
		**out = **in
	}
	if in.PublicIPPoolID != nil {
		in, out := &in.PublicIPPoolID, &out.PublicIPPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPParameters.
func (in *PublicIPParameters) DeepCopy() *PublicIPParameters {
	if in == nil {
		return nil
	}
	out := new(PublicIPParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPool) DeepCopyInto(out *PublicIPPool) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPool.
func (in *PublicIPPool) DeepCopy() *PublicIPPool {
	if in == nil {
		return nil
	}
	out := new(PublicIPPool)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicIPPool) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPoolCapacity) DeepCopyInto(out *PublicIPPoolCapacity) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPoolCapacity.
func (in *PublicIPPoolCapacity) DeepCopy() *PublicIPPoolCapacity {
	if in == nil {
		return nil
	}
	out := new(PublicIPPoolCapacity)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicIPPoolCapacity) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPoolCapacityInitParameters) DeepCopyInto(out *PublicIPPoolCapacityInitParameters) {
	*out = *in
	if in.ByoipID != nil {
		in, out := &in.ByoipID, &out.ByoipID
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.PublicIPPoolID != nil {
		in, out := &in.PublicIPPoolID, &out.PublicIPPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPoolCapacityInitParameters.
func (in *PublicIPPoolCapacityInitParameters) DeepCopy() *PublicIPPoolCapacityInitParameters {
	if in == nil {
		return nil
	}
	out := new(PublicIPPoolCapacityInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPoolCapacityList) DeepCopyInto(out *PublicIPPoolCapacityList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PublicIPPoolCapacity, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPoolCapacityList.
func (in *PublicIPPoolCapacityList) DeepCopy() *PublicIPPoolCapacityList {
	if in == nil {
		return nil
	}
	out := new(PublicIPPoolCapacityList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicIPPoolCapacityList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPoolCapacityObservation) DeepCopyInto(out *PublicIPPoolCapacityObservation) {
	*out = *in
	if in.ByoipID != nil {
		in, out := &in.ByoipID, &out.ByoipID
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PublicIPPoolID != nil {
		in, out := &in.PublicIPPoolID, &out.PublicIPPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPoolCapacityObservation.
func (in *PublicIPPoolCapacityObservation) DeepCopy() *PublicIPPoolCapacityObservation {
	if in == nil {
		return nil
	}
	out := new(PublicIPPoolCapacityObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPoolCapacityParameters) DeepCopyInto(out *PublicIPPoolCapacityParameters) {
	*out = *in
	if in.ByoipID != nil {
		in, out := &in.ByoipID, &out.ByoipID
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.PublicIPPoolID != nil {
		in, out := &in.PublicIPPoolID, &out.PublicIPPoolID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPoolCapacityParameters.
func (in *PublicIPPoolCapacityParameters) DeepCopy() *PublicIPPoolCapacityParameters {
	if in == nil {
		return nil
	}
	out := new(PublicIPPoolCapacityParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPoolCapacitySpec) DeepCopyInto(out *PublicIPPoolCapacitySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPoolCapacitySpec.
func (in *PublicIPPoolCapacitySpec) DeepCopy() *PublicIPPoolCapacitySpec {
	if in == nil {
		return nil
	}
	out := new(PublicIPPoolCapacitySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPoolCapacityStatus) DeepCopyInto(out *PublicIPPoolCapacityStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPoolCapacityStatus.
func (in *PublicIPPoolCapacityStatus) DeepCopy() *PublicIPPoolCapacityStatus {
	if in == nil {
		return nil
	}
	out := new(PublicIPPoolCapacityStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPoolInitParameters) DeepCopyInto(out *PublicIPPoolInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPoolInitParameters.
func (in *PublicIPPoolInitParameters) DeepCopy() *PublicIPPoolInitParameters {
	if in == nil {
		return nil
	}
	out := new(PublicIPPoolInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPoolList) DeepCopyInto(out *PublicIPPoolList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PublicIPPool, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPoolList.
func (in *PublicIPPoolList) DeepCopy() *PublicIPPoolList {
	if in == nil {
		return nil
	}
	out := new(PublicIPPoolList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PublicIPPoolList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPoolObservation) DeepCopyInto(out *PublicIPPoolObservation) {
	*out = *in
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPoolObservation.
func (in *PublicIPPoolObservation) DeepCopy() *PublicIPPoolObservation {
	if in == nil {
		return nil
	}
	out := new(PublicIPPoolObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPoolParameters) DeepCopyInto(out *PublicIPPoolParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPoolParameters.
func (in *PublicIPPoolParameters) DeepCopy() *PublicIPPoolParameters {
	if in == nil {
		return nil
	}
	out := new(PublicIPPoolParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPoolSpec) DeepCopyInto(out *PublicIPPoolSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPoolSpec.
func (in *PublicIPPoolSpec) DeepCopy() *PublicIPPoolSpec {
	if in == nil {
		return nil
	}
	out := new(PublicIPPoolSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPPoolStatus) DeepCopyInto(out *PublicIPPoolStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPPoolStatus.
func (in *PublicIPPoolStatus) DeepCopy() *PublicIPPoolStatus {
	if in == nil {
		return nil
	}
	out := new(PublicIPPoolStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPSpec) DeepCopyInto(out *PublicIPSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPSpec.
func (in *PublicIPSpec) DeepCopy() *PublicIPSpec {
	if in == nil {
		return nil
	}
	out := new(PublicIPSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicIPStatus) DeepCopyInto(out *PublicIPStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicIPStatus.
func (in *PublicIPStatus) DeepCopy() *PublicIPStatus {
	if in == nil {
		return nil
	}
	out := new(PublicIPStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicPrefixesInitParameters) DeepCopyInto(out *PublicPrefixesInitParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicPrefixesInitParameters.
func (in *PublicPrefixesInitParameters) DeepCopy() *PublicPrefixesInitParameters {
	if in == nil {
		return nil
	}
	out := new(PublicPrefixesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicPrefixesObservation) DeepCopyInto(out *PublicPrefixesObservation) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicPrefixesObservation.
func (in *PublicPrefixesObservation) DeepCopy() *PublicPrefixesObservation {
	if in == nil {
		return nil
	}
	out := new(PublicPrefixesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicPrefixesParameters) DeepCopyInto(out *PublicPrefixesParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicPrefixesParameters.
func (in *PublicPrefixesParameters) DeepCopy() *PublicPrefixesParameters {
	if in == nil {
		return nil
	}
	out := new(PublicPrefixesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemotePeeringConnection) DeepCopyInto(out *RemotePeeringConnection) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemotePeeringConnection.
func (in *RemotePeeringConnection) DeepCopy() *RemotePeeringConnection {
	if in == nil {
		return nil
	}
	out := new(RemotePeeringConnection)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RemotePeeringConnection) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemotePeeringConnectionInitParameters) DeepCopyInto(out *RemotePeeringConnectionInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PeerID != nil {
		in, out := &in.PeerID, &out.PeerID
		*out = new(string)
		**out = **in
	}
	if in.PeerRegionName != nil {
		in, out := &in.PeerRegionName, &out.PeerRegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemotePeeringConnectionInitParameters.
func (in *RemotePeeringConnectionInitParameters) DeepCopy() *RemotePeeringConnectionInitParameters {
	if in == nil {
		return nil
	}
	out := new(RemotePeeringConnectionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemotePeeringConnectionList) DeepCopyInto(out *RemotePeeringConnectionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RemotePeeringConnection, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemotePeeringConnectionList.
func (in *RemotePeeringConnectionList) DeepCopy() *RemotePeeringConnectionList {
	if in == nil {
		return nil
	}
	out := new(RemotePeeringConnectionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RemotePeeringConnectionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemotePeeringConnectionObservation) DeepCopyInto(out *RemotePeeringConnectionObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsCrossTenancyPeering != nil {
		in, out := &in.IsCrossTenancyPeering, &out.IsCrossTenancyPeering
		*out = new(bool)
		**out = **in
	}
	if in.PeerID != nil {
		in, out := &in.PeerID, &out.PeerID
		*out = new(string)
		**out = **in
	}
	if in.PeerRegionName != nil {
		in, out := &in.PeerRegionName, &out.PeerRegionName
		*out = new(string)
		**out = **in
	}
	if in.PeerTenancyID != nil {
		in, out := &in.PeerTenancyID, &out.PeerTenancyID
		*out = new(string)
		**out = **in
	}
	if in.PeeringStatus != nil {
		in, out := &in.PeeringStatus, &out.PeeringStatus
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemotePeeringConnectionObservation.
func (in *RemotePeeringConnectionObservation) DeepCopy() *RemotePeeringConnectionObservation {
	if in == nil {
		return nil
	}
	out := new(RemotePeeringConnectionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemotePeeringConnectionParameters) DeepCopyInto(out *RemotePeeringConnectionParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.DrgID != nil {
		in, out := &in.DrgID, &out.DrgID
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PeerID != nil {
		in, out := &in.PeerID, &out.PeerID
		*out = new(string)
		**out = **in
	}
	if in.PeerRegionName != nil {
		in, out := &in.PeerRegionName, &out.PeerRegionName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemotePeeringConnectionParameters.
func (in *RemotePeeringConnectionParameters) DeepCopy() *RemotePeeringConnectionParameters {
	if in == nil {
		return nil
	}
	out := new(RemotePeeringConnectionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemotePeeringConnectionSpec) DeepCopyInto(out *RemotePeeringConnectionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemotePeeringConnectionSpec.
func (in *RemotePeeringConnectionSpec) DeepCopy() *RemotePeeringConnectionSpec {
	if in == nil {
		return nil
	}
	out := new(RemotePeeringConnectionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RemotePeeringConnectionStatus) DeepCopyInto(out *RemotePeeringConnectionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RemotePeeringConnectionStatus.
func (in *RemotePeeringConnectionStatus) DeepCopy() *RemotePeeringConnectionStatus {
	if in == nil {
		return nil
	}
	out := new(RemotePeeringConnectionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesInitParameters) DeepCopyInto(out *RouteRulesInitParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.NetworkEntityID != nil {
		in, out := &in.NetworkEntityID, &out.NetworkEntityID
		*out = new(string)
		**out = **in
	}
	if in.RouteType != nil {
		in, out := &in.RouteType, &out.RouteType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesInitParameters.
func (in *RouteRulesInitParameters) DeepCopy() *RouteRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesObservation) DeepCopyInto(out *RouteRulesObservation) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.NetworkEntityID != nil {
		in, out := &in.NetworkEntityID, &out.NetworkEntityID
		*out = new(string)
		**out = **in
	}
	if in.RouteType != nil {
		in, out := &in.RouteType, &out.RouteType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesObservation.
func (in *RouteRulesObservation) DeepCopy() *RouteRulesObservation {
	if in == nil {
		return nil
	}
	out := new(RouteRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteRulesParameters) DeepCopyInto(out *RouteRulesParameters) {
	*out = *in
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.NetworkEntityID != nil {
		in, out := &in.NetworkEntityID, &out.NetworkEntityID
		*out = new(string)
		**out = **in
	}
	if in.RouteType != nil {
		in, out := &in.RouteType, &out.RouteType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteRulesParameters.
func (in *RouteRulesParameters) DeepCopy() *RouteRulesParameters {
	if in == nil {
		return nil
	}
	out := new(RouteRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTable) DeepCopyInto(out *RouteTable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTable.
func (in *RouteTable) DeepCopy() *RouteTable {
	if in == nil {
		return nil
	}
	out := new(RouteTable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteTable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableAttachment) DeepCopyInto(out *RouteTableAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableAttachment.
func (in *RouteTableAttachment) DeepCopy() *RouteTableAttachment {
	if in == nil {
		return nil
	}
	out := new(RouteTableAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteTableAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableAttachmentInitParameters) DeepCopyInto(out *RouteTableAttachmentInitParameters) {
	*out = *in
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableAttachmentInitParameters.
func (in *RouteTableAttachmentInitParameters) DeepCopy() *RouteTableAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteTableAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableAttachmentList) DeepCopyInto(out *RouteTableAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RouteTableAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableAttachmentList.
func (in *RouteTableAttachmentList) DeepCopy() *RouteTableAttachmentList {
	if in == nil {
		return nil
	}
	out := new(RouteTableAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteTableAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableAttachmentObservation) DeepCopyInto(out *RouteTableAttachmentObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableAttachmentObservation.
func (in *RouteTableAttachmentObservation) DeepCopy() *RouteTableAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(RouteTableAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableAttachmentParameters) DeepCopyInto(out *RouteTableAttachmentParameters) {
	*out = *in
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableAttachmentParameters.
func (in *RouteTableAttachmentParameters) DeepCopy() *RouteTableAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(RouteTableAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableAttachmentSpec) DeepCopyInto(out *RouteTableAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableAttachmentSpec.
func (in *RouteTableAttachmentSpec) DeepCopy() *RouteTableAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(RouteTableAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableAttachmentStatus) DeepCopyInto(out *RouteTableAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableAttachmentStatus.
func (in *RouteTableAttachmentStatus) DeepCopy() *RouteTableAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(RouteTableAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableInitParameters) DeepCopyInto(out *RouteTableInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RouteRules != nil {
		in, out := &in.RouteRules, &out.RouteRules
		*out = make([]RouteRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableInitParameters.
func (in *RouteTableInitParameters) DeepCopy() *RouteTableInitParameters {
	if in == nil {
		return nil
	}
	out := new(RouteTableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableList) DeepCopyInto(out *RouteTableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RouteTable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableList.
func (in *RouteTableList) DeepCopy() *RouteTableList {
	if in == nil {
		return nil
	}
	out := new(RouteTableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteTableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableObservation) DeepCopyInto(out *RouteTableObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RouteRules != nil {
		in, out := &in.RouteRules, &out.RouteRules
		*out = make([]RouteRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableObservation.
func (in *RouteTableObservation) DeepCopy() *RouteTableObservation {
	if in == nil {
		return nil
	}
	out := new(RouteTableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableParameters) DeepCopyInto(out *RouteTableParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RouteRules != nil {
		in, out := &in.RouteRules, &out.RouteRules
		*out = make([]RouteRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableParameters.
func (in *RouteTableParameters) DeepCopy() *RouteTableParameters {
	if in == nil {
		return nil
	}
	out := new(RouteTableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableSpec) DeepCopyInto(out *RouteTableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableSpec.
func (in *RouteTableSpec) DeepCopy() *RouteTableSpec {
	if in == nil {
		return nil
	}
	out := new(RouteTableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteTableStatus) DeepCopyInto(out *RouteTableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteTableStatus.
func (in *RouteTableStatus) DeepCopy() *RouteTableStatus {
	if in == nil {
		return nil
	}
	out := new(RouteTableStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulesInitParameters) DeepCopyInto(out *SchedulesInitParameters) {
	*out = *in
	if in.BackupType != nil {
		in, out := &in.BackupType, &out.BackupType
		*out = new(string)
		**out = **in
	}
	if in.DayOfMonth != nil {
		in, out := &in.DayOfMonth, &out.DayOfMonth
		*out = new(float64)
		**out = **in
	}
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.HourOfDay != nil {
		in, out := &in.HourOfDay, &out.HourOfDay
		*out = new(float64)
		**out = **in
	}
	if in.Month != nil {
		in, out := &in.Month, &out.Month
		*out = new(string)
		**out = **in
	}
	if in.OffsetSeconds != nil {
		in, out := &in.OffsetSeconds, &out.OffsetSeconds
		*out = new(float64)
		**out = **in
	}
	if in.OffsetType != nil {
		in, out := &in.OffsetType, &out.OffsetType
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
	if in.RetentionSeconds != nil {
		in, out := &in.RetentionSeconds, &out.RetentionSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulesInitParameters.
func (in *SchedulesInitParameters) DeepCopy() *SchedulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulesObservation) DeepCopyInto(out *SchedulesObservation) {
	*out = *in
	if in.BackupType != nil {
		in, out := &in.BackupType, &out.BackupType
		*out = new(string)
		**out = **in
	}
	if in.DayOfMonth != nil {
		in, out := &in.DayOfMonth, &out.DayOfMonth
		*out = new(float64)
		**out = **in
	}
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.HourOfDay != nil {
		in, out := &in.HourOfDay, &out.HourOfDay
		*out = new(float64)
		**out = **in
	}
	if in.Month != nil {
		in, out := &in.Month, &out.Month
		*out = new(string)
		**out = **in
	}
	if in.OffsetSeconds != nil {
		in, out := &in.OffsetSeconds, &out.OffsetSeconds
		*out = new(float64)
		**out = **in
	}
	if in.OffsetType != nil {
		in, out := &in.OffsetType, &out.OffsetType
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
	if in.RetentionSeconds != nil {
		in, out := &in.RetentionSeconds, &out.RetentionSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulesObservation.
func (in *SchedulesObservation) DeepCopy() *SchedulesObservation {
	if in == nil {
		return nil
	}
	out := new(SchedulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SchedulesParameters) DeepCopyInto(out *SchedulesParameters) {
	*out = *in
	if in.BackupType != nil {
		in, out := &in.BackupType, &out.BackupType
		*out = new(string)
		**out = **in
	}
	if in.DayOfMonth != nil {
		in, out := &in.DayOfMonth, &out.DayOfMonth
		*out = new(float64)
		**out = **in
	}
	if in.DayOfWeek != nil {
		in, out := &in.DayOfWeek, &out.DayOfWeek
		*out = new(string)
		**out = **in
	}
	if in.HourOfDay != nil {
		in, out := &in.HourOfDay, &out.HourOfDay
		*out = new(float64)
		**out = **in
	}
	if in.Month != nil {
		in, out := &in.Month, &out.Month
		*out = new(string)
		**out = **in
	}
	if in.OffsetSeconds != nil {
		in, out := &in.OffsetSeconds, &out.OffsetSeconds
		*out = new(float64)
		**out = **in
	}
	if in.OffsetType != nil {
		in, out := &in.OffsetType, &out.OffsetType
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(string)
		**out = **in
	}
	if in.RetentionSeconds != nil {
		in, out := &in.RetentionSeconds, &out.RetentionSeconds
		*out = new(float64)
		**out = **in
	}
	if in.TimeZone != nil {
		in, out := &in.TimeZone, &out.TimeZone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SchedulesParameters.
func (in *SchedulesParameters) DeepCopy() *SchedulesParameters {
	if in == nil {
		return nil
	}
	out := new(SchedulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicSubnetsInitParameters) DeepCopyInto(out *SecondaryVnicSubnetsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicSubnetsInitParameters.
func (in *SecondaryVnicSubnetsInitParameters) DeepCopy() *SecondaryVnicSubnetsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicSubnetsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicSubnetsObservation) DeepCopyInto(out *SecondaryVnicSubnetsObservation) {
	*out = *in
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]SecondaryVnicSubnetsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.IsAssignIpv6Ip != nil {
		in, out := &in.IsAssignIpv6Ip, &out.IsAssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicSubnetsObservation.
func (in *SecondaryVnicSubnetsObservation) DeepCopy() *SecondaryVnicSubnetsObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicSubnetsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicSubnetsParameters) DeepCopyInto(out *SecondaryVnicSubnetsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicSubnetsParameters.
func (in *SecondaryVnicSubnetsParameters) DeepCopy() *SecondaryVnicSubnetsParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicSubnetsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsCreateVnicDetailsInitParameters) DeepCopyInto(out *SecondaryVnicsCreateVnicDetailsInitParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsCreateVnicDetailsInitParameters.
func (in *SecondaryVnicsCreateVnicDetailsInitParameters) DeepCopy() *SecondaryVnicsCreateVnicDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsCreateVnicDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.Ipv6Address != nil {
		in, out := &in.Ipv6Address, &out.Ipv6Address
		*out = new(string)
		**out = **in
	}
	if in.Ipv6SubnetCidr != nil {
		in, out := &in.Ipv6SubnetCidr, &out.Ipv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsCreateVnicDetailsObservation) DeepCopyInto(out *SecondaryVnicsCreateVnicDetailsObservation) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsCreateVnicDetailsObservation.
func (in *SecondaryVnicsCreateVnicDetailsObservation) DeepCopy() *SecondaryVnicsCreateVnicDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsCreateVnicDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsCreateVnicDetailsParameters) DeepCopyInto(out *SecondaryVnicsCreateVnicDetailsParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(bool)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]SecondaryVnicsCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsCreateVnicDetailsParameters.
func (in *SecondaryVnicsCreateVnicDetailsParameters) DeepCopy() *SecondaryVnicsCreateVnicDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsCreateVnicDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsInitParameters) DeepCopyInto(out *SecondaryVnicsInitParameters) {
	*out = *in
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]SecondaryVnicsCreateVnicDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NicIndex != nil {
		in, out := &in.NicIndex, &out.NicIndex
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsInitParameters.
func (in *SecondaryVnicsInitParameters) DeepCopy() *SecondaryVnicsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsObservation) DeepCopyInto(out *SecondaryVnicsObservation) {
	*out = *in
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]SecondaryVnicsCreateVnicDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NicIndex != nil {
		in, out := &in.NicIndex, &out.NicIndex
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsObservation.
func (in *SecondaryVnicsObservation) DeepCopy() *SecondaryVnicsObservation {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecondaryVnicsParameters) DeepCopyInto(out *SecondaryVnicsParameters) {
	*out = *in
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]SecondaryVnicsCreateVnicDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.NicIndex != nil {
		in, out := &in.NicIndex, &out.NicIndex
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecondaryVnicsParameters.
func (in *SecondaryVnicsParameters) DeepCopy() *SecondaryVnicsParameters {
	if in == nil {
		return nil
	}
	out := new(SecondaryVnicsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityList) DeepCopyInto(out *SecurityList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityList.
func (in *SecurityList) DeepCopy() *SecurityList {
	if in == nil {
		return nil
	}
	out := new(SecurityList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityListInitParameters) DeepCopyInto(out *SecurityListInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EgressSecurityRules != nil {
		in, out := &in.EgressSecurityRules, &out.EgressSecurityRules
		*out = make([]EgressSecurityRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IngressSecurityRules != nil {
		in, out := &in.IngressSecurityRules, &out.IngressSecurityRules
		*out = make([]IngressSecurityRulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityListInitParameters.
func (in *SecurityListInitParameters) DeepCopy() *SecurityListInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityListInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityListList) DeepCopyInto(out *SecurityListList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SecurityList, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityListList.
func (in *SecurityListList) DeepCopy() *SecurityListList {
	if in == nil {
		return nil
	}
	out := new(SecurityListList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SecurityListList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityListObservation) DeepCopyInto(out *SecurityListObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EgressSecurityRules != nil {
		in, out := &in.EgressSecurityRules, &out.EgressSecurityRules
		*out = make([]EgressSecurityRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IngressSecurityRules != nil {
		in, out := &in.IngressSecurityRules, &out.IngressSecurityRules
		*out = make([]IngressSecurityRulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityListObservation.
func (in *SecurityListObservation) DeepCopy() *SecurityListObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityListObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityListParameters) DeepCopyInto(out *SecurityListParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EgressSecurityRules != nil {
		in, out := &in.EgressSecurityRules, &out.EgressSecurityRules
		*out = make([]EgressSecurityRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IngressSecurityRules != nil {
		in, out := &in.IngressSecurityRules, &out.IngressSecurityRules
		*out = make([]IngressSecurityRulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityListParameters.
func (in *SecurityListParameters) DeepCopy() *SecurityListParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityListParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityListSpec) DeepCopyInto(out *SecurityListSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityListSpec.
func (in *SecurityListSpec) DeepCopy() *SecurityListSpec {
	if in == nil {
		return nil
	}
	out := new(SecurityListSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityListStatus) DeepCopyInto(out *SecurityListStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityListStatus.
func (in *SecurityListStatus) DeepCopy() *SecurityListStatus {
	if in == nil {
		return nil
	}
	out := new(SecurityListStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceGateway) DeepCopyInto(out *ServiceGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceGateway.
func (in *ServiceGateway) DeepCopy() *ServiceGateway {
	if in == nil {
		return nil
	}
	out := new(ServiceGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceGatewayInitParameters) DeepCopyInto(out *ServiceGatewayInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]ServicesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceGatewayInitParameters.
func (in *ServiceGatewayInitParameters) DeepCopy() *ServiceGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceGatewayList) DeepCopyInto(out *ServiceGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ServiceGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceGatewayList.
func (in *ServiceGatewayList) DeepCopy() *ServiceGatewayList {
	if in == nil {
		return nil
	}
	out := new(ServiceGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ServiceGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceGatewayObservation) DeepCopyInto(out *ServiceGatewayObservation) {
	*out = *in
	if in.BlockTraffic != nil {
		in, out := &in.BlockTraffic, &out.BlockTraffic
		*out = new(bool)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]ServicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceGatewayObservation.
func (in *ServiceGatewayObservation) DeepCopy() *ServiceGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(ServiceGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceGatewayParameters) DeepCopyInto(out *ServiceGatewayParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.Services != nil {
		in, out := &in.Services, &out.Services
		*out = make([]ServicesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceGatewayParameters.
func (in *ServiceGatewayParameters) DeepCopy() *ServiceGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(ServiceGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceGatewaySpec) DeepCopyInto(out *ServiceGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceGatewaySpec.
func (in *ServiceGatewaySpec) DeepCopy() *ServiceGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(ServiceGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServiceGatewayStatus) DeepCopyInto(out *ServiceGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServiceGatewayStatus.
func (in *ServiceGatewayStatus) DeepCopy() *ServiceGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(ServiceGatewayStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesInitParameters) DeepCopyInto(out *ServicesInitParameters) {
	*out = *in
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesInitParameters.
func (in *ServicesInitParameters) DeepCopy() *ServicesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesObservation) DeepCopyInto(out *ServicesObservation) {
	*out = *in
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceName != nil {
		in, out := &in.ServiceName, &out.ServiceName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesObservation.
func (in *ServicesObservation) DeepCopy() *ServicesObservation {
	if in == nil {
		return nil
	}
	out := new(ServicesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ServicesParameters) DeepCopyInto(out *ServicesParameters) {
	*out = *in
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ServicesParameters.
func (in *ServicesParameters) DeepCopy() *ServicesParameters {
	if in == nil {
		return nil
	}
	out := new(ServicesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeConfigInitParameters) DeepCopyInto(out *ShapeConfigInitParameters) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeConfigInitParameters.
func (in *ShapeConfigInitParameters) DeepCopy() *ShapeConfigInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShapeConfigInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeConfigObservation) DeepCopyInto(out *ShapeConfigObservation) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.GpuDescription != nil {
		in, out := &in.GpuDescription, &out.GpuDescription
		*out = new(string)
		**out = **in
	}
	if in.Gpus != nil {
		in, out := &in.Gpus, &out.Gpus
		*out = new(float64)
		**out = **in
	}
	if in.LocalDiskDescription != nil {
		in, out := &in.LocalDiskDescription, &out.LocalDiskDescription
		*out = new(string)
		**out = **in
	}
	if in.LocalDisks != nil {
		in, out := &in.LocalDisks, &out.LocalDisks
		*out = new(float64)
		**out = **in
	}
	if in.LocalDisksTotalSizeInGbs != nil {
		in, out := &in.LocalDisksTotalSizeInGbs, &out.LocalDisksTotalSizeInGbs
		*out = new(float64)
		**out = **in
	}
	if in.MaxVnicAttachments != nil {
		in, out := &in.MaxVnicAttachments, &out.MaxVnicAttachments
		*out = new(float64)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.NetworkingBandwidthInGbps != nil {
		in, out := &in.NetworkingBandwidthInGbps, &out.NetworkingBandwidthInGbps
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.ProcessorDescription != nil {
		in, out := &in.ProcessorDescription, &out.ProcessorDescription
		*out = new(string)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeConfigObservation.
func (in *ShapeConfigObservation) DeepCopy() *ShapeConfigObservation {
	if in == nil {
		return nil
	}
	out := new(ShapeConfigObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeConfigParameters) DeepCopyInto(out *ShapeConfigParameters) {
	*out = *in
	if in.BaselineOcpuUtilization != nil {
		in, out := &in.BaselineOcpuUtilization, &out.BaselineOcpuUtilization
		*out = new(string)
		**out = **in
	}
	if in.MemoryInGbs != nil {
		in, out := &in.MemoryInGbs, &out.MemoryInGbs
		*out = new(float64)
		**out = **in
	}
	if in.Nvmes != nil {
		in, out := &in.Nvmes, &out.Nvmes
		*out = new(float64)
		**out = **in
	}
	if in.Ocpus != nil {
		in, out := &in.Ocpus, &out.Ocpus
		*out = new(float64)
		**out = **in
	}
	if in.Vcpus != nil {
		in, out := &in.Vcpus, &out.Vcpus
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeConfigParameters.
func (in *ShapeConfigParameters) DeepCopy() *ShapeConfigParameters {
	if in == nil {
		return nil
	}
	out := new(ShapeConfigParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeManagement) DeepCopyInto(out *ShapeManagement) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeManagement.
func (in *ShapeManagement) DeepCopy() *ShapeManagement {
	if in == nil {
		return nil
	}
	out := new(ShapeManagement)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShapeManagement) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeManagementInitParameters) DeepCopyInto(out *ShapeManagementInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.ShapeName != nil {
		in, out := &in.ShapeName, &out.ShapeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeManagementInitParameters.
func (in *ShapeManagementInitParameters) DeepCopy() *ShapeManagementInitParameters {
	if in == nil {
		return nil
	}
	out := new(ShapeManagementInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeManagementList) DeepCopyInto(out *ShapeManagementList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ShapeManagement, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeManagementList.
func (in *ShapeManagementList) DeepCopy() *ShapeManagementList {
	if in == nil {
		return nil
	}
	out := new(ShapeManagementList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ShapeManagementList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeManagementObservation) DeepCopyInto(out *ShapeManagementObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.ShapeName != nil {
		in, out := &in.ShapeName, &out.ShapeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeManagementObservation.
func (in *ShapeManagementObservation) DeepCopy() *ShapeManagementObservation {
	if in == nil {
		return nil
	}
	out := new(ShapeManagementObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeManagementParameters) DeepCopyInto(out *ShapeManagementParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.ImageID != nil {
		in, out := &in.ImageID, &out.ImageID
		*out = new(string)
		**out = **in
	}
	if in.ShapeName != nil {
		in, out := &in.ShapeName, &out.ShapeName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeManagementParameters.
func (in *ShapeManagementParameters) DeepCopy() *ShapeManagementParameters {
	if in == nil {
		return nil
	}
	out := new(ShapeManagementParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeManagementSpec) DeepCopyInto(out *ShapeManagementSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeManagementSpec.
func (in *ShapeManagementSpec) DeepCopy() *ShapeManagementSpec {
	if in == nil {
		return nil
	}
	out := new(ShapeManagementSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ShapeManagementStatus) DeepCopyInto(out *ShapeManagementStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ShapeManagementStatus.
func (in *ShapeManagementStatus) DeepCopy() *ShapeManagementStatus {
	if in == nil {
		return nil
	}
	out := new(ShapeManagementStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsInitParameters) DeepCopyInto(out *SourceDetailsInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsInitParameters.
func (in *SourceDetailsInitParameters) DeepCopy() *SourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsInstanceSourceImageFilterDetailsInitParameters) DeepCopyInto(out *SourceDetailsInstanceSourceImageFilterDetailsInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsInstanceSourceImageFilterDetailsInitParameters.
func (in *SourceDetailsInstanceSourceImageFilterDetailsInitParameters) DeepCopy() *SourceDetailsInstanceSourceImageFilterDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsInstanceSourceImageFilterDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsInstanceSourceImageFilterDetailsObservation) DeepCopyInto(out *SourceDetailsInstanceSourceImageFilterDetailsObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsInstanceSourceImageFilterDetailsObservation.
func (in *SourceDetailsInstanceSourceImageFilterDetailsObservation) DeepCopy() *SourceDetailsInstanceSourceImageFilterDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsInstanceSourceImageFilterDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsInstanceSourceImageFilterDetailsParameters) DeepCopyInto(out *SourceDetailsInstanceSourceImageFilterDetailsParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTagsFilter != nil {
		in, out := &in.DefinedTagsFilter, &out.DefinedTagsFilter
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.OperatingSystem != nil {
		in, out := &in.OperatingSystem, &out.OperatingSystem
		*out = new(string)
		**out = **in
	}
	if in.OperatingSystemVersion != nil {
		in, out := &in.OperatingSystemVersion, &out.OperatingSystemVersion
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsInstanceSourceImageFilterDetailsParameters.
func (in *SourceDetailsInstanceSourceImageFilterDetailsParameters) DeepCopy() *SourceDetailsInstanceSourceImageFilterDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsInstanceSourceImageFilterDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsObservation) DeepCopyInto(out *SourceDetailsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsObservation.
func (in *SourceDetailsObservation) DeepCopy() *SourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourceDetailsParameters) DeepCopyInto(out *SourceDetailsParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourceDetailsParameters.
func (in *SourceDetailsParameters) DeepCopy() *SourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(SourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePortRangeInitParameters) DeepCopyInto(out *SourcePortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePortRangeInitParameters.
func (in *SourcePortRangeInitParameters) DeepCopy() *SourcePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(SourcePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePortRangeObservation) DeepCopyInto(out *SourcePortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePortRangeObservation.
func (in *SourcePortRangeObservation) DeepCopy() *SourcePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(SourcePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SourcePortRangeParameters) DeepCopyInto(out *SourcePortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SourcePortRangeParameters.
func (in *SourcePortRangeParameters) DeepCopy() *SourcePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(SourcePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Subnet) DeepCopyInto(out *Subnet) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Subnet.
func (in *Subnet) DeepCopy() *Subnet {
	if in == nil {
		return nil
	}
	out := new(Subnet)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Subnet) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetInitParameters) DeepCopyInto(out *SubnetInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DHCPOptionsID != nil {
		in, out := &in.DHCPOptionsID, &out.DHCPOptionsID
		*out = new(string)
		**out = **in
	}
	if in.DNSLabel != nil {
		in, out := &in.DNSLabel, &out.DNSLabel
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Ipv6CidrBlock != nil {
		in, out := &in.Ipv6CidrBlock, &out.Ipv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Ipv6CidrBlocks != nil {
		in, out := &in.Ipv6CidrBlocks, &out.Ipv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProhibitInternetIngress != nil {
		in, out := &in.ProhibitInternetIngress, &out.ProhibitInternetIngress
		*out = new(bool)
		**out = **in
	}
	if in.ProhibitPublicIPOnVnic != nil {
		in, out := &in.ProhibitPublicIPOnVnic, &out.ProhibitPublicIPOnVnic
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.SecurityListIds != nil {
		in, out := &in.SecurityListIds, &out.SecurityListIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetInitParameters.
func (in *SubnetInitParameters) DeepCopy() *SubnetInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetList) DeepCopyInto(out *SubnetList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Subnet, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetList.
func (in *SubnetList) DeepCopy() *SubnetList {
	if in == nil {
		return nil
	}
	out := new(SubnetList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SubnetList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetObservation) DeepCopyInto(out *SubnetObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DHCPOptionsID != nil {
		in, out := &in.DHCPOptionsID, &out.DHCPOptionsID
		*out = new(string)
		**out = **in
	}
	if in.DNSLabel != nil {
		in, out := &in.DNSLabel, &out.DNSLabel
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ipv6CidrBlock != nil {
		in, out := &in.Ipv6CidrBlock, &out.Ipv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Ipv6CidrBlocks != nil {
		in, out := &in.Ipv6CidrBlocks, &out.Ipv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Ipv6VirtualRouterIP != nil {
		in, out := &in.Ipv6VirtualRouterIP, &out.Ipv6VirtualRouterIP
		*out = new(string)
		**out = **in
	}
	if in.ProhibitInternetIngress != nil {
		in, out := &in.ProhibitInternetIngress, &out.ProhibitInternetIngress
		*out = new(bool)
		**out = **in
	}
	if in.ProhibitPublicIPOnVnic != nil {
		in, out := &in.ProhibitPublicIPOnVnic, &out.ProhibitPublicIPOnVnic
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.SecurityListIds != nil {
		in, out := &in.SecurityListIds, &out.SecurityListIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetDomainName != nil {
		in, out := &in.SubnetDomainName, &out.SubnetDomainName
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
	if in.VirtualRouterIP != nil {
		in, out := &in.VirtualRouterIP, &out.VirtualRouterIP
		*out = new(string)
		**out = **in
	}
	if in.VirtualRouterMac != nil {
		in, out := &in.VirtualRouterMac, &out.VirtualRouterMac
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetObservation.
func (in *SubnetObservation) DeepCopy() *SubnetObservation {
	if in == nil {
		return nil
	}
	out := new(SubnetObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetParameters) DeepCopyInto(out *SubnetParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DHCPOptionsID != nil {
		in, out := &in.DHCPOptionsID, &out.DHCPOptionsID
		*out = new(string)
		**out = **in
	}
	if in.DNSLabel != nil {
		in, out := &in.DNSLabel, &out.DNSLabel
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Ipv6CidrBlock != nil {
		in, out := &in.Ipv6CidrBlock, &out.Ipv6CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.Ipv6CidrBlocks != nil {
		in, out := &in.Ipv6CidrBlocks, &out.Ipv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProhibitInternetIngress != nil {
		in, out := &in.ProhibitInternetIngress, &out.ProhibitInternetIngress
		*out = new(bool)
		**out = **in
	}
	if in.ProhibitPublicIPOnVnic != nil {
		in, out := &in.ProhibitPublicIPOnVnic, &out.ProhibitPublicIPOnVnic
		*out = new(bool)
		**out = **in
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.SecurityListIds != nil {
		in, out := &in.SecurityListIds, &out.SecurityListIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetParameters.
func (in *SubnetParameters) DeepCopy() *SubnetParameters {
	if in == nil {
		return nil
	}
	out := new(SubnetParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetSpec) DeepCopyInto(out *SubnetSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetSpec.
func (in *SubnetSpec) DeepCopy() *SubnetSpec {
	if in == nil {
		return nil
	}
	out := new(SubnetSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubnetStatus) DeepCopyInto(out *SubnetStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubnetStatus.
func (in *SubnetStatus) DeepCopy() *SubnetStatus {
	if in == nil {
		return nil
	}
	out := new(SubnetStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPOptionsDestinationPortRangeInitParameters) DeepCopyInto(out *TCPOptionsDestinationPortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPOptionsDestinationPortRangeInitParameters.
func (in *TCPOptionsDestinationPortRangeInitParameters) DeepCopy() *TCPOptionsDestinationPortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(TCPOptionsDestinationPortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPOptionsDestinationPortRangeObservation) DeepCopyInto(out *TCPOptionsDestinationPortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPOptionsDestinationPortRangeObservation.
func (in *TCPOptionsDestinationPortRangeObservation) DeepCopy() *TCPOptionsDestinationPortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(TCPOptionsDestinationPortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPOptionsDestinationPortRangeParameters) DeepCopyInto(out *TCPOptionsDestinationPortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPOptionsDestinationPortRangeParameters.
func (in *TCPOptionsDestinationPortRangeParameters) DeepCopy() *TCPOptionsDestinationPortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(TCPOptionsDestinationPortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPOptionsInitParameters) DeepCopyInto(out *TCPOptionsInitParameters) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]DestinationPortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]SourcePortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPOptionsInitParameters.
func (in *TCPOptionsInitParameters) DeepCopy() *TCPOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TCPOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPOptionsObservation) DeepCopyInto(out *TCPOptionsObservation) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]DestinationPortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]SourcePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPOptionsObservation.
func (in *TCPOptionsObservation) DeepCopy() *TCPOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(TCPOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPOptionsParameters) DeepCopyInto(out *TCPOptionsParameters) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]DestinationPortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]SourcePortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPOptionsParameters.
func (in *TCPOptionsParameters) DeepCopy() *TCPOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(TCPOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPOptionsSourcePortRangeInitParameters) DeepCopyInto(out *TCPOptionsSourcePortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPOptionsSourcePortRangeInitParameters.
func (in *TCPOptionsSourcePortRangeInitParameters) DeepCopy() *TCPOptionsSourcePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(TCPOptionsSourcePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPOptionsSourcePortRangeObservation) DeepCopyInto(out *TCPOptionsSourcePortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPOptionsSourcePortRangeObservation.
func (in *TCPOptionsSourcePortRangeObservation) DeepCopy() *TCPOptionsSourcePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(TCPOptionsSourcePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPOptionsSourcePortRangeParameters) DeepCopyInto(out *TCPOptionsSourcePortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPOptionsSourcePortRangeParameters.
func (in *TCPOptionsSourcePortRangeParameters) DeepCopy() *TCPOptionsSourcePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(TCPOptionsSourcePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UDPOptionsDestinationPortRangeInitParameters) DeepCopyInto(out *UDPOptionsDestinationPortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UDPOptionsDestinationPortRangeInitParameters.
func (in *UDPOptionsDestinationPortRangeInitParameters) DeepCopy() *UDPOptionsDestinationPortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(UDPOptionsDestinationPortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UDPOptionsDestinationPortRangeObservation) DeepCopyInto(out *UDPOptionsDestinationPortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UDPOptionsDestinationPortRangeObservation.
func (in *UDPOptionsDestinationPortRangeObservation) DeepCopy() *UDPOptionsDestinationPortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(UDPOptionsDestinationPortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UDPOptionsDestinationPortRangeParameters) DeepCopyInto(out *UDPOptionsDestinationPortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UDPOptionsDestinationPortRangeParameters.
func (in *UDPOptionsDestinationPortRangeParameters) DeepCopy() *UDPOptionsDestinationPortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(UDPOptionsDestinationPortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UDPOptionsInitParameters) DeepCopyInto(out *UDPOptionsInitParameters) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]UDPOptionsDestinationPortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]UDPOptionsSourcePortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UDPOptionsInitParameters.
func (in *UDPOptionsInitParameters) DeepCopy() *UDPOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(UDPOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UDPOptionsObservation) DeepCopyInto(out *UDPOptionsObservation) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]UDPOptionsDestinationPortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]UDPOptionsSourcePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UDPOptionsObservation.
func (in *UDPOptionsObservation) DeepCopy() *UDPOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(UDPOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UDPOptionsParameters) DeepCopyInto(out *UDPOptionsParameters) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]UDPOptionsDestinationPortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]UDPOptionsSourcePortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UDPOptionsParameters.
func (in *UDPOptionsParameters) DeepCopy() *UDPOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(UDPOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UDPOptionsSourcePortRangeInitParameters) DeepCopyInto(out *UDPOptionsSourcePortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UDPOptionsSourcePortRangeInitParameters.
func (in *UDPOptionsSourcePortRangeInitParameters) DeepCopy() *UDPOptionsSourcePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(UDPOptionsSourcePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UDPOptionsSourcePortRangeObservation) DeepCopyInto(out *UDPOptionsSourcePortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UDPOptionsSourcePortRangeObservation.
func (in *UDPOptionsSourcePortRangeObservation) DeepCopy() *UDPOptionsSourcePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(UDPOptionsSourcePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UDPOptionsSourcePortRangeParameters) DeepCopyInto(out *UDPOptionsSourcePortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UDPOptionsSourcePortRangeParameters.
func (in *UDPOptionsSourcePortRangeParameters) DeepCopy() *UDPOptionsSourcePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(UDPOptionsSourcePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Vcn) DeepCopyInto(out *Vcn) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Vcn.
func (in *Vcn) DeepCopy() *Vcn {
	if in == nil {
		return nil
	}
	out := new(Vcn)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Vcn) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcnInitParameters) DeepCopyInto(out *VcnInitParameters) {
	*out = *in
	if in.Byoipv6CidrDetails != nil {
		in, out := &in.Byoipv6CidrDetails, &out.Byoipv6CidrDetails
		*out = make([]Byoipv6CidrDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DNSLabel != nil {
		in, out := &in.DNSLabel, &out.DNSLabel
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Ipv6PrivateCidrBlocks != nil {
		in, out := &in.Ipv6PrivateCidrBlocks, &out.Ipv6PrivateCidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IsIpv6Enabled != nil {
		in, out := &in.IsIpv6Enabled, &out.IsIpv6Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IsOracleGuaAllocationEnabled != nil {
		in, out := &in.IsOracleGuaAllocationEnabled, &out.IsOracleGuaAllocationEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcnInitParameters.
func (in *VcnInitParameters) DeepCopy() *VcnInitParameters {
	if in == nil {
		return nil
	}
	out := new(VcnInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcnList) DeepCopyInto(out *VcnList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Vcn, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcnList.
func (in *VcnList) DeepCopy() *VcnList {
	if in == nil {
		return nil
	}
	out := new(VcnList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VcnList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcnObservation) DeepCopyInto(out *VcnObservation) {
	*out = *in
	if in.Byoipv6CidrBlocks != nil {
		in, out := &in.Byoipv6CidrBlocks, &out.Byoipv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Byoipv6CidrDetails != nil {
		in, out := &in.Byoipv6CidrDetails, &out.Byoipv6CidrDetails
		*out = make([]Byoipv6CidrDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DNSLabel != nil {
		in, out := &in.DNSLabel, &out.DNSLabel
		*out = new(string)
		**out = **in
	}
	if in.DefaultDHCPOptionsID != nil {
		in, out := &in.DefaultDHCPOptionsID, &out.DefaultDHCPOptionsID
		*out = new(string)
		**out = **in
	}
	if in.DefaultRouteTableID != nil {
		in, out := &in.DefaultRouteTableID, &out.DefaultRouteTableID
		*out = new(string)
		**out = **in
	}
	if in.DefaultSecurityListID != nil {
		in, out := &in.DefaultSecurityListID, &out.DefaultSecurityListID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ipv6CidrBlocks != nil {
		in, out := &in.Ipv6CidrBlocks, &out.Ipv6CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Ipv6PrivateCidrBlocks != nil {
		in, out := &in.Ipv6PrivateCidrBlocks, &out.Ipv6PrivateCidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IsIpv6Enabled != nil {
		in, out := &in.IsIpv6Enabled, &out.IsIpv6Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IsOracleGuaAllocationEnabled != nil {
		in, out := &in.IsOracleGuaAllocationEnabled, &out.IsOracleGuaAllocationEnabled
		*out = new(bool)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnDomainName != nil {
		in, out := &in.VcnDomainName, &out.VcnDomainName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcnObservation.
func (in *VcnObservation) DeepCopy() *VcnObservation {
	if in == nil {
		return nil
	}
	out := new(VcnObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcnParameters) DeepCopyInto(out *VcnParameters) {
	*out = *in
	if in.Byoipv6CidrDetails != nil {
		in, out := &in.Byoipv6CidrDetails, &out.Byoipv6CidrDetails
		*out = make([]Byoipv6CidrDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CidrBlocks != nil {
		in, out := &in.CidrBlocks, &out.CidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DNSLabel != nil {
		in, out := &in.DNSLabel, &out.DNSLabel
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Ipv6PrivateCidrBlocks != nil {
		in, out := &in.Ipv6PrivateCidrBlocks, &out.Ipv6PrivateCidrBlocks
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IsIpv6Enabled != nil {
		in, out := &in.IsIpv6Enabled, &out.IsIpv6Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IsOracleGuaAllocationEnabled != nil {
		in, out := &in.IsOracleGuaAllocationEnabled, &out.IsOracleGuaAllocationEnabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcnParameters.
func (in *VcnParameters) DeepCopy() *VcnParameters {
	if in == nil {
		return nil
	}
	out := new(VcnParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcnSpec) DeepCopyInto(out *VcnSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcnSpec.
func (in *VcnSpec) DeepCopy() *VcnSpec {
	if in == nil {
		return nil
	}
	out := new(VcnSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VcnStatus) DeepCopyInto(out *VcnStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VcnStatus.
func (in *VcnStatus) DeepCopy() *VcnStatus {
	if in == nil {
		return nil
	}
	out := new(VcnStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuit) DeepCopyInto(out *VirtualCircuit) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuit.
func (in *VirtualCircuit) DeepCopy() *VirtualCircuit {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualCircuit) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuitInitParameters) DeepCopyInto(out *VirtualCircuitInitParameters) {
	*out = *in
	if in.BGPAdminState != nil {
		in, out := &in.BGPAdminState, &out.BGPAdminState
		*out = new(string)
		**out = **in
	}
	if in.BandwidthShapeName != nil {
		in, out := &in.BandwidthShapeName, &out.BandwidthShapeName
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectMappings != nil {
		in, out := &in.CrossConnectMappings, &out.CrossConnectMappings
		*out = make([]CrossConnectMappingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomerAsn != nil {
		in, out := &in.CustomerAsn, &out.CustomerAsn
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPAsn != nil {
		in, out := &in.CustomerBGPAsn, &out.CustomerBGPAsn
		*out = new(float64)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.IPMtu != nil {
		in, out := &in.IPMtu, &out.IPMtu
		*out = new(string)
		**out = **in
	}
	if in.IsBfdEnabled != nil {
		in, out := &in.IsBfdEnabled, &out.IsBfdEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTransportMode != nil {
		in, out := &in.IsTransportMode, &out.IsTransportMode
		*out = new(bool)
		**out = **in
	}
	if in.ProviderServiceID != nil {
		in, out := &in.ProviderServiceID, &out.ProviderServiceID
		*out = new(string)
		**out = **in
	}
	if in.ProviderServiceKeyName != nil {
		in, out := &in.ProviderServiceKeyName, &out.ProviderServiceKeyName
		*out = new(string)
		**out = **in
	}
	if in.PublicPrefixes != nil {
		in, out := &in.PublicPrefixes, &out.PublicPrefixes
		*out = make([]PublicPrefixesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoutingPolicy != nil {
		in, out := &in.RoutingPolicy, &out.RoutingPolicy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuitInitParameters.
func (in *VirtualCircuitInitParameters) DeepCopy() *VirtualCircuitInitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuitList) DeepCopyInto(out *VirtualCircuitList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VirtualCircuit, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuitList.
func (in *VirtualCircuitList) DeepCopy() *VirtualCircuitList {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuitList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VirtualCircuitList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuitObservation) DeepCopyInto(out *VirtualCircuitObservation) {
	*out = *in
	if in.BGPAdminState != nil {
		in, out := &in.BGPAdminState, &out.BGPAdminState
		*out = new(string)
		**out = **in
	}
	if in.BGPIpv6SessionState != nil {
		in, out := &in.BGPIpv6SessionState, &out.BGPIpv6SessionState
		*out = new(string)
		**out = **in
	}
	if in.BGPManagement != nil {
		in, out := &in.BGPManagement, &out.BGPManagement
		*out = new(string)
		**out = **in
	}
	if in.BGPSessionState != nil {
		in, out := &in.BGPSessionState, &out.BGPSessionState
		*out = new(string)
		**out = **in
	}
	if in.BandwidthShapeName != nil {
		in, out := &in.BandwidthShapeName, &out.BandwidthShapeName
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectMappings != nil {
		in, out := &in.CrossConnectMappings, &out.CrossConnectMappings
		*out = make([]CrossConnectMappingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomerAsn != nil {
		in, out := &in.CustomerAsn, &out.CustomerAsn
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPAsn != nil {
		in, out := &in.CustomerBGPAsn, &out.CustomerBGPAsn
		*out = new(float64)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPMtu != nil {
		in, out := &in.IPMtu, &out.IPMtu
		*out = new(string)
		**out = **in
	}
	if in.IsBfdEnabled != nil {
		in, out := &in.IsBfdEnabled, &out.IsBfdEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTransportMode != nil {
		in, out := &in.IsTransportMode, &out.IsTransportMode
		*out = new(bool)
		**out = **in
	}
	if in.OracleBGPAsn != nil {
		in, out := &in.OracleBGPAsn, &out.OracleBGPAsn
		*out = new(float64)
		**out = **in
	}
	if in.ProviderServiceID != nil {
		in, out := &in.ProviderServiceID, &out.ProviderServiceID
		*out = new(string)
		**out = **in
	}
	if in.ProviderServiceKeyName != nil {
		in, out := &in.ProviderServiceKeyName, &out.ProviderServiceKeyName
		*out = new(string)
		**out = **in
	}
	if in.ProviderState != nil {
		in, out := &in.ProviderState, &out.ProviderState
		*out = new(string)
		**out = **in
	}
	if in.PublicPrefixes != nil {
		in, out := &in.PublicPrefixes, &out.PublicPrefixes
		*out = make([]PublicPrefixesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ReferenceComment != nil {
		in, out := &in.ReferenceComment, &out.ReferenceComment
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoutingPolicy != nil {
		in, out := &in.RoutingPolicy, &out.RoutingPolicy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ServiceType != nil {
		in, out := &in.ServiceType, &out.ServiceType
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuitObservation.
func (in *VirtualCircuitObservation) DeepCopy() *VirtualCircuitObservation {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuitParameters) DeepCopyInto(out *VirtualCircuitParameters) {
	*out = *in
	if in.BGPAdminState != nil {
		in, out := &in.BGPAdminState, &out.BGPAdminState
		*out = new(string)
		**out = **in
	}
	if in.BandwidthShapeName != nil {
		in, out := &in.BandwidthShapeName, &out.BandwidthShapeName
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CrossConnectMappings != nil {
		in, out := &in.CrossConnectMappings, &out.CrossConnectMappings
		*out = make([]CrossConnectMappingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CustomerAsn != nil {
		in, out := &in.CustomerAsn, &out.CustomerAsn
		*out = new(string)
		**out = **in
	}
	if in.CustomerBGPAsn != nil {
		in, out := &in.CustomerBGPAsn, &out.CustomerBGPAsn
		*out = new(float64)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.GatewayID != nil {
		in, out := &in.GatewayID, &out.GatewayID
		*out = new(string)
		**out = **in
	}
	if in.IPMtu != nil {
		in, out := &in.IPMtu, &out.IPMtu
		*out = new(string)
		**out = **in
	}
	if in.IsBfdEnabled != nil {
		in, out := &in.IsBfdEnabled, &out.IsBfdEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsTransportMode != nil {
		in, out := &in.IsTransportMode, &out.IsTransportMode
		*out = new(bool)
		**out = **in
	}
	if in.ProviderServiceID != nil {
		in, out := &in.ProviderServiceID, &out.ProviderServiceID
		*out = new(string)
		**out = **in
	}
	if in.ProviderServiceKeyName != nil {
		in, out := &in.ProviderServiceKeyName, &out.ProviderServiceKeyName
		*out = new(string)
		**out = **in
	}
	if in.PublicPrefixes != nil {
		in, out := &in.PublicPrefixes, &out.PublicPrefixes
		*out = make([]PublicPrefixesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoutingPolicy != nil {
		in, out := &in.RoutingPolicy, &out.RoutingPolicy
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuitParameters.
func (in *VirtualCircuitParameters) DeepCopy() *VirtualCircuitParameters {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuitSpec) DeepCopyInto(out *VirtualCircuitSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuitSpec.
func (in *VirtualCircuitSpec) DeepCopy() *VirtualCircuitSpec {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuitSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VirtualCircuitStatus) DeepCopyInto(out *VirtualCircuitStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VirtualCircuitStatus.
func (in *VirtualCircuitStatus) DeepCopy() *VirtualCircuitStatus {
	if in == nil {
		return nil
	}
	out := new(VirtualCircuitStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Vlan) DeepCopyInto(out *Vlan) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Vlan.
func (in *Vlan) DeepCopy() *Vlan {
	if in == nil {
		return nil
	}
	out := new(Vlan)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Vlan) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanInitParameters) DeepCopyInto(out *VlanInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
	if in.VlanTag != nil {
		in, out := &in.VlanTag, &out.VlanTag
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanInitParameters.
func (in *VlanInitParameters) DeepCopy() *VlanInitParameters {
	if in == nil {
		return nil
	}
	out := new(VlanInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanList) DeepCopyInto(out *VlanList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Vlan, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanList.
func (in *VlanList) DeepCopy() *VlanList {
	if in == nil {
		return nil
	}
	out := new(VlanList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VlanList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanObservation) DeepCopyInto(out *VlanObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
	if in.VlanTag != nil {
		in, out := &in.VlanTag, &out.VlanTag
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanObservation.
func (in *VlanObservation) DeepCopy() *VlanObservation {
	if in == nil {
		return nil
	}
	out := new(VlanObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanParameters) DeepCopyInto(out *VlanParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CidrBlock != nil {
		in, out := &in.CidrBlock, &out.CidrBlock
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.RouteTableID != nil {
		in, out := &in.RouteTableID, &out.RouteTableID
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
	if in.VlanTag != nil {
		in, out := &in.VlanTag, &out.VlanTag
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanParameters.
func (in *VlanParameters) DeepCopy() *VlanParameters {
	if in == nil {
		return nil
	}
	out := new(VlanParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanSpec) DeepCopyInto(out *VlanSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanSpec.
func (in *VlanSpec) DeepCopy() *VlanSpec {
	if in == nil {
		return nil
	}
	out := new(VlanSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VlanStatus) DeepCopyInto(out *VlanStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VlanStatus.
func (in *VlanStatus) DeepCopy() *VlanStatus {
	if in == nil {
		return nil
	}
	out := new(VlanStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicAttachment) DeepCopyInto(out *VnicAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicAttachment.
func (in *VnicAttachment) DeepCopy() *VnicAttachment {
	if in == nil {
		return nil
	}
	out := new(VnicAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VnicAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicAttachmentCreateVnicDetailsInitParameters) DeepCopyInto(out *VnicAttachmentCreateVnicDetailsInitParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicAttachmentCreateVnicDetailsInitParameters.
func (in *VnicAttachmentCreateVnicDetailsInitParameters) DeepCopy() *VnicAttachmentCreateVnicDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VnicAttachmentCreateVnicDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopyInto(out *VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) {
	*out = *in
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.IPv6SubnetCidr != nil {
		in, out := &in.IPv6SubnetCidr, &out.IPv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters.
func (in *VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters) DeepCopy() *VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopyInto(out *VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) {
	*out = *in
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.IPv6SubnetCidr != nil {
		in, out := &in.IPv6SubnetCidr, &out.IPv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation.
func (in *VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation) DeepCopy() *VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopyInto(out *VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) {
	*out = *in
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.IPv6SubnetCidr != nil {
		in, out := &in.IPv6SubnetCidr, &out.IPv6SubnetCidr
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters.
func (in *VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters) DeepCopy() *VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicAttachmentCreateVnicDetailsObservation) DeepCopyInto(out *VnicAttachmentCreateVnicDetailsObservation) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicAttachmentCreateVnicDetailsObservation.
func (in *VnicAttachmentCreateVnicDetailsObservation) DeepCopy() *VnicAttachmentCreateVnicDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(VnicAttachmentCreateVnicDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicAttachmentCreateVnicDetailsParameters) DeepCopyInto(out *VnicAttachmentCreateVnicDetailsParameters) {
	*out = *in
	if in.AssignIpv6Ip != nil {
		in, out := &in.AssignIpv6Ip, &out.AssignIpv6Ip
		*out = new(bool)
		**out = **in
	}
	if in.AssignPrivateDNSRecord != nil {
		in, out := &in.AssignPrivateDNSRecord, &out.AssignPrivateDNSRecord
		*out = new(bool)
		**out = **in
	}
	if in.AssignPublicIP != nil {
		in, out := &in.AssignPublicIP, &out.AssignPublicIP
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.HostnameLabel != nil {
		in, out := &in.HostnameLabel, &out.HostnameLabel
		*out = new(string)
		**out = **in
	}
	if in.Ipv6AddressIpv6SubnetCidrPairDetails != nil {
		in, out := &in.Ipv6AddressIpv6SubnetCidrPairDetails, &out.Ipv6AddressIpv6SubnetCidrPairDetails
		*out = make([]VnicAttachmentCreateVnicDetailsIpv6AddressIpv6SubnetCidrPairDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.NsgIds != nil {
		in, out := &in.NsgIds, &out.NsgIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.SkipSourceDestCheck != nil {
		in, out := &in.SkipSourceDestCheck, &out.SkipSourceDestCheck
		*out = new(bool)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicAttachmentCreateVnicDetailsParameters.
func (in *VnicAttachmentCreateVnicDetailsParameters) DeepCopy() *VnicAttachmentCreateVnicDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(VnicAttachmentCreateVnicDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicAttachmentInitParameters) DeepCopyInto(out *VnicAttachmentInitParameters) {
	*out = *in
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]VnicAttachmentCreateVnicDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.NicIndex != nil {
		in, out := &in.NicIndex, &out.NicIndex
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicAttachmentInitParameters.
func (in *VnicAttachmentInitParameters) DeepCopy() *VnicAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(VnicAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicAttachmentList) DeepCopyInto(out *VnicAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VnicAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicAttachmentList.
func (in *VnicAttachmentList) DeepCopy() *VnicAttachmentList {
	if in == nil {
		return nil
	}
	out := new(VnicAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VnicAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicAttachmentObservation) DeepCopyInto(out *VnicAttachmentObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]VnicAttachmentCreateVnicDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.NicIndex != nil {
		in, out := &in.NicIndex, &out.NicIndex
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VlanID != nil {
		in, out := &in.VlanID, &out.VlanID
		*out = new(string)
		**out = **in
	}
	if in.VlanTag != nil {
		in, out := &in.VlanTag, &out.VlanTag
		*out = new(float64)
		**out = **in
	}
	if in.VnicID != nil {
		in, out := &in.VnicID, &out.VnicID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicAttachmentObservation.
func (in *VnicAttachmentObservation) DeepCopy() *VnicAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(VnicAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicAttachmentParameters) DeepCopyInto(out *VnicAttachmentParameters) {
	*out = *in
	if in.CreateVnicDetails != nil {
		in, out := &in.CreateVnicDetails, &out.CreateVnicDetails
		*out = make([]VnicAttachmentCreateVnicDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.NicIndex != nil {
		in, out := &in.NicIndex, &out.NicIndex
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicAttachmentParameters.
func (in *VnicAttachmentParameters) DeepCopy() *VnicAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(VnicAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicAttachmentSpec) DeepCopyInto(out *VnicAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicAttachmentSpec.
func (in *VnicAttachmentSpec) DeepCopy() *VnicAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(VnicAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VnicAttachmentStatus) DeepCopyInto(out *VnicAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VnicAttachmentStatus.
func (in *VnicAttachmentStatus) DeepCopy() *VnicAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(VnicAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Volume) DeepCopyInto(out *Volume) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Volume.
func (in *Volume) DeepCopy() *Volume {
	if in == nil {
		return nil
	}
	out := new(Volume)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Volume) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachment) DeepCopyInto(out *VolumeAttachment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachment.
func (in *VolumeAttachment) DeepCopy() *VolumeAttachment {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeAttachment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentInitParameters) DeepCopyInto(out *VolumeAttachmentInitParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionInTransitType != nil {
		in, out := &in.EncryptionInTransitType, &out.EncryptionInTransitType
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.IsAgentAutoISCSILoginEnabled != nil {
		in, out := &in.IsAgentAutoISCSILoginEnabled, &out.IsAgentAutoISCSILoginEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentInitParameters.
func (in *VolumeAttachmentInitParameters) DeepCopy() *VolumeAttachmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentList) DeepCopyInto(out *VolumeAttachmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VolumeAttachment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentList.
func (in *VolumeAttachmentList) DeepCopy() *VolumeAttachmentList {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeAttachmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentObservation) DeepCopyInto(out *VolumeAttachmentObservation) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.ChapSecret != nil {
		in, out := &in.ChapSecret, &out.ChapSecret
		*out = new(string)
		**out = **in
	}
	if in.ChapUsername != nil {
		in, out := &in.ChapUsername, &out.ChapUsername
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionInTransitType != nil {
		in, out := &in.EncryptionInTransitType, &out.EncryptionInTransitType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv4 != nil {
		in, out := &in.IPv4, &out.IPv4
		*out = new(string)
		**out = **in
	}
	if in.ISCSILoginState != nil {
		in, out := &in.ISCSILoginState, &out.ISCSILoginState
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Iqn != nil {
		in, out := &in.Iqn, &out.Iqn
		*out = new(string)
		**out = **in
	}
	if in.IsAgentAutoISCSILoginEnabled != nil {
		in, out := &in.IsAgentAutoISCSILoginEnabled, &out.IsAgentAutoISCSILoginEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsMultipath != nil {
		in, out := &in.IsMultipath, &out.IsMultipath
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.IsVolumeCreatedDuringLaunch != nil {
		in, out := &in.IsVolumeCreatedDuringLaunch, &out.IsVolumeCreatedDuringLaunch
		*out = new(bool)
		**out = **in
	}
	if in.MultipathDevices != nil {
		in, out := &in.MultipathDevices, &out.MultipathDevices
		*out = make([]MultipathDevicesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentObservation.
func (in *VolumeAttachmentObservation) DeepCopy() *VolumeAttachmentObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentParameters) DeepCopyInto(out *VolumeAttachmentParameters) {
	*out = *in
	if in.AttachmentType != nil {
		in, out := &in.AttachmentType, &out.AttachmentType
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.Device != nil {
		in, out := &in.Device, &out.Device
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncryptionInTransitType != nil {
		in, out := &in.EncryptionInTransitType, &out.EncryptionInTransitType
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.IsAgentAutoISCSILoginEnabled != nil {
		in, out := &in.IsAgentAutoISCSILoginEnabled, &out.IsAgentAutoISCSILoginEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsPvEncryptionInTransitEnabled != nil {
		in, out := &in.IsPvEncryptionInTransitEnabled, &out.IsPvEncryptionInTransitEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsReadOnly != nil {
		in, out := &in.IsReadOnly, &out.IsReadOnly
		*out = new(bool)
		**out = **in
	}
	if in.IsShareable != nil {
		in, out := &in.IsShareable, &out.IsShareable
		*out = new(bool)
		**out = **in
	}
	if in.UseChap != nil {
		in, out := &in.UseChap, &out.UseChap
		*out = new(bool)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentParameters.
func (in *VolumeAttachmentParameters) DeepCopy() *VolumeAttachmentParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentSpec) DeepCopyInto(out *VolumeAttachmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentSpec.
func (in *VolumeAttachmentSpec) DeepCopy() *VolumeAttachmentSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAttachmentStatus) DeepCopyInto(out *VolumeAttachmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAttachmentStatus.
func (in *VolumeAttachmentStatus) DeepCopy() *VolumeAttachmentStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeAttachmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAutotunePoliciesInitParameters) DeepCopyInto(out *VolumeAutotunePoliciesInitParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAutotunePoliciesInitParameters.
func (in *VolumeAutotunePoliciesInitParameters) DeepCopy() *VolumeAutotunePoliciesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeAutotunePoliciesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAutotunePoliciesObservation) DeepCopyInto(out *VolumeAutotunePoliciesObservation) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAutotunePoliciesObservation.
func (in *VolumeAutotunePoliciesObservation) DeepCopy() *VolumeAutotunePoliciesObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeAutotunePoliciesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeAutotunePoliciesParameters) DeepCopyInto(out *VolumeAutotunePoliciesParameters) {
	*out = *in
	if in.AutotuneType != nil {
		in, out := &in.AutotuneType, &out.AutotuneType
		*out = new(string)
		**out = **in
	}
	if in.MaxVpusPerGb != nil {
		in, out := &in.MaxVpusPerGb, &out.MaxVpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeAutotunePoliciesParameters.
func (in *VolumeAutotunePoliciesParameters) DeepCopy() *VolumeAutotunePoliciesParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeAutotunePoliciesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackup) DeepCopyInto(out *VolumeBackup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackup.
func (in *VolumeBackup) DeepCopy() *VolumeBackup {
	if in == nil {
		return nil
	}
	out := new(VolumeBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeBackup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupInitParameters) DeepCopyInto(out *VolumeBackupInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeBackupSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupInitParameters.
func (in *VolumeBackupInitParameters) DeepCopy() *VolumeBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupList) DeepCopyInto(out *VolumeBackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VolumeBackup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupList.
func (in *VolumeBackupList) DeepCopy() *VolumeBackupList {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeBackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupObservation) DeepCopyInto(out *VolumeBackupObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeBackupSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.SourceVolumeBackupID != nil {
		in, out := &in.SourceVolumeBackupID, &out.SourceVolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeRequestReceived != nil {
		in, out := &in.TimeRequestReceived, &out.TimeRequestReceived
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UniqueSizeInGbs != nil {
		in, out := &in.UniqueSizeInGbs, &out.UniqueSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.UniqueSizeInMbs != nil {
		in, out := &in.UniqueSizeInMbs, &out.UniqueSizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupObservation.
func (in *VolumeBackupObservation) DeepCopy() *VolumeBackupObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupParameters) DeepCopyInto(out *VolumeBackupParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeBackupSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VolumeID != nil {
		in, out := &in.VolumeID, &out.VolumeID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupParameters.
func (in *VolumeBackupParameters) DeepCopy() *VolumeBackupParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicy) DeepCopyInto(out *VolumeBackupPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicy.
func (in *VolumeBackupPolicy) DeepCopy() *VolumeBackupPolicy {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeBackupPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyAssignment) DeepCopyInto(out *VolumeBackupPolicyAssignment) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyAssignment.
func (in *VolumeBackupPolicyAssignment) DeepCopy() *VolumeBackupPolicyAssignment {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyAssignment)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeBackupPolicyAssignment) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyAssignmentInitParameters) DeepCopyInto(out *VolumeBackupPolicyAssignmentInitParameters) {
	*out = *in
	if in.AssetID != nil {
		in, out := &in.AssetID, &out.AssetID
		*out = new(string)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyAssignmentInitParameters.
func (in *VolumeBackupPolicyAssignmentInitParameters) DeepCopy() *VolumeBackupPolicyAssignmentInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyAssignmentInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyAssignmentList) DeepCopyInto(out *VolumeBackupPolicyAssignmentList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VolumeBackupPolicyAssignment, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyAssignmentList.
func (in *VolumeBackupPolicyAssignmentList) DeepCopy() *VolumeBackupPolicyAssignmentList {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyAssignmentList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeBackupPolicyAssignmentList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyAssignmentObservation) DeepCopyInto(out *VolumeBackupPolicyAssignmentObservation) {
	*out = *in
	if in.AssetID != nil {
		in, out := &in.AssetID, &out.AssetID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyAssignmentObservation.
func (in *VolumeBackupPolicyAssignmentObservation) DeepCopy() *VolumeBackupPolicyAssignmentObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyAssignmentObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyAssignmentParameters) DeepCopyInto(out *VolumeBackupPolicyAssignmentParameters) {
	*out = *in
	if in.AssetID != nil {
		in, out := &in.AssetID, &out.AssetID
		*out = new(string)
		**out = **in
	}
	if in.PolicyID != nil {
		in, out := &in.PolicyID, &out.PolicyID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyAssignmentParameters.
func (in *VolumeBackupPolicyAssignmentParameters) DeepCopy() *VolumeBackupPolicyAssignmentParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyAssignmentParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyAssignmentSpec) DeepCopyInto(out *VolumeBackupPolicyAssignmentSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyAssignmentSpec.
func (in *VolumeBackupPolicyAssignmentSpec) DeepCopy() *VolumeBackupPolicyAssignmentSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyAssignmentSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyAssignmentStatus) DeepCopyInto(out *VolumeBackupPolicyAssignmentStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyAssignmentStatus.
func (in *VolumeBackupPolicyAssignmentStatus) DeepCopy() *VolumeBackupPolicyAssignmentStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyAssignmentStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyInitParameters) DeepCopyInto(out *VolumeBackupPolicyInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DestinationRegion != nil {
		in, out := &in.DestinationRegion, &out.DestinationRegion
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Schedules != nil {
		in, out := &in.Schedules, &out.Schedules
		*out = make([]SchedulesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyInitParameters.
func (in *VolumeBackupPolicyInitParameters) DeepCopy() *VolumeBackupPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyList) DeepCopyInto(out *VolumeBackupPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VolumeBackupPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyList.
func (in *VolumeBackupPolicyList) DeepCopy() *VolumeBackupPolicyList {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeBackupPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyObservation) DeepCopyInto(out *VolumeBackupPolicyObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DestinationRegion != nil {
		in, out := &in.DestinationRegion, &out.DestinationRegion
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Schedules != nil {
		in, out := &in.Schedules, &out.Schedules
		*out = make([]SchedulesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyObservation.
func (in *VolumeBackupPolicyObservation) DeepCopy() *VolumeBackupPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyParameters) DeepCopyInto(out *VolumeBackupPolicyParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DestinationRegion != nil {
		in, out := &in.DestinationRegion, &out.DestinationRegion
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Schedules != nil {
		in, out := &in.Schedules, &out.Schedules
		*out = make([]SchedulesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyParameters.
func (in *VolumeBackupPolicyParameters) DeepCopy() *VolumeBackupPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicySpec) DeepCopyInto(out *VolumeBackupPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicySpec.
func (in *VolumeBackupPolicySpec) DeepCopy() *VolumeBackupPolicySpec {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupPolicyStatus) DeepCopyInto(out *VolumeBackupPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupPolicyStatus.
func (in *VolumeBackupPolicyStatus) DeepCopy() *VolumeBackupPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupSourceDetailsInitParameters) DeepCopyInto(out *VolumeBackupSourceDetailsInitParameters) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VolumeBackupID != nil {
		in, out := &in.VolumeBackupID, &out.VolumeBackupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupSourceDetailsInitParameters.
func (in *VolumeBackupSourceDetailsInitParameters) DeepCopy() *VolumeBackupSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupSourceDetailsObservation) DeepCopyInto(out *VolumeBackupSourceDetailsObservation) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VolumeBackupID != nil {
		in, out := &in.VolumeBackupID, &out.VolumeBackupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupSourceDetailsObservation.
func (in *VolumeBackupSourceDetailsObservation) DeepCopy() *VolumeBackupSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupSourceDetailsParameters) DeepCopyInto(out *VolumeBackupSourceDetailsParameters) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VolumeBackupID != nil {
		in, out := &in.VolumeBackupID, &out.VolumeBackupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupSourceDetailsParameters.
func (in *VolumeBackupSourceDetailsParameters) DeepCopy() *VolumeBackupSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupSpec) DeepCopyInto(out *VolumeBackupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupSpec.
func (in *VolumeBackupSpec) DeepCopy() *VolumeBackupSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBackupStatus) DeepCopyInto(out *VolumeBackupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBackupStatus.
func (in *VolumeBackupStatus) DeepCopy() *VolumeBackupStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeBackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBlockVolumeReplicasInitParameters) DeepCopyInto(out *VolumeBlockVolumeReplicasInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBlockVolumeReplicasInitParameters.
func (in *VolumeBlockVolumeReplicasInitParameters) DeepCopy() *VolumeBlockVolumeReplicasInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBlockVolumeReplicasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBlockVolumeReplicasObservation) DeepCopyInto(out *VolumeBlockVolumeReplicasObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicaID != nil {
		in, out := &in.BlockVolumeReplicaID, &out.BlockVolumeReplicaID
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBlockVolumeReplicasObservation.
func (in *VolumeBlockVolumeReplicasObservation) DeepCopy() *VolumeBlockVolumeReplicasObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeBlockVolumeReplicasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeBlockVolumeReplicasParameters) DeepCopyInto(out *VolumeBlockVolumeReplicasParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeBlockVolumeReplicasParameters.
func (in *VolumeBlockVolumeReplicasParameters) DeepCopy() *VolumeBlockVolumeReplicasParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeBlockVolumeReplicasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroup) DeepCopyInto(out *VolumeGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroup.
func (in *VolumeGroup) DeepCopy() *VolumeGroup {
	if in == nil {
		return nil
	}
	out := new(VolumeGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackup) DeepCopyInto(out *VolumeGroupBackup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackup.
func (in *VolumeGroupBackup) DeepCopy() *VolumeGroupBackup {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeGroupBackup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupInitParameters) DeepCopyInto(out *VolumeGroupBackupInitParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeGroupBackupSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupInitParameters.
func (in *VolumeGroupBackupInitParameters) DeepCopy() *VolumeGroupBackupInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupList) DeepCopyInto(out *VolumeGroupBackupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VolumeGroupBackup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupList.
func (in *VolumeGroupBackupList) DeepCopy() *VolumeGroupBackupList {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeGroupBackupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupObservation) DeepCopyInto(out *VolumeGroupBackupObservation) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.ExpirationTime != nil {
		in, out := &in.ExpirationTime, &out.ExpirationTime
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeGroupBackupSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.SourceVolumeGroupBackupID != nil {
		in, out := &in.SourceVolumeGroupBackupID, &out.SourceVolumeGroupBackupID
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TimeRequestReceived != nil {
		in, out := &in.TimeRequestReceived, &out.TimeRequestReceived
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UniqueSizeInGbs != nil {
		in, out := &in.UniqueSizeInGbs, &out.UniqueSizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.UniqueSizeInMbs != nil {
		in, out := &in.UniqueSizeInMbs, &out.UniqueSizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.VolumeBackupIds != nil {
		in, out := &in.VolumeBackupIds, &out.VolumeBackupIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupObservation.
func (in *VolumeGroupBackupObservation) DeepCopy() *VolumeGroupBackupObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupParameters) DeepCopyInto(out *VolumeGroupBackupParameters) {
	*out = *in
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeGroupBackupSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupParameters.
func (in *VolumeGroupBackupParameters) DeepCopy() *VolumeGroupBackupParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupSourceDetailsInitParameters) DeepCopyInto(out *VolumeGroupBackupSourceDetailsInitParameters) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupBackupID != nil {
		in, out := &in.VolumeGroupBackupID, &out.VolumeGroupBackupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupSourceDetailsInitParameters.
func (in *VolumeGroupBackupSourceDetailsInitParameters) DeepCopy() *VolumeGroupBackupSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupSourceDetailsObservation) DeepCopyInto(out *VolumeGroupBackupSourceDetailsObservation) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupBackupID != nil {
		in, out := &in.VolumeGroupBackupID, &out.VolumeGroupBackupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupSourceDetailsObservation.
func (in *VolumeGroupBackupSourceDetailsObservation) DeepCopy() *VolumeGroupBackupSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupSourceDetailsParameters) DeepCopyInto(out *VolumeGroupBackupSourceDetailsParameters) {
	*out = *in
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupBackupID != nil {
		in, out := &in.VolumeGroupBackupID, &out.VolumeGroupBackupID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupSourceDetailsParameters.
func (in *VolumeGroupBackupSourceDetailsParameters) DeepCopy() *VolumeGroupBackupSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupSpec) DeepCopyInto(out *VolumeGroupBackupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupSpec.
func (in *VolumeGroupBackupSpec) DeepCopy() *VolumeGroupBackupSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupBackupStatus) DeepCopyInto(out *VolumeGroupBackupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupBackupStatus.
func (in *VolumeGroupBackupStatus) DeepCopy() *VolumeGroupBackupStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupBackupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupInitParameters) DeepCopyInto(out *VolumeGroupInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PreserveVolumeReplica != nil {
		in, out := &in.PreserveVolumeReplica, &out.PreserveVolumeReplica
		*out = new(bool)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeGroupSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeGroupReplicas != nil {
		in, out := &in.VolumeGroupReplicas, &out.VolumeGroupReplicas
		*out = make([]VolumeGroupReplicasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeGroupReplicasDeletion != nil {
		in, out := &in.VolumeGroupReplicasDeletion, &out.VolumeGroupReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.VolumeIds != nil {
		in, out := &in.VolumeIds, &out.VolumeIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupInitParameters.
func (in *VolumeGroupInitParameters) DeepCopy() *VolumeGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupList) DeepCopyInto(out *VolumeGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VolumeGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupList.
func (in *VolumeGroupList) DeepCopy() *VolumeGroupList {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupObservation) DeepCopyInto(out *VolumeGroupObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsHydrated != nil {
		in, out := &in.IsHydrated, &out.IsHydrated
		*out = new(bool)
		**out = **in
	}
	if in.PreserveVolumeReplica != nil {
		in, out := &in.PreserveVolumeReplica, &out.PreserveVolumeReplica
		*out = new(bool)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeGroupSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupReplicas != nil {
		in, out := &in.VolumeGroupReplicas, &out.VolumeGroupReplicas
		*out = make([]VolumeGroupReplicasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeGroupReplicasDeletion != nil {
		in, out := &in.VolumeGroupReplicasDeletion, &out.VolumeGroupReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.VolumeIds != nil {
		in, out := &in.VolumeIds, &out.VolumeIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupObservation.
func (in *VolumeGroupObservation) DeepCopy() *VolumeGroupObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupParameters) DeepCopyInto(out *VolumeGroupParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.PreserveVolumeReplica != nil {
		in, out := &in.PreserveVolumeReplica, &out.PreserveVolumeReplica
		*out = new(bool)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeGroupSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeGroupReplicas != nil {
		in, out := &in.VolumeGroupReplicas, &out.VolumeGroupReplicas
		*out = make([]VolumeGroupReplicasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeGroupReplicasDeletion != nil {
		in, out := &in.VolumeGroupReplicasDeletion, &out.VolumeGroupReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.VolumeIds != nil {
		in, out := &in.VolumeIds, &out.VolumeIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupParameters.
func (in *VolumeGroupParameters) DeepCopy() *VolumeGroupParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupReplicasInitParameters) DeepCopyInto(out *VolumeGroupReplicasInitParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupReplicasInitParameters.
func (in *VolumeGroupReplicasInitParameters) DeepCopy() *VolumeGroupReplicasInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupReplicasInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupReplicasObservation) DeepCopyInto(out *VolumeGroupReplicasObservation) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupReplicaID != nil {
		in, out := &in.VolumeGroupReplicaID, &out.VolumeGroupReplicaID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupReplicasObservation.
func (in *VolumeGroupReplicasObservation) DeepCopy() *VolumeGroupReplicasObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupReplicasObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupReplicasParameters) DeepCopyInto(out *VolumeGroupReplicasParameters) {
	*out = *in
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupReplicasParameters.
func (in *VolumeGroupReplicasParameters) DeepCopy() *VolumeGroupReplicasParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupReplicasParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupSourceDetailsInitParameters) DeepCopyInto(out *VolumeGroupSourceDetailsInitParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupBackupID != nil {
		in, out := &in.VolumeGroupBackupID, &out.VolumeGroupBackupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupReplicaID != nil {
		in, out := &in.VolumeGroupReplicaID, &out.VolumeGroupReplicaID
		*out = new(string)
		**out = **in
	}
	if in.VolumeIds != nil {
		in, out := &in.VolumeIds, &out.VolumeIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupSourceDetailsInitParameters.
func (in *VolumeGroupSourceDetailsInitParameters) DeepCopy() *VolumeGroupSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupSourceDetailsObservation) DeepCopyInto(out *VolumeGroupSourceDetailsObservation) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupBackupID != nil {
		in, out := &in.VolumeGroupBackupID, &out.VolumeGroupBackupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupReplicaID != nil {
		in, out := &in.VolumeGroupReplicaID, &out.VolumeGroupReplicaID
		*out = new(string)
		**out = **in
	}
	if in.VolumeIds != nil {
		in, out := &in.VolumeIds, &out.VolumeIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupSourceDetailsObservation.
func (in *VolumeGroupSourceDetailsObservation) DeepCopy() *VolumeGroupSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupSourceDetailsParameters) DeepCopyInto(out *VolumeGroupSourceDetailsParameters) {
	*out = *in
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupBackupID != nil {
		in, out := &in.VolumeGroupBackupID, &out.VolumeGroupBackupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupReplicaID != nil {
		in, out := &in.VolumeGroupReplicaID, &out.VolumeGroupReplicaID
		*out = new(string)
		**out = **in
	}
	if in.VolumeIds != nil {
		in, out := &in.VolumeIds, &out.VolumeIds
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupSourceDetailsParameters.
func (in *VolumeGroupSourceDetailsParameters) DeepCopy() *VolumeGroupSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupSpec) DeepCopyInto(out *VolumeGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupSpec.
func (in *VolumeGroupSpec) DeepCopy() *VolumeGroupSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeGroupStatus) DeepCopyInto(out *VolumeGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeGroupStatus.
func (in *VolumeGroupStatus) DeepCopy() *VolumeGroupStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeInitParameters) DeepCopyInto(out *VolumeInitParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]VolumeAutotunePoliciesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]VolumeBlockVolumeReplicasInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BlockVolumeReplicasDeletion != nil {
		in, out := &in.BlockVolumeReplicasDeletion, &out.BlockVolumeReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeSourceDetailsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeBackupID != nil {
		in, out := &in.VolumeBackupID, &out.VolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeInitParameters.
func (in *VolumeInitParameters) DeepCopy() *VolumeInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeList) DeepCopyInto(out *VolumeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Volume, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeList.
func (in *VolumeList) DeepCopy() *VolumeList {
	if in == nil {
		return nil
	}
	out := new(VolumeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VolumeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeObservation) DeepCopyInto(out *VolumeObservation) {
	*out = *in
	if in.AutoTunedVpusPerGb != nil {
		in, out := &in.AutoTunedVpusPerGb, &out.AutoTunedVpusPerGb
		*out = new(string)
		**out = **in
	}
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]VolumeAutotunePoliciesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]VolumeBlockVolumeReplicasObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BlockVolumeReplicasDeletion != nil {
		in, out := &in.BlockVolumeReplicasDeletion, &out.BlockVolumeReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.IsHydrated != nil {
		in, out := &in.IsHydrated, &out.IsHydrated
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeSourceDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.SystemTags != nil {
		in, out := &in.SystemTags, &out.SystemTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.VolumeBackupID != nil {
		in, out := &in.VolumeBackupID, &out.VolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.VolumeGroupID != nil {
		in, out := &in.VolumeGroupID, &out.VolumeGroupID
		*out = new(string)
		**out = **in
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeObservation.
func (in *VolumeObservation) DeepCopy() *VolumeObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeParameters) DeepCopyInto(out *VolumeParameters) {
	*out = *in
	if in.AutotunePolicies != nil {
		in, out := &in.AutotunePolicies, &out.AutotunePolicies
		*out = make([]VolumeAutotunePoliciesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.AvailabilityDomain != nil {
		in, out := &in.AvailabilityDomain, &out.AvailabilityDomain
		*out = new(string)
		**out = **in
	}
	if in.BackupPolicyID != nil {
		in, out := &in.BackupPolicyID, &out.BackupPolicyID
		*out = new(string)
		**out = **in
	}
	if in.BlockVolumeReplicas != nil {
		in, out := &in.BlockVolumeReplicas, &out.BlockVolumeReplicas
		*out = make([]VolumeBlockVolumeReplicasParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BlockVolumeReplicasDeletion != nil {
		in, out := &in.BlockVolumeReplicasDeletion, &out.BlockVolumeReplicasDeletion
		*out = new(bool)
		**out = **in
	}
	if in.ClusterPlacementGroupID != nil {
		in, out := &in.ClusterPlacementGroupID, &out.ClusterPlacementGroupID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsAutoTuneEnabled != nil {
		in, out := &in.IsAutoTuneEnabled, &out.IsAutoTuneEnabled
		*out = new(bool)
		**out = **in
	}
	if in.KMSKeyID != nil {
		in, out := &in.KMSKeyID, &out.KMSKeyID
		*out = new(string)
		**out = **in
	}
	if in.SizeInGbs != nil {
		in, out := &in.SizeInGbs, &out.SizeInGbs
		*out = new(string)
		**out = **in
	}
	if in.SizeInMbs != nil {
		in, out := &in.SizeInMbs, &out.SizeInMbs
		*out = new(string)
		**out = **in
	}
	if in.SourceDetails != nil {
		in, out := &in.SourceDetails, &out.SourceDetails
		*out = make([]VolumeSourceDetailsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.VolumeBackupID != nil {
		in, out := &in.VolumeBackupID, &out.VolumeBackupID
		*out = new(string)
		**out = **in
	}
	if in.VpusPerGb != nil {
		in, out := &in.VpusPerGb, &out.VpusPerGb
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeParameters.
func (in *VolumeParameters) DeepCopy() *VolumeParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeSourceDetailsInitParameters) DeepCopyInto(out *VolumeSourceDetailsInitParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeSourceDetailsInitParameters.
func (in *VolumeSourceDetailsInitParameters) DeepCopy() *VolumeSourceDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeSourceDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeSourceDetailsObservation) DeepCopyInto(out *VolumeSourceDetailsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeSourceDetailsObservation.
func (in *VolumeSourceDetailsObservation) DeepCopy() *VolumeSourceDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(VolumeSourceDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeSourceDetailsParameters) DeepCopyInto(out *VolumeSourceDetailsParameters) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeSourceDetailsParameters.
func (in *VolumeSourceDetailsParameters) DeepCopy() *VolumeSourceDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(VolumeSourceDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeSpec) DeepCopyInto(out *VolumeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeSpec.
func (in *VolumeSpec) DeepCopy() *VolumeSpec {
	if in == nil {
		return nil
	}
	out := new(VolumeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VolumeStatus) DeepCopyInto(out *VolumeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VolumeStatus.
func (in *VolumeStatus) DeepCopy() *VolumeStatus {
	if in == nil {
		return nil
	}
	out := new(VolumeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Vtap) DeepCopyInto(out *Vtap) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Vtap.
func (in *Vtap) DeepCopy() *Vtap {
	if in == nil {
		return nil
	}
	out := new(Vtap)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Vtap) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesIcmpOptionsInitParameters) DeepCopyInto(out *VtapCaptureFilterRulesIcmpOptionsInitParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesIcmpOptionsInitParameters.
func (in *VtapCaptureFilterRulesIcmpOptionsInitParameters) DeepCopy() *VtapCaptureFilterRulesIcmpOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesIcmpOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesIcmpOptionsObservation) DeepCopyInto(out *VtapCaptureFilterRulesIcmpOptionsObservation) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesIcmpOptionsObservation.
func (in *VtapCaptureFilterRulesIcmpOptionsObservation) DeepCopy() *VtapCaptureFilterRulesIcmpOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesIcmpOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesIcmpOptionsParameters) DeepCopyInto(out *VtapCaptureFilterRulesIcmpOptionsParameters) {
	*out = *in
	if in.Code != nil {
		in, out := &in.Code, &out.Code
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesIcmpOptionsParameters.
func (in *VtapCaptureFilterRulesIcmpOptionsParameters) DeepCopy() *VtapCaptureFilterRulesIcmpOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesIcmpOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesInitParameters) DeepCopyInto(out *VtapCaptureFilterRulesInitParameters) {
	*out = *in
	if in.DestinationCidr != nil {
		in, out := &in.DestinationCidr, &out.DestinationCidr
		*out = new(string)
		**out = **in
	}
	if in.IcmpOptions != nil {
		in, out := &in.IcmpOptions, &out.IcmpOptions
		*out = make([]VtapCaptureFilterRulesIcmpOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.SourceCidr != nil {
		in, out := &in.SourceCidr, &out.SourceCidr
		*out = new(string)
		**out = **in
	}
	if in.TCPOptions != nil {
		in, out := &in.TCPOptions, &out.TCPOptions
		*out = make([]VtapCaptureFilterRulesTCPOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficDirection != nil {
		in, out := &in.TrafficDirection, &out.TrafficDirection
		*out = new(string)
		**out = **in
	}
	if in.UDPOptions != nil {
		in, out := &in.UDPOptions, &out.UDPOptions
		*out = make([]VtapCaptureFilterRulesUDPOptionsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesInitParameters.
func (in *VtapCaptureFilterRulesInitParameters) DeepCopy() *VtapCaptureFilterRulesInitParameters {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesObservation) DeepCopyInto(out *VtapCaptureFilterRulesObservation) {
	*out = *in
	if in.DestinationCidr != nil {
		in, out := &in.DestinationCidr, &out.DestinationCidr
		*out = new(string)
		**out = **in
	}
	if in.IcmpOptions != nil {
		in, out := &in.IcmpOptions, &out.IcmpOptions
		*out = make([]VtapCaptureFilterRulesIcmpOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.SourceCidr != nil {
		in, out := &in.SourceCidr, &out.SourceCidr
		*out = new(string)
		**out = **in
	}
	if in.TCPOptions != nil {
		in, out := &in.TCPOptions, &out.TCPOptions
		*out = make([]VtapCaptureFilterRulesTCPOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficDirection != nil {
		in, out := &in.TrafficDirection, &out.TrafficDirection
		*out = new(string)
		**out = **in
	}
	if in.UDPOptions != nil {
		in, out := &in.UDPOptions, &out.UDPOptions
		*out = make([]VtapCaptureFilterRulesUDPOptionsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesObservation.
func (in *VtapCaptureFilterRulesObservation) DeepCopy() *VtapCaptureFilterRulesObservation {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesParameters) DeepCopyInto(out *VtapCaptureFilterRulesParameters) {
	*out = *in
	if in.DestinationCidr != nil {
		in, out := &in.DestinationCidr, &out.DestinationCidr
		*out = new(string)
		**out = **in
	}
	if in.IcmpOptions != nil {
		in, out := &in.IcmpOptions, &out.IcmpOptions
		*out = make([]VtapCaptureFilterRulesIcmpOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Protocol != nil {
		in, out := &in.Protocol, &out.Protocol
		*out = new(string)
		**out = **in
	}
	if in.RuleAction != nil {
		in, out := &in.RuleAction, &out.RuleAction
		*out = new(string)
		**out = **in
	}
	if in.SourceCidr != nil {
		in, out := &in.SourceCidr, &out.SourceCidr
		*out = new(string)
		**out = **in
	}
	if in.TCPOptions != nil {
		in, out := &in.TCPOptions, &out.TCPOptions
		*out = make([]VtapCaptureFilterRulesTCPOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TrafficDirection != nil {
		in, out := &in.TrafficDirection, &out.TrafficDirection
		*out = new(string)
		**out = **in
	}
	if in.UDPOptions != nil {
		in, out := &in.UDPOptions, &out.UDPOptions
		*out = make([]VtapCaptureFilterRulesUDPOptionsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesParameters.
func (in *VtapCaptureFilterRulesParameters) DeepCopy() *VtapCaptureFilterRulesParameters {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesTCPOptionsInitParameters) DeepCopyInto(out *VtapCaptureFilterRulesTCPOptionsInitParameters) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]TCPOptionsDestinationPortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]TCPOptionsSourcePortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesTCPOptionsInitParameters.
func (in *VtapCaptureFilterRulesTCPOptionsInitParameters) DeepCopy() *VtapCaptureFilterRulesTCPOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesTCPOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesTCPOptionsObservation) DeepCopyInto(out *VtapCaptureFilterRulesTCPOptionsObservation) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]TCPOptionsDestinationPortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]TCPOptionsSourcePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesTCPOptionsObservation.
func (in *VtapCaptureFilterRulesTCPOptionsObservation) DeepCopy() *VtapCaptureFilterRulesTCPOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesTCPOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesTCPOptionsParameters) DeepCopyInto(out *VtapCaptureFilterRulesTCPOptionsParameters) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]TCPOptionsDestinationPortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]TCPOptionsSourcePortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesTCPOptionsParameters.
func (in *VtapCaptureFilterRulesTCPOptionsParameters) DeepCopy() *VtapCaptureFilterRulesTCPOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesTCPOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesUDPOptionsDestinationPortRangeInitParameters) DeepCopyInto(out *VtapCaptureFilterRulesUDPOptionsDestinationPortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesUDPOptionsDestinationPortRangeInitParameters.
func (in *VtapCaptureFilterRulesUDPOptionsDestinationPortRangeInitParameters) DeepCopy() *VtapCaptureFilterRulesUDPOptionsDestinationPortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesUDPOptionsDestinationPortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesUDPOptionsDestinationPortRangeObservation) DeepCopyInto(out *VtapCaptureFilterRulesUDPOptionsDestinationPortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesUDPOptionsDestinationPortRangeObservation.
func (in *VtapCaptureFilterRulesUDPOptionsDestinationPortRangeObservation) DeepCopy() *VtapCaptureFilterRulesUDPOptionsDestinationPortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesUDPOptionsDestinationPortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesUDPOptionsDestinationPortRangeParameters) DeepCopyInto(out *VtapCaptureFilterRulesUDPOptionsDestinationPortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesUDPOptionsDestinationPortRangeParameters.
func (in *VtapCaptureFilterRulesUDPOptionsDestinationPortRangeParameters) DeepCopy() *VtapCaptureFilterRulesUDPOptionsDestinationPortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesUDPOptionsDestinationPortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesUDPOptionsInitParameters) DeepCopyInto(out *VtapCaptureFilterRulesUDPOptionsInitParameters) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]VtapCaptureFilterRulesUDPOptionsDestinationPortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]VtapCaptureFilterRulesUDPOptionsSourcePortRangeInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesUDPOptionsInitParameters.
func (in *VtapCaptureFilterRulesUDPOptionsInitParameters) DeepCopy() *VtapCaptureFilterRulesUDPOptionsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesUDPOptionsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesUDPOptionsObservation) DeepCopyInto(out *VtapCaptureFilterRulesUDPOptionsObservation) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]VtapCaptureFilterRulesUDPOptionsDestinationPortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]VtapCaptureFilterRulesUDPOptionsSourcePortRangeObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesUDPOptionsObservation.
func (in *VtapCaptureFilterRulesUDPOptionsObservation) DeepCopy() *VtapCaptureFilterRulesUDPOptionsObservation {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesUDPOptionsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesUDPOptionsParameters) DeepCopyInto(out *VtapCaptureFilterRulesUDPOptionsParameters) {
	*out = *in
	if in.DestinationPortRange != nil {
		in, out := &in.DestinationPortRange, &out.DestinationPortRange
		*out = make([]VtapCaptureFilterRulesUDPOptionsDestinationPortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SourcePortRange != nil {
		in, out := &in.SourcePortRange, &out.SourcePortRange
		*out = make([]VtapCaptureFilterRulesUDPOptionsSourcePortRangeParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesUDPOptionsParameters.
func (in *VtapCaptureFilterRulesUDPOptionsParameters) DeepCopy() *VtapCaptureFilterRulesUDPOptionsParameters {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesUDPOptionsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesUDPOptionsSourcePortRangeInitParameters) DeepCopyInto(out *VtapCaptureFilterRulesUDPOptionsSourcePortRangeInitParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesUDPOptionsSourcePortRangeInitParameters.
func (in *VtapCaptureFilterRulesUDPOptionsSourcePortRangeInitParameters) DeepCopy() *VtapCaptureFilterRulesUDPOptionsSourcePortRangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesUDPOptionsSourcePortRangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesUDPOptionsSourcePortRangeObservation) DeepCopyInto(out *VtapCaptureFilterRulesUDPOptionsSourcePortRangeObservation) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesUDPOptionsSourcePortRangeObservation.
func (in *VtapCaptureFilterRulesUDPOptionsSourcePortRangeObservation) DeepCopy() *VtapCaptureFilterRulesUDPOptionsSourcePortRangeObservation {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesUDPOptionsSourcePortRangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapCaptureFilterRulesUDPOptionsSourcePortRangeParameters) DeepCopyInto(out *VtapCaptureFilterRulesUDPOptionsSourcePortRangeParameters) {
	*out = *in
	if in.Max != nil {
		in, out := &in.Max, &out.Max
		*out = new(float64)
		**out = **in
	}
	if in.Min != nil {
		in, out := &in.Min, &out.Min
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapCaptureFilterRulesUDPOptionsSourcePortRangeParameters.
func (in *VtapCaptureFilterRulesUDPOptionsSourcePortRangeParameters) DeepCopy() *VtapCaptureFilterRulesUDPOptionsSourcePortRangeParameters {
	if in == nil {
		return nil
	}
	out := new(VtapCaptureFilterRulesUDPOptionsSourcePortRangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapInitParameters) DeepCopyInto(out *VtapInitParameters) {
	*out = *in
	if in.CaptureFilterID != nil {
		in, out := &in.CaptureFilterID, &out.CaptureFilterID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncapsulationProtocol != nil {
		in, out := &in.EncapsulationProtocol, &out.EncapsulationProtocol
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsVtapEnabled != nil {
		in, out := &in.IsVtapEnabled, &out.IsVtapEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxPacketSize != nil {
		in, out := &in.MaxPacketSize, &out.MaxPacketSize
		*out = new(float64)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.SourcePrivateEndpointIP != nil {
		in, out := &in.SourcePrivateEndpointIP, &out.SourcePrivateEndpointIP
		*out = new(string)
		**out = **in
	}
	if in.SourcePrivateEndpointSubnetID != nil {
		in, out := &in.SourcePrivateEndpointSubnetID, &out.SourcePrivateEndpointSubnetID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.TargetIP != nil {
		in, out := &in.TargetIP, &out.TargetIP
		*out = new(string)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
	if in.TrafficMode != nil {
		in, out := &in.TrafficMode, &out.TrafficMode
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
	if in.VxlanNetworkIdentifier != nil {
		in, out := &in.VxlanNetworkIdentifier, &out.VxlanNetworkIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapInitParameters.
func (in *VtapInitParameters) DeepCopy() *VtapInitParameters {
	if in == nil {
		return nil
	}
	out := new(VtapInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapList) DeepCopyInto(out *VtapList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Vtap, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapList.
func (in *VtapList) DeepCopy() *VtapList {
	if in == nil {
		return nil
	}
	out := new(VtapList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VtapList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapObservation) DeepCopyInto(out *VtapObservation) {
	*out = *in
	if in.CaptureFilterID != nil {
		in, out := &in.CaptureFilterID, &out.CaptureFilterID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncapsulationProtocol != nil {
		in, out := &in.EncapsulationProtocol, &out.EncapsulationProtocol
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsVtapEnabled != nil {
		in, out := &in.IsVtapEnabled, &out.IsVtapEnabled
		*out = new(bool)
		**out = **in
	}
	if in.LifecycleStateDetails != nil {
		in, out := &in.LifecycleStateDetails, &out.LifecycleStateDetails
		*out = new(string)
		**out = **in
	}
	if in.MaxPacketSize != nil {
		in, out := &in.MaxPacketSize, &out.MaxPacketSize
		*out = new(float64)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.SourcePrivateEndpointIP != nil {
		in, out := &in.SourcePrivateEndpointIP, &out.SourcePrivateEndpointIP
		*out = new(string)
		**out = **in
	}
	if in.SourcePrivateEndpointSubnetID != nil {
		in, out := &in.SourcePrivateEndpointSubnetID, &out.SourcePrivateEndpointSubnetID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.State != nil {
		in, out := &in.State, &out.State
		*out = new(string)
		**out = **in
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.TargetIP != nil {
		in, out := &in.TargetIP, &out.TargetIP
		*out = new(string)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
	if in.TimeCreated != nil {
		in, out := &in.TimeCreated, &out.TimeCreated
		*out = new(string)
		**out = **in
	}
	if in.TrafficMode != nil {
		in, out := &in.TrafficMode, &out.TrafficMode
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
	if in.VxlanNetworkIdentifier != nil {
		in, out := &in.VxlanNetworkIdentifier, &out.VxlanNetworkIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapObservation.
func (in *VtapObservation) DeepCopy() *VtapObservation {
	if in == nil {
		return nil
	}
	out := new(VtapObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapParameters) DeepCopyInto(out *VtapParameters) {
	*out = *in
	if in.CaptureFilterID != nil {
		in, out := &in.CaptureFilterID, &out.CaptureFilterID
		*out = new(string)
		**out = **in
	}
	if in.CompartmentID != nil {
		in, out := &in.CompartmentID, &out.CompartmentID
		*out = new(string)
		**out = **in
	}
	if in.DefinedTags != nil {
		in, out := &in.DefinedTags, &out.DefinedTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.DisplayName != nil {
		in, out := &in.DisplayName, &out.DisplayName
		*out = new(string)
		**out = **in
	}
	if in.EncapsulationProtocol != nil {
		in, out := &in.EncapsulationProtocol, &out.EncapsulationProtocol
		*out = new(string)
		**out = **in
	}
	if in.FreeformTags != nil {
		in, out := &in.FreeformTags, &out.FreeformTags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.IsVtapEnabled != nil {
		in, out := &in.IsVtapEnabled, &out.IsVtapEnabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxPacketSize != nil {
		in, out := &in.MaxPacketSize, &out.MaxPacketSize
		*out = new(float64)
		**out = **in
	}
	if in.SourceID != nil {
		in, out := &in.SourceID, &out.SourceID
		*out = new(string)
		**out = **in
	}
	if in.SourcePrivateEndpointIP != nil {
		in, out := &in.SourcePrivateEndpointIP, &out.SourcePrivateEndpointIP
		*out = new(string)
		**out = **in
	}
	if in.SourcePrivateEndpointSubnetID != nil {
		in, out := &in.SourcePrivateEndpointSubnetID, &out.SourcePrivateEndpointSubnetID
		*out = new(string)
		**out = **in
	}
	if in.SourceType != nil {
		in, out := &in.SourceType, &out.SourceType
		*out = new(string)
		**out = **in
	}
	if in.TargetID != nil {
		in, out := &in.TargetID, &out.TargetID
		*out = new(string)
		**out = **in
	}
	if in.TargetIP != nil {
		in, out := &in.TargetIP, &out.TargetIP
		*out = new(string)
		**out = **in
	}
	if in.TargetType != nil {
		in, out := &in.TargetType, &out.TargetType
		*out = new(string)
		**out = **in
	}
	if in.TrafficMode != nil {
		in, out := &in.TrafficMode, &out.TrafficMode
		*out = new(string)
		**out = **in
	}
	if in.VcnID != nil {
		in, out := &in.VcnID, &out.VcnID
		*out = new(string)
		**out = **in
	}
	if in.VxlanNetworkIdentifier != nil {
		in, out := &in.VxlanNetworkIdentifier, &out.VxlanNetworkIdentifier
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapParameters.
func (in *VtapParameters) DeepCopy() *VtapParameters {
	if in == nil {
		return nil
	}
	out := new(VtapParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapSpec) DeepCopyInto(out *VtapSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapSpec.
func (in *VtapSpec) DeepCopy() *VtapSpec {
	if in == nil {
		return nil
	}
	out := new(VtapSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VtapStatus) DeepCopyInto(out *VtapStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VtapStatus.
func (in *VtapStatus) DeepCopy() *VtapStatus {
	if in == nil {
		return nil
	}
	out := new(VtapStatus)
	in.DeepCopyInto(out)
	return out
}
