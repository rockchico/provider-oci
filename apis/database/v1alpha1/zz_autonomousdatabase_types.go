// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ApexDetailsInitParameters struct {
}

type ApexDetailsObservation struct {

	// The Oracle APEX Application Development version.
	ApexVersion *string `json:"apexVersion,omitempty" tf:"apex_version,omitempty"`

	// The Oracle REST Data Services (ORDS) version.
	OrdsVersion *string `json:"ordsVersion,omitempty" tf:"ords_version,omitempty"`
}

type ApexDetailsParameters struct {
}

type AutonomousDatabaseInitParameters struct {

	// (Updatable) The password must be between 12 and 30 characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (") or the username "admin", regardless of casing. The password is mandatory if source value is "BACKUP_FROM_ID", "BACKUP_FROM_TIMESTAMP", "DATABASE" or "NONE".
	AdminPasswordSecretRef *v1.SecretKeySelector `json:"adminPasswordSecretRef,omitempty" tf:"-"`

	// (Updatable) This field will be null if the Autonomous Database is not Data Guard enabled or Access Control is disabled. It's value would be TRUE if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses primary IP access control list (ACL) for standby. It's value would be FALSE if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses different IP access control list (ACL) for standby compared to primary.
	ArePrimaryWhitelistedIpsUsed *bool `json:"arePrimaryWhitelistedIpsUsed,omitempty" tf:"are_primary_whitelisted_ips_used,omitempty"`

	// (Applicable when source=CLONE_TO_REFRESHABLE) (Updatable) The frequency a refreshable clone is refreshed after auto-refresh is enabled. The minimum is 1 hour. The maximum is 7 days. The date and time that auto-refresh is enabled is controlled by the timeOfAutoRefreshStart parameter.
	AutoRefreshFrequencyInSeconds *float64 `json:"autoRefreshFrequencyInSeconds,omitempty" tf:"auto_refresh_frequency_in_seconds,omitempty"`

	// (Applicable when source=CLONE_TO_REFRESHABLE) (Updatable) The time, in seconds, the data of the refreshable clone lags the primary database at the point of refresh. The minimum is 0 minutes (0 mins means refresh to the latest available timestamp). The maximum is 7 days. The lag time increases after refreshing until the next data refresh happens.
	AutoRefreshPointLagInSeconds *float64 `json:"autoRefreshPointLagInSeconds,omitempty" tf:"auto_refresh_point_lag_in_seconds,omitempty"`

	// The Autonomous Container Database OCID.
	AutonomousContainerDatabaseID *string `json:"autonomousContainerDatabaseId,omitempty" tf:"autonomous_container_database_id,omitempty"`

	// The OCID of the source Autonomous Database Backup that you will clone to create a new Autonomous Database.
	AutonomousDatabaseBackupID *string `json:"autonomousDatabaseBackupId,omitempty" tf:"autonomous_database_backup_id,omitempty"`

	// The OCID of the source Autonomous Database that you will clone to create a new Autonomous Database.
	AutonomousDatabaseID *string `json:"autonomousDatabaseId,omitempty" tf:"autonomous_database_id,omitempty"`

	// The maintenance schedule type of the Autonomous Database Serverless instances. The EARLY maintenance schedule of this Autonomous Database follows a schedule that applies patches prior to the REGULAR schedule.The REGULAR maintenance schedule of this Autonomous Database follows the normal cycle.
	AutonomousMaintenanceScheduleType *string `json:"autonomousMaintenanceScheduleType,omitempty" tf:"autonomous_maintenance_schedule_type,omitempty"`

	// (Updatable) Retention period, in days, for backups.
	BackupRetentionPeriodInDays *float64 `json:"backupRetentionPeriodInDays,omitempty" tf:"backup_retention_period_in_days,omitempty"`

	ByolComputeCountLimit *float64 `json:"byolComputeCountLimit,omitempty" tf:"byol_compute_count_limit,omitempty"`

	// (Updatable) The number of CPU cores to be made available to the database. For Autonomous Databases on dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See Characteristics of Infrastructure Shapes for shape details.
	// Note: This parameter cannot be used with the ocpuCount parameter. This input is ignored for Always Free resources.
	CPUCoreCount *float64 `json:"cpuCoreCount,omitempty" tf:"cpu_core_count,omitempty"`

	// The character set for the autonomous database.  The default is AL32UTF8. Allowed values for an Autonomous Database on Serverless infrastructure as returned by List Autonomous Database Character Sets
	CharacterSet *string `json:"characterSet,omitempty" tf:"character_set,omitempty"`

	// The Autonomous Database clone type. This parameter is not used to create a refreshable clone type, and for refreshable clones one must use the (source=CLONE_TO_REFRESHABLE) parameter.
	CloneType *string `json:"cloneType,omitempty" tf:"clone_type,omitempty"`

	// (Updatable) The OCID of the compartment of the Autonomous Database.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) The compute amount available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure. For an Autonomous Database Serverless instance, the 'ECPU' compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the computeModel parameter. When using cpuCoreCount parameter, it is an error to specify computeCount to a non-null value. Providing computeModel and computeCount is the preferred method for both OCPU and ECPU.
	ComputeCount *float64 `json:"computeCount,omitempty" tf:"compute_count,omitempty"`

	// (Updatable) The compute model of the Autonomous Database. This is required if using the computeCount parameter. If using cpuCoreCount then it is an error to specify computeModel to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy.
	ComputeModel *string `json:"computeModel,omitempty" tf:"compute_model,omitempty"`

	// (Updatable) Customer Contacts.
	CustomerContacts []CustomerContactsInitParameters `json:"customerContacts,omitempty" tf:"customer_contacts,omitempty"`

	// The database name. The name must begin with an alphabetic character and can contain a maximum of 14 alphanumeric characters. Special characters are not permitted. The database name must be unique in the tenancy. It is required in all cases except when creating a cross-region Autonomous Data Guard standby instance or a cross-region disaster recovery standby instance.
	DBName *string `json:"dbName,omitempty" tf:"db_name,omitempty"`

	// (Updatable) The list of database tools details.
	DBToolsDetails []DBToolsDetailsInitParameters `json:"dbToolsDetails,omitempty" tf:"db_tools_details,omitempty"`

	// (Updatable) A valid Oracle Database version for Autonomous Database.db_workload AJD and APEX are only supported for db_version 19c and above.
	DBVersion *string `json:"dbVersion,omitempty" tf:"db_version,omitempty"`

	// (Updatable) The Autonomous Database workload type. The following values are valid:
	DBWorkload *string `json:"dbWorkload,omitempty" tf:"db_workload,omitempty"`

	// (Updatable) Status of the Data Safe registration for this Autonomous Database. Could be REGISTERED or NOT_REGISTERED.
	DataSafeStatus *string `json:"dataSafeStatus,omitempty" tf:"data_safe_status,omitempty"`

	// (Updatable) The size, in gigabytes, of the data volume that will be created and attached to the database. This storage can later be scaled up if needed. The maximum storage value is determined by the infrastructure shape. See Characteristics of Infrastructure Shapes for shape details.
	DataStorageSizeInGb *float64 `json:"dataStorageSizeInGb,omitempty" tf:"data_storage_size_in_gb,omitempty"`

	// (Updatable) The size, in terabytes, of the data volume that will be created and attached to the database. This storage can later be scaled up if needed. For Autonomous Databases on dedicated Exadata infrastructure, the maximum storage value is determined by the infrastructure shape. See Characteristics of Infrastructure Shapes for shape details.  A full Exadata service is allocated when the Autonomous Database size is set to the upper limit (384 TB).
	DataStorageSizeInTbs *float64 `json:"dataStorageSizeInTbs,omitempty" tf:"data_storage_size_in_tbs,omitempty"`

	// (Updatable) The Oracle Database Edition that applies to the Autonomous databases. It can be set to ENTERPRISE_EDITION or STANDARD_EDITION.
	DatabaseEdition *string `json:"databaseEdition,omitempty" tf:"database_edition,omitempty"`

	// Status of Database Management for this Autonomous Database.
	DatabaseManagementStatus *string `json:"databaseManagementStatus,omitempty" tf:"database_management_status,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// Indicates the disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
	DisasterRecoveryType *string `json:"disasterRecoveryType,omitempty" tf:"disaster_recovery_type,omitempty"`

	// (Updatable) The user-friendly name for the Autonomous Database. The name does not have to be unique.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) The percentage of the System Global Area(SGA) assigned to In-Memory tables in Autonomous Database. This property is applicable only to Autonomous Databases on the Exadata Cloud@Customer platform.
	InMemoryPercentage *float64 `json:"inMemoryPercentage,omitempty" tf:"in_memory_percentage,omitempty"`

	// (Updatable) Indicates if the database-level access control is enabled. If disabled, database access is defined by the network security rules. If enabled, database access is restricted to the IP addresses defined by the rules specified with the whitelistedIps property. While specifying whitelistedIps rules is optional, if database-level access control is enabled and no rules are specified, the database will become inaccessible. The rules can be added later using the UpdateAutonomousDatabase API operation or edit option in console. When creating a database clone, the desired access control setting should be specified. By default, database-level access control will be disabled for the clone.
	IsAccessControlEnabled *bool `json:"isAccessControlEnabled,omitempty" tf:"is_access_control_enabled,omitempty"`

	// (Updatable) Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is TRUE.
	IsAutoScalingEnabled *bool `json:"isAutoScalingEnabled,omitempty" tf:"is_auto_scaling_enabled,omitempty"`

	// (Updatable) Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is FALSE.
	IsAutoScalingForStorageEnabled *bool `json:"isAutoScalingForStorageEnabled,omitempty" tf:"is_auto_scaling_for_storage_enabled,omitempty"`

	// (Updatable) Deprecated. Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
	IsDataGuardEnabled *bool `json:"isDataGuardEnabled,omitempty" tf:"is_data_guard_enabled,omitempty"`

	// True if the database is on dedicated Exadata infrastructure.
	IsDedicated *bool `json:"isDedicated,omitempty" tf:"is_dedicated,omitempty"`

	// (Updatable) Autonomous Database for Developers are fixed-shape Autonomous Databases that developers can use to build and test new applications. On Serverless, these are low-cost and billed per instance, on Dedicated and Cloud@Customer there is no additional cost to create Developer databases. Developer databases come with limited resources and is not intended for large-scale testing and production deployments. When you need more compute or storage resources, you may upgrade to a full paid production database.
	IsDevTier *bool `json:"isDevTier,omitempty" tf:"is_dev_tier,omitempty"`

	// (Updatable) Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled.
	IsFreeTier *bool `json:"isFreeTier,omitempty" tf:"is_free_tier,omitempty"`

	// (Updatable) Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. It takes boolean values. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
	IsLocalDataGuardEnabled *bool `json:"isLocalDataGuardEnabled,omitempty" tf:"is_local_data_guard_enabled,omitempty"`

	// (Updatable) Indicates whether the Autonomous Database requires mTLS connections.
	IsMtlsConnectionRequired *bool `json:"isMtlsConnectionRequired,omitempty" tf:"is_mtls_connection_required,omitempty"`

	// If set to TRUE, indicates that an Autonomous Database preview version is being provisioned, and that the preview version's terms of service have been accepted. Note that preview version software is only available for databases on Autonomous Database Serverless.
	IsPreviewVersionWithServiceTermsAccepted *bool `json:"isPreviewVersionWithServiceTermsAccepted,omitempty" tf:"is_preview_version_with_service_terms_accepted,omitempty"`

	// (Applicable when source=CLONE_TO_REFRESHABLE) (Updatable) True for creating a refreshable clone and False for detaching the clone from source Autonomous Database. Detaching is one time operation and clone becomes a regular Autonomous Database.
	IsRefreshableClone *bool `json:"isRefreshableClone,omitempty" tf:"is_refreshable_clone,omitempty"`

	// If true, 7 days worth of backups are replicated across regions for Cross-Region ADB or Backup-Based DR between Primary and Standby. If false, the backups taken on the Primary are not replicated to the Standby database.
	IsReplicateAutomaticBackups *bool `json:"isReplicateAutomaticBackups,omitempty" tf:"is_replicate_automatic_backups,omitempty"`

	// (Updatable) An optional property when enabled triggers the Shrinking of Autonomous Database once. To trigger Shrinking of ADB once again, this flag needs to be disabled and re-enabled again. It should not be passed during create database operation. It is only applicable on Serverless databases i.e. where is_dedicated is false.
	IsShrinkOnly *bool `json:"isShrinkOnly,omitempty" tf:"is_shrink_only,omitempty"`

	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// (Updatable) The Oracle license model that applies to the Oracle Autonomous Database. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Oracle Database service. Note that when provisioning an Autonomous Database on dedicated Exadata infrastructure, this attribute must be null. It is already set at the Autonomous Exadata Infrastructure level. When provisioning an [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) database, if a value is not specified, the system defaults the value to BRING_YOUR_OWN_LICENSE. Bring your own license (BYOL) also allows you to select the DB edition using the optional parameter.
	LicenseModel *string `json:"licenseModel,omitempty" tf:"license_model,omitempty"`

	// Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard
	LocalAdgAutoFailoverMaxDataLossLimit *float64 `json:"localAdgAutoFailoverMaxDataLossLimit,omitempty" tf:"local_adg_auto_failover_max_data_loss_limit,omitempty"`

	// Details for the long-term backup schedule.
	LongTermBackupSchedule []LongTermBackupScheduleInitParameters `json:"longTermBackupSchedule,omitempty" tf:"long_term_backup_schedule,omitempty"`

	// (Updatable) Deprecated. The number of Max OCPU cores to be made available to the autonomous database with auto scaling of cpu enabled.
	MaxCPUCoreCount *float64 `json:"maxCpuCoreCount,omitempty" tf:"max_cpu_core_count,omitempty"`

	// The character set for the Autonomous Database.  The default is AL32UTF8. Use List Autonomous Database Character Sets to list the allowed values for an Autonomous Database Serverless. For an Autonomous Database on dedicated Exadata infrastructure, the allowed values are: AL16UTF16 or UTF8.
	NcharacterSet *string `json:"ncharacterSet,omitempty" tf:"ncharacter_set,omitempty"`

	// (Updatable) The list of OCIDs for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see Security Rules. NsgIds restrictions:
	// +listType=set
	NsgIds []*string `json:"nsgIds,omitempty" tf:"nsg_ids,omitempty"`

	// (Updatable) The number of OCPU cores to be made available to the database.
	OcpuCount *float64 `json:"ocpuCount,omitempty" tf:"ocpu_count,omitempty"`

	// Indicates the Autonomous Database mode. The database can be opened in READ_ONLY or READ_WRITE mode.
	OpenMode *string `json:"openMode,omitempty" tf:"open_mode,omitempty"`

	// (Updatable) Status of Operations Insights for this Autonomous Database. Values supported are ENABLED and NOT_ENABLED
	OperationsInsightsStatus *string `json:"operationsInsightsStatus,omitempty" tf:"operations_insights_status,omitempty"`

	// The Autonomous Database permission level. Restricted mode allows access only by admin users.
	PermissionLevel *string `json:"permissionLevel,omitempty" tf:"permission_level,omitempty"`

	// The private endpoint Ip address for the resource.
	PrivateEndpointIP *string `json:"privateEndpointIp,omitempty" tf:"private_endpoint_ip,omitempty"`

	// (Updatable)  (Updatable) The resource's private endpoint label.
	PrivateEndpointLabel *string `json:"privateEndpointLabel,omitempty" tf:"private_endpoint_label,omitempty"`

	// (Applicable when source=CLONE_TO_REFRESHABLE) (Updatable) The refresh mode of the clone. AUTOMATIC indicates that the clone is automatically being refreshed with data from the source Autonomous Database.
	RefreshableMode *string `json:"refreshableMode,omitempty" tf:"refreshable_mode,omitempty"`

	// Indicates the cross-region disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
	RemoteDisasterRecoveryType *string `json:"remoteDisasterRecoveryType,omitempty" tf:"remote_disaster_recovery_type,omitempty"`

	// (Updatable) The unique identifier for leader autonomous database OCID OCID.
	ResourcePoolLeaderID *string `json:"resourcePoolLeaderId,omitempty" tf:"resource_pool_leader_id,omitempty"`

	// (Updatable) The configuration details for resource pool
	ResourcePoolSummary []ResourcePoolSummaryInitParameters `json:"resourcePoolSummary,omitempty" tf:"resource_pool_summary,omitempty"`

	// (Updatable) An optional property when flipped triggers rotation of KMS key. It is only applicable on dedicated databases i.e. where is_dedicated is true.
	RotateKeyTrigger *bool `json:"rotateKeyTrigger,omitempty" tf:"rotate_key_trigger,omitempty"`

	// (Updatable) The list of scheduled operations. Consists of values such as dayOfWeek, scheduledStartTime, scheduledStopTime.
	ScheduledOperations []ScheduledOperationsInitParameters `json:"scheduledOperations,omitempty" tf:"scheduled_operations,omitempty"`

	// (Updatable) The Oracle Cloud Infrastructure vault secret [/Content/General/Concepts/identifiers.htm]OCID.
	SecretID *string `json:"secretId,omitempty" tf:"secret_id,omitempty"`

	// (Updatable) The version of the vault secret. If no version is specified, the latest version will be used.
	SecretVersionNumber *float64 `json:"secretVersionNumber,omitempty" tf:"secret_version_number,omitempty"`

	ShrinkAdbTrigger *float64 `json:"shrinkAdbTrigger,omitempty" tf:"shrink_adb_trigger,omitempty"`

	// The source of the database:
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// The OCID of the source Autonomous Database that will be used to create a new standby database for the Data Guard association.
	SourceID *string `json:"sourceId,omitempty" tf:"source_id,omitempty"`

	// (Updatable) The client IP access control list (ACL). This feature is available for [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud@Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance. If arePrimaryWhitelistedIpsUsed is 'TRUE' then Autonomous Database uses this primary's IP access control list (ACL) for the disaster recovery peer called standbywhitelistedips.
	StandbyWhitelistedIps []*string `json:"standbyWhitelistedIps,omitempty" tf:"standby_whitelisted_ips,omitempty"`

	// The current state of the Autonomous Database.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (Updatable) The OCID of the subnet the resource is associated with. This the only parameter to configure private endpoint, VCN details are obtained from the subnet_id.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The OCID of the subscription with which resource needs to be associated with.
	// These subnets are used by the Oracle Clusterware private interconnect on the database instance. Specifying an overlapping subnet will cause the private interconnect to malfunction. This restriction applies to both the client subnet and the backup subnet.
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`

	// It is applicable only when is_local_data_guard_enabled is true. Could be set to PRIMARY or STANDBY. Default value is PRIMARY.
	SwitchoverTo *string `json:"switchoverTo,omitempty" tf:"switchover_to,omitempty"`

	// (Updatable) It is applicable only when dataguard_region_type and role are set, and is_dedicated is false. For Autonomous Database Serverless instances, Data Guard associations have designated primary and standby regions, and these region types do not change when the database changes roles. It takes the OCID of the remote peer to switchover to and the API is called from the remote region.
	SwitchoverToRemotePeerID *string `json:"switchoverToRemotePeerId,omitempty" tf:"switchover_to_remote_peer_id,omitempty"`

	// The the date and time that auto-refreshing will begin for an Autonomous Database refreshable clone. This value controls only the start time for the first refresh operation. Subsequent (ongoing) refresh operations have start times controlled by the value of the autoRefreshFrequencyInSeconds parameter.
	TimeOfAutoRefreshStart *string `json:"timeOfAutoRefreshStart,omitempty" tf:"time_of_auto_refresh_start,omitempty"`

	// (Applicable when source=BACKUP_FROM_TIMESTAMP) The timestamp specified for the point-in-time clone of the source Autonomous Database. The timestamp must be in the past.
	Timestamp *string `json:"timestamp,omitempty" tf:"timestamp,omitempty"`

	// (Applicable when source=BACKUP_FROM_TIMESTAMP) Clone from latest available backup timestamp.
	UseLatestAvailableBackupTimeStamp *bool `json:"useLatestAvailableBackupTimeStamp,omitempty" tf:"use_latest_available_backup_time_stamp,omitempty"`

	// The OCID of the Oracle Cloud Infrastructure vault.
	VaultID *string `json:"vaultId,omitempty" tf:"vault_id,omitempty"`

	// (Updatable) The client IP access control list (ACL). This feature is available for autonomous databases on shared Exadata infrastructure and on Exadata Cloud@Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
	// +listType=set
	WhitelistedIps []*string `json:"whitelistedIps,omitempty" tf:"whitelisted_ips,omitempty"`
}

type AutonomousDatabaseObservation struct {

	// The current amount of storage in use for user and system data, in terabytes (TB).
	ActualUsedDataStorageSizeInTbs *float64 `json:"actualUsedDataStorageSizeInTbs,omitempty" tf:"actual_used_data_storage_size_in_tbs,omitempty"`

	// The amount of storage currently allocated for the database tables and billed for, rounded up. When auto-scaling is not enabled, this value is equal to the dataStorageSizeInTBs value. You can compare this value to the actualUsedDataStorageSizeInTBs value to determine if a manual shrink operation is appropriate for your allocated storage.
	AllocatedStorageSizeInTbs *float64 `json:"allocatedStorageSizeInTbs,omitempty" tf:"allocated_storage_size_in_tbs,omitempty"`

	// Information about Oracle APEX Application Development.
	ApexDetails []ApexDetailsObservation `json:"apexDetails,omitempty" tf:"apex_details,omitempty"`

	// (Updatable) This field will be null if the Autonomous Database is not Data Guard enabled or Access Control is disabled. It's value would be TRUE if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses primary IP access control list (ACL) for standby. It's value would be FALSE if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses different IP access control list (ACL) for standby compared to primary.
	ArePrimaryWhitelistedIpsUsed *bool `json:"arePrimaryWhitelistedIpsUsed,omitempty" tf:"are_primary_whitelisted_ips_used,omitempty"`

	// (Applicable when source=CLONE_TO_REFRESHABLE) (Updatable) The frequency a refreshable clone is refreshed after auto-refresh is enabled. The minimum is 1 hour. The maximum is 7 days. The date and time that auto-refresh is enabled is controlled by the timeOfAutoRefreshStart parameter.
	AutoRefreshFrequencyInSeconds *float64 `json:"autoRefreshFrequencyInSeconds,omitempty" tf:"auto_refresh_frequency_in_seconds,omitempty"`

	// (Applicable when source=CLONE_TO_REFRESHABLE) (Updatable) The time, in seconds, the data of the refreshable clone lags the primary database at the point of refresh. The minimum is 0 minutes (0 mins means refresh to the latest available timestamp). The maximum is 7 days. The lag time increases after refreshing until the next data refresh happens.
	AutoRefreshPointLagInSeconds *float64 `json:"autoRefreshPointLagInSeconds,omitempty" tf:"auto_refresh_point_lag_in_seconds,omitempty"`

	// The Autonomous Container Database OCID.
	AutonomousContainerDatabaseID *string `json:"autonomousContainerDatabaseId,omitempty" tf:"autonomous_container_database_id,omitempty"`

	// The OCID of the source Autonomous Database Backup that you will clone to create a new Autonomous Database.
	AutonomousDatabaseBackupID *string `json:"autonomousDatabaseBackupId,omitempty" tf:"autonomous_database_backup_id,omitempty"`

	// The OCID of the source Autonomous Database that you will clone to create a new Autonomous Database.
	AutonomousDatabaseID *string `json:"autonomousDatabaseId,omitempty" tf:"autonomous_database_id,omitempty"`

	// The maintenance schedule type of the Autonomous Database Serverless instances. The EARLY maintenance schedule of this Autonomous Database follows a schedule that applies patches prior to the REGULAR schedule.The REGULAR maintenance schedule of this Autonomous Database follows the normal cycle.
	AutonomousMaintenanceScheduleType *string `json:"autonomousMaintenanceScheduleType,omitempty" tf:"autonomous_maintenance_schedule_type,omitempty"`

	// The availability domain where the Autonomous Database Serverless instance is located.
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain,omitempty"`

	// List of Oracle Database versions available for a database upgrade. If there are no version upgrades available, this list is empty.
	AvailableUpgradeVersions []*string `json:"availableUpgradeVersions,omitempty" tf:"available_upgrade_versions,omitempty"`

	// Autonomous Database configuration details for storing manual backups in the Object Storage service.
	BackupConfig []BackupConfigObservation `json:"backupConfig,omitempty" tf:"backup_config,omitempty"`

	// (Updatable) Retention period, in days, for backups.
	BackupRetentionPeriodInDays *float64 `json:"backupRetentionPeriodInDays,omitempty" tf:"backup_retention_period_in_days,omitempty"`

	ByolComputeCountLimit *float64 `json:"byolComputeCountLimit,omitempty" tf:"byol_compute_count_limit,omitempty"`

	// (Updatable) The number of CPU cores to be made available to the database. For Autonomous Databases on dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See Characteristics of Infrastructure Shapes for shape details.
	// Note: This parameter cannot be used with the ocpuCount parameter. This input is ignored for Always Free resources.
	CPUCoreCount *float64 `json:"cpuCoreCount,omitempty" tf:"cpu_core_count,omitempty"`

	// The character set for the autonomous database.  The default is AL32UTF8. Allowed values for an Autonomous Database on Serverless infrastructure as returned by List Autonomous Database Character Sets
	CharacterSet *string `json:"characterSet,omitempty" tf:"character_set,omitempty"`

	// The Autonomous Database clone type. This parameter is not used to create a refreshable clone type, and for refreshable clones one must use the (source=CLONE_TO_REFRESHABLE) parameter.
	CloneType *string `json:"cloneType,omitempty" tf:"clone_type,omitempty"`

	// The OCID of the cluster placement group of the Autonomous Serverless Database.
	ClusterPlacementGroupID *string `json:"clusterPlacementGroupId,omitempty" tf:"cluster_placement_group_id,omitempty"`

	// (Updatable) The OCID of the compartment of the Autonomous Database.
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) The compute amount available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure. For an Autonomous Database Serverless instance, the 'ECPU' compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the computeModel parameter. When using cpuCoreCount parameter, it is an error to specify computeCount to a non-null value. Providing computeModel and computeCount is the preferred method for both OCPU and ECPU.
	ComputeCount *float64 `json:"computeCount,omitempty" tf:"compute_count,omitempty"`

	// (Updatable) The compute model of the Autonomous Database. This is required if using the computeCount parameter. If using cpuCoreCount then it is an error to specify computeModel to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy.
	ComputeModel *string `json:"computeModel,omitempty" tf:"compute_model,omitempty"`

	// The connection string used to connect to the Autonomous Database. The username for the Service Console is ADMIN. Use the password you entered when creating the Autonomous Database for the password value.
	ConnectionStrings []ConnectionStringsObservation `json:"connectionStrings,omitempty" tf:"connection_strings,omitempty"`

	// The URLs for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN. Note that these URLs are provided by the console only for databases on dedicated Exadata infrastructure.  Example: {"sqlDevWebUrl": "https://<hostname>/ords...", "apexUrl", "https://<hostname>/ords..."}
	ConnectionUrls []ConnectionUrlsObservation `json:"connectionUrls,omitempty" tf:"connection_urls,omitempty"`

	// (Updatable) Customer Contacts.
	CustomerContacts []CustomerContactsObservation `json:"customerContacts,omitempty" tf:"customer_contacts,omitempty"`

	// The database name. The name must begin with an alphabetic character and can contain a maximum of 14 alphanumeric characters. Special characters are not permitted. The database name must be unique in the tenancy. It is required in all cases except when creating a cross-region Autonomous Data Guard standby instance or a cross-region disaster recovery standby instance.
	DBName *string `json:"dbName,omitempty" tf:"db_name,omitempty"`

	// (Updatable) The list of database tools details.
	DBToolsDetails []DBToolsDetailsObservation `json:"dbToolsDetails,omitempty" tf:"db_tools_details,omitempty"`

	// (Updatable) A valid Oracle Database version for Autonomous Database.db_workload AJD and APEX are only supported for db_version 19c and above.
	DBVersion *string `json:"dbVersion,omitempty" tf:"db_version,omitempty"`

	// (Updatable) The Autonomous Database workload type. The following values are valid:
	DBWorkload *string `json:"dbWorkload,omitempty" tf:"db_workload,omitempty"`

	// (Updatable) Status of the Data Safe registration for this Autonomous Database. Could be REGISTERED or NOT_REGISTERED.
	DataSafeStatus *string `json:"dataSafeStatus,omitempty" tf:"data_safe_status,omitempty"`

	// (Updatable) The size, in gigabytes, of the data volume that will be created and attached to the database. This storage can later be scaled up if needed. The maximum storage value is determined by the infrastructure shape. See Characteristics of Infrastructure Shapes for shape details.
	DataStorageSizeInGb *float64 `json:"dataStorageSizeInGb,omitempty" tf:"data_storage_size_in_gb,omitempty"`

	// (Updatable) The size, in terabytes, of the data volume that will be created and attached to the database. This storage can later be scaled up if needed. For Autonomous Databases on dedicated Exadata infrastructure, the maximum storage value is determined by the infrastructure shape. See Characteristics of Infrastructure Shapes for shape details.  A full Exadata service is allocated when the Autonomous Database size is set to the upper limit (384 TB).
	DataStorageSizeInTbs *float64 `json:"dataStorageSizeInTbs,omitempty" tf:"data_storage_size_in_tbs,omitempty"`

	// (Updatable) The Oracle Database Edition that applies to the Autonomous databases. It can be set to ENTERPRISE_EDITION or STANDARD_EDITION.
	DatabaseEdition *string `json:"databaseEdition,omitempty" tf:"database_edition,omitempty"`

	// Status of Database Management for this Autonomous Database.
	DatabaseManagementStatus *string `json:"databaseManagementStatus,omitempty" tf:"database_management_status,omitempty"`

	// Deprecated  The Autonomous Data Guard region type of the Autonomous Database. For Autonomous Database Serverless instances, Data Guard associations have designated primary (PRIMARY_DG_REGION) and standby (REMOTE_STANDBY_DG_REGION) regions, and these region types do not change when the database changes roles. The standby regions in Data Guard associations can be the same region designated as the primary region, or they can be remote regions. Certain database administrative operations may be available only in the primary region of the Data Guard association, and cannot be performed when the database using the "primary" role is operating in a remote Data Guard standby region.
	DataguardRegionType *string `json:"dataguardRegionType,omitempty" tf:"dataguard_region_type,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// Deprecated The disaster recovery (DR) region type of the Autonomous Database. For Serverless Autonomous Databases, DR associations have designated primary (PRIMARY) and standby (REMOTE) regions. These region types do not change when the database changes roles. The standby region in DR associations can be the same region as the primary region, or they can be in a remote regions. Some database administration operations may be available only in the primary region of the DR association, and cannot be performed when the database using the primary role is operating in a remote region.
	DisasterRecoveryRegionType *string `json:"disasterRecoveryRegionType,omitempty" tf:"disaster_recovery_region_type,omitempty"`

	// Indicates the disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
	DisasterRecoveryType *string `json:"disasterRecoveryType,omitempty" tf:"disaster_recovery_type,omitempty"`

	// (Updatable) The user-friendly name for the Autonomous Database. The name does not have to be unique.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Indicates the number of seconds of data loss for a Data Guard failover.
	FailedDataRecoveryInSeconds *float64 `json:"failedDataRecoveryInSeconds,omitempty" tf:"failed_data_recovery_in_seconds,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// The OCID of the Autonomous Database.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The area assigned to In-Memory tables in Autonomous Database.
	InMemoryAreaInGbs *float64 `json:"inMemoryAreaInGbs,omitempty" tf:"in_memory_area_in_gbs,omitempty"`

	// (Updatable) The percentage of the System Global Area(SGA) assigned to In-Memory tables in Autonomous Database. This property is applicable only to Autonomous Databases on the Exadata Cloud@Customer platform.
	InMemoryPercentage *float64 `json:"inMemoryPercentage,omitempty" tf:"in_memory_percentage,omitempty"`

	// The infrastructure type this resource belongs to.
	InfrastructureType *string `json:"infrastructureType,omitempty" tf:"infrastructure_type,omitempty"`

	// (Updatable) Indicates if the database-level access control is enabled. If disabled, database access is defined by the network security rules. If enabled, database access is restricted to the IP addresses defined by the rules specified with the whitelistedIps property. While specifying whitelistedIps rules is optional, if database-level access control is enabled and no rules are specified, the database will become inaccessible. The rules can be added later using the UpdateAutonomousDatabase API operation or edit option in console. When creating a database clone, the desired access control setting should be specified. By default, database-level access control will be disabled for the clone.
	IsAccessControlEnabled *bool `json:"isAccessControlEnabled,omitempty" tf:"is_access_control_enabled,omitempty"`

	// (Updatable) Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is TRUE.
	IsAutoScalingEnabled *bool `json:"isAutoScalingEnabled,omitempty" tf:"is_auto_scaling_enabled,omitempty"`

	// (Updatable) Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is FALSE.
	IsAutoScalingForStorageEnabled *bool `json:"isAutoScalingForStorageEnabled,omitempty" tf:"is_auto_scaling_for_storage_enabled,omitempty"`

	// (Updatable) Deprecated. Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
	IsDataGuardEnabled *bool `json:"isDataGuardEnabled,omitempty" tf:"is_data_guard_enabled,omitempty"`

	// True if the database is on dedicated Exadata infrastructure.
	IsDedicated *bool `json:"isDedicated,omitempty" tf:"is_dedicated,omitempty"`

	// (Updatable) Autonomous Database for Developers are fixed-shape Autonomous Databases that developers can use to build and test new applications. On Serverless, these are low-cost and billed per instance, on Dedicated and Cloud@Customer there is no additional cost to create Developer databases. Developer databases come with limited resources and is not intended for large-scale testing and production deployments. When you need more compute or storage resources, you may upgrade to a full paid production database.
	IsDevTier *bool `json:"isDevTier,omitempty" tf:"is_dev_tier,omitempty"`

	// (Updatable) Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled.
	IsFreeTier *bool `json:"isFreeTier,omitempty" tf:"is_free_tier,omitempty"`

	// (Updatable) Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. It takes boolean values. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
	IsLocalDataGuardEnabled *bool `json:"isLocalDataGuardEnabled,omitempty" tf:"is_local_data_guard_enabled,omitempty"`

	// (Updatable) Indicates whether the Autonomous Database requires mTLS connections.
	IsMtlsConnectionRequired *bool `json:"isMtlsConnectionRequired,omitempty" tf:"is_mtls_connection_required,omitempty"`

	// Indicates if the Autonomous Database version is a preview version.
	IsPreview *bool `json:"isPreview,omitempty" tf:"is_preview,omitempty"`

	// If set to TRUE, indicates that an Autonomous Database preview version is being provisioned, and that the preview version's terms of service have been accepted. Note that preview version software is only available for databases on Autonomous Database Serverless.
	IsPreviewVersionWithServiceTermsAccepted *bool `json:"isPreviewVersionWithServiceTermsAccepted,omitempty" tf:"is_preview_version_with_service_terms_accepted,omitempty"`

	// Indicates if the refreshable clone can be reconnected to its source database.
	IsReconnectCloneEnabled *bool `json:"isReconnectCloneEnabled,omitempty" tf:"is_reconnect_clone_enabled,omitempty"`

	// (Applicable when source=CLONE_TO_REFRESHABLE) (Updatable) True for creating a refreshable clone and False for detaching the clone from source Autonomous Database. Detaching is one time operation and clone becomes a regular Autonomous Database.
	IsRefreshableClone *bool `json:"isRefreshableClone,omitempty" tf:"is_refreshable_clone,omitempty"`

	// Indicates whether the Autonomous Database has Cross Region Data Guard enabled. It takes boolean values. Not applicable to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
	IsRemoteDataGuardEnabled *bool `json:"isRemoteDataGuardEnabled,omitempty" tf:"is_remote_data_guard_enabled,omitempty"`

	// If true, 7 days worth of backups are replicated across regions for Cross-Region ADB or Backup-Based DR between Primary and Standby. If false, the backups taken on the Primary are not replicated to the Standby database.
	IsReplicateAutomaticBackups *bool `json:"isReplicateAutomaticBackups,omitempty" tf:"is_replicate_automatic_backups,omitempty"`

	// (Updatable) An optional property when enabled triggers the Shrinking of Autonomous Database once. To trigger Shrinking of ADB once again, this flag needs to be disabled and re-enabled again. It should not be passed during create database operation. It is only applicable on Serverless databases i.e. where is_dedicated is false.
	IsShrinkOnly *bool `json:"isShrinkOnly,omitempty" tf:"is_shrink_only,omitempty"`

	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// KMS key lifecycle details.
	KMSKeyLifecycleDetails *string `json:"kmsKeyLifecycleDetails,omitempty" tf:"kms_key_lifecycle_details,omitempty"`

	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
	KMSKeyVersionID *string `json:"kmsKeyVersionId,omitempty" tf:"kms_key_version_id,omitempty"`

	// Key History Entry.
	KeyHistoryEntry []KeyHistoryEntryObservation `json:"keyHistoryEntry,omitempty" tf:"key_history_entry,omitempty"`

	// The OCID of the key store of Oracle Vault. This is used in Autonomous Databases on Serverless instances and dedicated Exadata infrastructure.
	KeyStoreID *string `json:"keyStoreId,omitempty" tf:"key_store_id,omitempty"`

	// The wallet name for Oracle Key Vault.
	KeyStoreWalletName *string `json:"keyStoreWalletName,omitempty" tf:"key_store_wallet_name,omitempty"`

	// (Updatable) The Oracle license model that applies to the Oracle Autonomous Database. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Oracle Database service. Note that when provisioning an Autonomous Database on dedicated Exadata infrastructure, this attribute must be null. It is already set at the Autonomous Exadata Infrastructure level. When provisioning an [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) database, if a value is not specified, the system defaults the value to BRING_YOUR_OWN_LICENSE. Bring your own license (BYOL) also allows you to select the DB edition using the optional parameter.
	LicenseModel *string `json:"licenseModel,omitempty" tf:"license_model,omitempty"`

	// Information about the current lifecycle state.
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details,omitempty"`

	// Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard
	LocalAdgAutoFailoverMaxDataLossLimit *float64 `json:"localAdgAutoFailoverMaxDataLossLimit,omitempty" tf:"local_adg_auto_failover_max_data_loss_limit,omitempty"`

	// Indicates the local disaster recovery (DR) type of the Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
	LocalDisasterRecoveryType *string `json:"localDisasterRecoveryType,omitempty" tf:"local_disaster_recovery_type,omitempty"`

	// Autonomous Data Guard standby database details.
	LocalStandbyDB []LocalStandbyDBObservation `json:"localStandbyDb,omitempty" tf:"local_standby_db,omitempty"`

	// Details for the long-term backup schedule.
	LongTermBackupSchedule []LongTermBackupScheduleObservation `json:"longTermBackupSchedule,omitempty" tf:"long_term_backup_schedule,omitempty"`

	// (Updatable) Deprecated. The number of Max OCPU cores to be made available to the autonomous database with auto scaling of cpu enabled.
	MaxCPUCoreCount *float64 `json:"maxCpuCoreCount,omitempty" tf:"max_cpu_core_count,omitempty"`

	// The amount of memory (in GBs) enabled per OCPU or ECPU. See Compute Models in Autonomous Database on Dedicated Exadata Infrastructure for more details. This parameter is not used for Autonomous database Serverless.
	MemoryPerOracleComputeUnitInGbs *float64 `json:"memoryPerOracleComputeUnitInGbs,omitempty" tf:"memory_per_oracle_compute_unit_in_gbs,omitempty"`

	// The character set for the Autonomous Database.  The default is AL32UTF8. Use List Autonomous Database Character Sets to list the allowed values for an Autonomous Database Serverless. For an Autonomous Database on dedicated Exadata infrastructure, the allowed values are: AL16UTF16 or UTF8.
	NcharacterSet *string `json:"ncharacterSet,omitempty" tf:"ncharacter_set,omitempty"`

	// Enabling SHARED server architecture enables a database server to allow many client processes to share very few server processes, thereby increasing the number of supported users.
	NetServicesArchitecture *string `json:"netServicesArchitecture,omitempty" tf:"net_services_architecture,omitempty"`

	// The date and time when the next long-term backup would be created.
	NextLongTermBackupTimeStamp *string `json:"nextLongTermBackupTimeStamp,omitempty" tf:"next_long_term_backup_time_stamp,omitempty"`

	// (Updatable) The list of OCIDs for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see Security Rules. NsgIds restrictions:
	// +listType=set
	NsgIds []*string `json:"nsgIds,omitempty" tf:"nsg_ids,omitempty"`

	// (Updatable) The number of OCPU cores to be made available to the database.
	OcpuCount *float64 `json:"ocpuCount,omitempty" tf:"ocpu_count,omitempty"`

	// Indicates the Autonomous Database mode. The database can be opened in READ_ONLY or READ_WRITE mode.
	OpenMode *string `json:"openMode,omitempty" tf:"open_mode,omitempty"`

	// (Updatable) Status of Operations Insights for this Autonomous Database. Values supported are ENABLED and NOT_ENABLED
	OperationsInsightsStatus *string `json:"operationsInsightsStatus,omitempty" tf:"operations_insights_status,omitempty"`

	// The list of OCIDs of standby databases located in Autonomous Data Guard remote regions that are associated with the source database. Note that for Autonomous Database Serverless instances, standby databases located in the same region as the source primary database do not have OCIDs.
	PeerDBIds []*string `json:"peerDbIds,omitempty" tf:"peer_db_ids,omitempty"`

	// The Autonomous Database permission level. Restricted mode allows access only by admin users.
	PermissionLevel *string `json:"permissionLevel,omitempty" tf:"permission_level,omitempty"`

	// The private endpoint for the resource. This parameter is not used in Autonomous Databases using Serverless infrastructure and Exadata Cloud@Customer infrastructure.
	PrivateEndpoint *string `json:"privateEndpoint,omitempty" tf:"private_endpoint,omitempty"`

	// The private endpoint Ip address for the resource.
	PrivateEndpointIP *string `json:"privateEndpointIp,omitempty" tf:"private_endpoint_ip,omitempty"`

	// (Updatable)  (Updatable) The resource's private endpoint label.
	PrivateEndpointLabel *string `json:"privateEndpointLabel,omitempty" tf:"private_endpoint_label,omitempty"`

	// An array of CPU values that an Autonomous Database can be scaled to.
	ProvisionableCpus []*float64 `json:"provisionableCpus,omitempty" tf:"provisionable_cpus,omitempty"`

	// The Public URLs of Private Endpoint database for accessing Oracle Application Express (APEX) and SQL Developer Web with a browser from a Compute instance within your VCN or that has a direct connection to your VCN.
	PublicConnectionUrls []PublicConnectionUrlsObservation `json:"publicConnectionUrls,omitempty" tf:"public_connection_urls,omitempty"`

	// The public endpoint for the private endpoint enabled resource.
	PublicEndpoint *string `json:"publicEndpoint,omitempty" tf:"public_endpoint,omitempty"`

	// (Applicable when source=CLONE_TO_REFRESHABLE) (Updatable) The refresh mode of the clone. AUTOMATIC indicates that the clone is automatically being refreshed with data from the source Autonomous Database.
	RefreshableMode *string `json:"refreshableMode,omitempty" tf:"refreshable_mode,omitempty"`

	// The refresh status of the clone. REFRESHING indicates that the clone is currently being refreshed with data from the source Autonomous Database.
	RefreshableStatus *string `json:"refreshableStatus,omitempty" tf:"refreshable_status,omitempty"`

	// Configurations of a Disaster Recovery.
	RemoteDisasterRecoveryConfiguration []RemoteDisasterRecoveryConfigurationObservation `json:"remoteDisasterRecoveryConfiguration,omitempty" tf:"remote_disaster_recovery_configuration,omitempty"`

	// Indicates the cross-region disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
	RemoteDisasterRecoveryType *string `json:"remoteDisasterRecoveryType,omitempty" tf:"remote_disaster_recovery_type,omitempty"`

	// (Updatable) The unique identifier for leader autonomous database OCID OCID.
	ResourcePoolLeaderID *string `json:"resourcePoolLeaderId,omitempty" tf:"resource_pool_leader_id,omitempty"`

	// (Updatable) The configuration details for resource pool
	ResourcePoolSummary []ResourcePoolSummaryObservation `json:"resourcePoolSummary,omitempty" tf:"resource_pool_summary,omitempty"`

	// The Data Guard role of the Autonomous Container Database or Autonomous Database, if Autonomous Data Guard is enabled.
	Role *string `json:"role,omitempty" tf:"role,omitempty"`

	// (Updatable) An optional property when flipped triggers rotation of KMS key. It is only applicable on dedicated databases i.e. where is_dedicated is true.
	RotateKeyTrigger *bool `json:"rotateKeyTrigger,omitempty" tf:"rotate_key_trigger,omitempty"`

	// (Updatable) The list of scheduled operations. Consists of values such as dayOfWeek, scheduledStartTime, scheduledStopTime.
	ScheduledOperations []ScheduledOperationsObservation `json:"scheduledOperations,omitempty" tf:"scheduled_operations,omitempty"`

	// (Updatable) The Oracle Cloud Infrastructure vault secret [/Content/General/Concepts/identifiers.htm]OCID.
	SecretID *string `json:"secretId,omitempty" tf:"secret_id,omitempty"`

	// (Updatable) The version of the vault secret. If no version is specified, the latest version will be used.
	SecretVersionNumber *float64 `json:"secretVersionNumber,omitempty" tf:"secret_version_number,omitempty"`

	// The URL of the Service Console for the Autonomous Database.
	ServiceConsoleURL *string `json:"serviceConsoleUrl,omitempty" tf:"service_console_url,omitempty"`

	ShrinkAdbTrigger *float64 `json:"shrinkAdbTrigger,omitempty" tf:"shrink_adb_trigger,omitempty"`

	// The source of the database:
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// The OCID of the source Autonomous Database that will be used to create a new standby database for the Data Guard association.
	SourceID *string `json:"sourceId,omitempty" tf:"source_id,omitempty"`

	// Deprecated Autonomous Data Guard standby database details.
	StandbyDB []StandbyDBObservation `json:"standbyDb,omitempty" tf:"standby_db,omitempty"`

	// (Updatable) The client IP access control list (ACL). This feature is available for [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud@Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance. If arePrimaryWhitelistedIpsUsed is 'TRUE' then Autonomous Database uses this primary's IP access control list (ACL) for the disaster recovery peer called standbywhitelistedips.
	StandbyWhitelistedIps []*string `json:"standbyWhitelistedIps,omitempty" tf:"standby_whitelisted_ips,omitempty"`

	// The current state of the Autonomous Database.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (Updatable) The OCID of the subnet the resource is associated with. This the only parameter to configure private endpoint, VCN details are obtained from the subnet_id.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The OCID of the subscription with which resource needs to be associated with.
	// These subnets are used by the Oracle Clusterware private interconnect on the database instance. Specifying an overlapping subnet will cause the private interconnect to malfunction. This restriction applies to both the client subnet and the backup subnet.
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`

	// The list of regions that support the creation of an Autonomous Database clone or an Autonomous Data Guard standby database.
	SupportedRegionsToCloneTo []*string `json:"supportedRegionsToCloneTo,omitempty" tf:"supported_regions_to_clone_to,omitempty"`

	// It is applicable only when is_local_data_guard_enabled is true. Could be set to PRIMARY or STANDBY. Default value is PRIMARY.
	SwitchoverTo *string `json:"switchoverTo,omitempty" tf:"switchover_to,omitempty"`

	// (Updatable) It is applicable only when dataguard_region_type and role are set, and is_dedicated is false. For Autonomous Database Serverless instances, Data Guard associations have designated primary and standby regions, and these region types do not change when the database changes roles. It takes the OCID of the remote peer to switchover to and the API is called from the remote region.
	SwitchoverToRemotePeerID *string `json:"switchoverToRemotePeerId,omitempty" tf:"switchover_to_remote_peer_id,omitempty"`

	// System tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.
	// +mapType=granular
	SystemTags map[string]*string `json:"systemTags,omitempty" tf:"system_tags,omitempty"`

	// The date and time the Autonomous Database was created.
	TimeCreated *string `json:"timeCreated,omitempty" tf:"time_created,omitempty"`

	// The date and time the Autonomous Data Guard role was switched for the standby Autonomous Database.
	TimeDataGuardRoleChanged *string `json:"timeDataGuardRoleChanged,omitempty" tf:"time_data_guard_role_changed,omitempty"`

	// The date and time the Always Free database will be automatically deleted because of inactivity. If the database is in the STOPPED state and without activity until this time, it will be deleted.
	TimeDeletionOfFreeAutonomousDatabase *string `json:"timeDeletionOfFreeAutonomousDatabase,omitempty" tf:"time_deletion_of_free_autonomous_database,omitempty"`

	// The date and time the Disaster Recovery role was switched for the standby Autonomous Database.
	TimeDisasterRecoveryRoleChanged *string `json:"timeDisasterRecoveryRoleChanged,omitempty" tf:"time_disaster_recovery_role_changed,omitempty"`

	// The date and time that Autonomous Data Guard was enabled for an Autonomous Database where the standby was provisioned in the same region as the primary database.
	TimeLocalDataGuardEnabled *string `json:"timeLocalDataGuardEnabled,omitempty" tf:"time_local_data_guard_enabled,omitempty"`

	// The date and time when maintenance will begin.
	TimeMaintenanceBegin *string `json:"timeMaintenanceBegin,omitempty" tf:"time_maintenance_begin,omitempty"`

	// The date and time when maintenance will end.
	TimeMaintenanceEnd *string `json:"timeMaintenanceEnd,omitempty" tf:"time_maintenance_end,omitempty"`

	// The the date and time that auto-refreshing will begin for an Autonomous Database refreshable clone. This value controls only the start time for the first refresh operation. Subsequent (ongoing) refresh operations have start times controlled by the value of the autoRefreshFrequencyInSeconds parameter.
	TimeOfAutoRefreshStart *string `json:"timeOfAutoRefreshStart,omitempty" tf:"time_of_auto_refresh_start,omitempty"`

	TimeOfJoiningResourcePool *string `json:"timeOfJoiningResourcePool,omitempty" tf:"time_of_joining_resource_pool,omitempty"`

	// The timestamp of the last failover operation.
	TimeOfLastFailover *string `json:"timeOfLastFailover,omitempty" tf:"time_of_last_failover,omitempty"`

	// The date and time when last refresh happened.
	TimeOfLastRefresh *string `json:"timeOfLastRefresh,omitempty" tf:"time_of_last_refresh,omitempty"`

	// The refresh point timestamp (UTC). The refresh point is the time to which the database was most recently refreshed. Data created after the refresh point is not included in the refresh.
	TimeOfLastRefreshPoint *string `json:"timeOfLastRefreshPoint,omitempty" tf:"time_of_last_refresh_point,omitempty"`

	// The timestamp of the last switchover operation for the Autonomous Database.
	TimeOfLastSwitchover *string `json:"timeOfLastSwitchover,omitempty" tf:"time_of_last_switchover,omitempty"`

	// The date and time of next refresh.
	TimeOfNextRefresh *string `json:"timeOfNextRefresh,omitempty" tf:"time_of_next_refresh,omitempty"`

	// The date and time the Always Free database will be stopped because of inactivity. If this time is reached without any database activity, the database will automatically be put into the STOPPED state.
	TimeReclamationOfFreeAutonomousDatabase *string `json:"timeReclamationOfFreeAutonomousDatabase,omitempty" tf:"time_reclamation_of_free_autonomous_database,omitempty"`

	// The time and date as an RFC3339 formatted string, e.g., 2022-01-01T12:00:00.000Z, to set the limit for a refreshable clone to be reconnected to its source database.
	TimeUntilReconnectCloneEnabled *string `json:"timeUntilReconnectCloneEnabled,omitempty" tf:"time_until_reconnect_clone_enabled,omitempty"`

	// (Applicable when source=BACKUP_FROM_TIMESTAMP) The timestamp specified for the point-in-time clone of the source Autonomous Database. The timestamp must be in the past.
	Timestamp *string `json:"timestamp,omitempty" tf:"timestamp,omitempty"`

	// The backup storage to the database.
	TotalBackupStorageSizeInGbs *float64 `json:"totalBackupStorageSizeInGbs,omitempty" tf:"total_backup_storage_size_in_gbs,omitempty"`

	// (Applicable when source=BACKUP_FROM_TIMESTAMP) Clone from latest available backup timestamp.
	UseLatestAvailableBackupTimeStamp *bool `json:"useLatestAvailableBackupTimeStamp,omitempty" tf:"use_latest_available_backup_time_stamp,omitempty"`

	// The storage space consumed by Autonomous Database in GBs.
	UsedDataStorageSizeInGbs *float64 `json:"usedDataStorageSizeInGbs,omitempty" tf:"used_data_storage_size_in_gbs,omitempty"`

	// The amount of storage that has been used, in terabytes.
	UsedDataStorageSizeInTbs *float64 `json:"usedDataStorageSizeInTbs,omitempty" tf:"used_data_storage_size_in_tbs,omitempty"`

	// The OCID of the Oracle Cloud Infrastructure vault.
	VaultID *string `json:"vaultId,omitempty" tf:"vault_id,omitempty"`

	// (Updatable) The client IP access control list (ACL). This feature is available for autonomous databases on shared Exadata infrastructure and on Exadata Cloud@Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
	// +listType=set
	WhitelistedIps []*string `json:"whitelistedIps,omitempty" tf:"whitelisted_ips,omitempty"`
}

type AutonomousDatabaseParameters struct {

	// (Updatable) The password must be between 12 and 30 characters long, and must contain at least 1 uppercase, 1 lowercase, and 1 numeric character. It cannot contain the double quote symbol (") or the username "admin", regardless of casing. The password is mandatory if source value is "BACKUP_FROM_ID", "BACKUP_FROM_TIMESTAMP", "DATABASE" or "NONE".
	// +kubebuilder:validation:Optional
	AdminPasswordSecretRef *v1.SecretKeySelector `json:"adminPasswordSecretRef,omitempty" tf:"-"`

	// (Updatable) This field will be null if the Autonomous Database is not Data Guard enabled or Access Control is disabled. It's value would be TRUE if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses primary IP access control list (ACL) for standby. It's value would be FALSE if Autonomous Database is Data Guard enabled and Access Control is enabled and if the Autonomous Database uses different IP access control list (ACL) for standby compared to primary.
	// +kubebuilder:validation:Optional
	ArePrimaryWhitelistedIpsUsed *bool `json:"arePrimaryWhitelistedIpsUsed,omitempty" tf:"are_primary_whitelisted_ips_used,omitempty"`

	// (Applicable when source=CLONE_TO_REFRESHABLE) (Updatable) The frequency a refreshable clone is refreshed after auto-refresh is enabled. The minimum is 1 hour. The maximum is 7 days. The date and time that auto-refresh is enabled is controlled by the timeOfAutoRefreshStart parameter.
	// +kubebuilder:validation:Optional
	AutoRefreshFrequencyInSeconds *float64 `json:"autoRefreshFrequencyInSeconds,omitempty" tf:"auto_refresh_frequency_in_seconds,omitempty"`

	// (Applicable when source=CLONE_TO_REFRESHABLE) (Updatable) The time, in seconds, the data of the refreshable clone lags the primary database at the point of refresh. The minimum is 0 minutes (0 mins means refresh to the latest available timestamp). The maximum is 7 days. The lag time increases after refreshing until the next data refresh happens.
	// +kubebuilder:validation:Optional
	AutoRefreshPointLagInSeconds *float64 `json:"autoRefreshPointLagInSeconds,omitempty" tf:"auto_refresh_point_lag_in_seconds,omitempty"`

	// The Autonomous Container Database OCID.
	// +kubebuilder:validation:Optional
	AutonomousContainerDatabaseID *string `json:"autonomousContainerDatabaseId,omitempty" tf:"autonomous_container_database_id,omitempty"`

	// The OCID of the source Autonomous Database Backup that you will clone to create a new Autonomous Database.
	// +kubebuilder:validation:Optional
	AutonomousDatabaseBackupID *string `json:"autonomousDatabaseBackupId,omitempty" tf:"autonomous_database_backup_id,omitempty"`

	// The OCID of the source Autonomous Database that you will clone to create a new Autonomous Database.
	// +kubebuilder:validation:Optional
	AutonomousDatabaseID *string `json:"autonomousDatabaseId,omitempty" tf:"autonomous_database_id,omitempty"`

	// The maintenance schedule type of the Autonomous Database Serverless instances. The EARLY maintenance schedule of this Autonomous Database follows a schedule that applies patches prior to the REGULAR schedule.The REGULAR maintenance schedule of this Autonomous Database follows the normal cycle.
	// +kubebuilder:validation:Optional
	AutonomousMaintenanceScheduleType *string `json:"autonomousMaintenanceScheduleType,omitempty" tf:"autonomous_maintenance_schedule_type,omitempty"`

	// (Updatable) Retention period, in days, for backups.
	// +kubebuilder:validation:Optional
	BackupRetentionPeriodInDays *float64 `json:"backupRetentionPeriodInDays,omitempty" tf:"backup_retention_period_in_days,omitempty"`

	// +kubebuilder:validation:Optional
	ByolComputeCountLimit *float64 `json:"byolComputeCountLimit,omitempty" tf:"byol_compute_count_limit,omitempty"`

	// (Updatable) The number of CPU cores to be made available to the database. For Autonomous Databases on dedicated Exadata infrastructure, the maximum number of cores is determined by the infrastructure shape. See Characteristics of Infrastructure Shapes for shape details.
	// Note: This parameter cannot be used with the ocpuCount parameter. This input is ignored for Always Free resources.
	// +kubebuilder:validation:Optional
	CPUCoreCount *float64 `json:"cpuCoreCount,omitempty" tf:"cpu_core_count,omitempty"`

	// The character set for the autonomous database.  The default is AL32UTF8. Allowed values for an Autonomous Database on Serverless infrastructure as returned by List Autonomous Database Character Sets
	// +kubebuilder:validation:Optional
	CharacterSet *string `json:"characterSet,omitempty" tf:"character_set,omitempty"`

	// The Autonomous Database clone type. This parameter is not used to create a refreshable clone type, and for refreshable clones one must use the (source=CLONE_TO_REFRESHABLE) parameter.
	// +kubebuilder:validation:Optional
	CloneType *string `json:"cloneType,omitempty" tf:"clone_type,omitempty"`

	// (Updatable) The OCID of the compartment of the Autonomous Database.
	// +kubebuilder:validation:Optional
	CompartmentID *string `json:"compartmentId,omitempty" tf:"compartment_id,omitempty"`

	// (Updatable) The compute amount available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure. For an Autonomous Database Serverless instance, the 'ECPU' compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the computeModel parameter. When using cpuCoreCount parameter, it is an error to specify computeCount to a non-null value. Providing computeModel and computeCount is the preferred method for both OCPU and ECPU.
	// +kubebuilder:validation:Optional
	ComputeCount *float64 `json:"computeCount,omitempty" tf:"compute_count,omitempty"`

	// (Updatable) The compute model of the Autonomous Database. This is required if using the computeCount parameter. If using cpuCoreCount then it is an error to specify computeModel to a non-null value. ECPU compute model is the recommended model and OCPU compute model is legacy.
	// +kubebuilder:validation:Optional
	ComputeModel *string `json:"computeModel,omitempty" tf:"compute_model,omitempty"`

	// (Updatable) Customer Contacts.
	// +kubebuilder:validation:Optional
	CustomerContacts []CustomerContactsParameters `json:"customerContacts,omitempty" tf:"customer_contacts,omitempty"`

	// The database name. The name must begin with an alphabetic character and can contain a maximum of 14 alphanumeric characters. Special characters are not permitted. The database name must be unique in the tenancy. It is required in all cases except when creating a cross-region Autonomous Data Guard standby instance or a cross-region disaster recovery standby instance.
	// +kubebuilder:validation:Optional
	DBName *string `json:"dbName,omitempty" tf:"db_name,omitempty"`

	// (Updatable) The list of database tools details.
	// +kubebuilder:validation:Optional
	DBToolsDetails []DBToolsDetailsParameters `json:"dbToolsDetails,omitempty" tf:"db_tools_details,omitempty"`

	// (Updatable) A valid Oracle Database version for Autonomous Database.db_workload AJD and APEX are only supported for db_version 19c and above.
	// +kubebuilder:validation:Optional
	DBVersion *string `json:"dbVersion,omitempty" tf:"db_version,omitempty"`

	// (Updatable) The Autonomous Database workload type. The following values are valid:
	// +kubebuilder:validation:Optional
	DBWorkload *string `json:"dbWorkload,omitempty" tf:"db_workload,omitempty"`

	// (Updatable) Status of the Data Safe registration for this Autonomous Database. Could be REGISTERED or NOT_REGISTERED.
	// +kubebuilder:validation:Optional
	DataSafeStatus *string `json:"dataSafeStatus,omitempty" tf:"data_safe_status,omitempty"`

	// (Updatable) The size, in gigabytes, of the data volume that will be created and attached to the database. This storage can later be scaled up if needed. The maximum storage value is determined by the infrastructure shape. See Characteristics of Infrastructure Shapes for shape details.
	// +kubebuilder:validation:Optional
	DataStorageSizeInGb *float64 `json:"dataStorageSizeInGb,omitempty" tf:"data_storage_size_in_gb,omitempty"`

	// (Updatable) The size, in terabytes, of the data volume that will be created and attached to the database. This storage can later be scaled up if needed. For Autonomous Databases on dedicated Exadata infrastructure, the maximum storage value is determined by the infrastructure shape. See Characteristics of Infrastructure Shapes for shape details.  A full Exadata service is allocated when the Autonomous Database size is set to the upper limit (384 TB).
	// +kubebuilder:validation:Optional
	DataStorageSizeInTbs *float64 `json:"dataStorageSizeInTbs,omitempty" tf:"data_storage_size_in_tbs,omitempty"`

	// (Updatable) The Oracle Database Edition that applies to the Autonomous databases. It can be set to ENTERPRISE_EDITION or STANDARD_EDITION.
	// +kubebuilder:validation:Optional
	DatabaseEdition *string `json:"databaseEdition,omitempty" tf:"database_edition,omitempty"`

	// Status of Database Management for this Autonomous Database.
	// +kubebuilder:validation:Optional
	DatabaseManagementStatus *string `json:"databaseManagementStatus,omitempty" tf:"database_management_status,omitempty"`

	// (Updatable) Defined tags for this resource. Each key is predefined and scoped to a namespace. For more information, see Resource Tags.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	DefinedTags map[string]*string `json:"definedTags,omitempty" tf:"defined_tags,omitempty"`

	// Indicates the disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
	// +kubebuilder:validation:Optional
	DisasterRecoveryType *string `json:"disasterRecoveryType,omitempty" tf:"disaster_recovery_type,omitempty"`

	// (Updatable) The user-friendly name for the Autonomous Database. The name does not have to be unique.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// (Updatable) Free-form tags for this resource. Each tag is a simple key-value pair with no predefined name, type, or namespace. For more information, see Resource Tags.  Example: {"Department": "Finance"}
	// +kubebuilder:validation:Optional
	// +mapType=granular
	FreeformTags map[string]*string `json:"freeformTags,omitempty" tf:"freeform_tags,omitempty"`

	// (Updatable) The percentage of the System Global Area(SGA) assigned to In-Memory tables in Autonomous Database. This property is applicable only to Autonomous Databases on the Exadata Cloud@Customer platform.
	// +kubebuilder:validation:Optional
	InMemoryPercentage *float64 `json:"inMemoryPercentage,omitempty" tf:"in_memory_percentage,omitempty"`

	// (Updatable) Indicates if the database-level access control is enabled. If disabled, database access is defined by the network security rules. If enabled, database access is restricted to the IP addresses defined by the rules specified with the whitelistedIps property. While specifying whitelistedIps rules is optional, if database-level access control is enabled and no rules are specified, the database will become inaccessible. The rules can be added later using the UpdateAutonomousDatabase API operation or edit option in console. When creating a database clone, the desired access control setting should be specified. By default, database-level access control will be disabled for the clone.
	// +kubebuilder:validation:Optional
	IsAccessControlEnabled *bool `json:"isAccessControlEnabled,omitempty" tf:"is_access_control_enabled,omitempty"`

	// (Updatable) Indicates if auto scaling is enabled for the Autonomous Database CPU core count. The default value is TRUE.
	// +kubebuilder:validation:Optional
	IsAutoScalingEnabled *bool `json:"isAutoScalingEnabled,omitempty" tf:"is_auto_scaling_enabled,omitempty"`

	// (Updatable) Indicates if auto scaling is enabled for the Autonomous Database storage. The default value is FALSE.
	// +kubebuilder:validation:Optional
	IsAutoScalingForStorageEnabled *bool `json:"isAutoScalingForStorageEnabled,omitempty" tf:"is_auto_scaling_for_storage_enabled,omitempty"`

	// (Updatable) Deprecated. Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
	// +kubebuilder:validation:Optional
	IsDataGuardEnabled *bool `json:"isDataGuardEnabled,omitempty" tf:"is_data_guard_enabled,omitempty"`

	// True if the database is on dedicated Exadata infrastructure.
	// +kubebuilder:validation:Optional
	IsDedicated *bool `json:"isDedicated,omitempty" tf:"is_dedicated,omitempty"`

	// (Updatable) Autonomous Database for Developers are fixed-shape Autonomous Databases that developers can use to build and test new applications. On Serverless, these are low-cost and billed per instance, on Dedicated and Cloud@Customer there is no additional cost to create Developer databases. Developer databases come with limited resources and is not intended for large-scale testing and production deployments. When you need more compute or storage resources, you may upgrade to a full paid production database.
	// +kubebuilder:validation:Optional
	IsDevTier *bool `json:"isDevTier,omitempty" tf:"is_dev_tier,omitempty"`

	// (Updatable) Indicates if this is an Always Free resource. The default value is false. Note that Always Free Autonomous Databases have 1 CPU and 20GB of memory. For Always Free databases, memory and CPU cannot be scaled.
	// +kubebuilder:validation:Optional
	IsFreeTier *bool `json:"isFreeTier,omitempty" tf:"is_free_tier,omitempty"`

	// (Updatable) Indicates whether the Autonomous Database has local (in-region) Data Guard enabled. It takes boolean values. Not applicable to cross-region Autonomous Data Guard associations, or to Autonomous Databases using dedicated Exadata infrastructure or Exadata Cloud@Customer infrastructure.
	// +kubebuilder:validation:Optional
	IsLocalDataGuardEnabled *bool `json:"isLocalDataGuardEnabled,omitempty" tf:"is_local_data_guard_enabled,omitempty"`

	// (Updatable) Indicates whether the Autonomous Database requires mTLS connections.
	// +kubebuilder:validation:Optional
	IsMtlsConnectionRequired *bool `json:"isMtlsConnectionRequired,omitempty" tf:"is_mtls_connection_required,omitempty"`

	// If set to TRUE, indicates that an Autonomous Database preview version is being provisioned, and that the preview version's terms of service have been accepted. Note that preview version software is only available for databases on Autonomous Database Serverless.
	// +kubebuilder:validation:Optional
	IsPreviewVersionWithServiceTermsAccepted *bool `json:"isPreviewVersionWithServiceTermsAccepted,omitempty" tf:"is_preview_version_with_service_terms_accepted,omitempty"`

	// (Applicable when source=CLONE_TO_REFRESHABLE) (Updatable) True for creating a refreshable clone and False for detaching the clone from source Autonomous Database. Detaching is one time operation and clone becomes a regular Autonomous Database.
	// +kubebuilder:validation:Optional
	IsRefreshableClone *bool `json:"isRefreshableClone,omitempty" tf:"is_refreshable_clone,omitempty"`

	// If true, 7 days worth of backups are replicated across regions for Cross-Region ADB or Backup-Based DR between Primary and Standby. If false, the backups taken on the Primary are not replicated to the Standby database.
	// +kubebuilder:validation:Optional
	IsReplicateAutomaticBackups *bool `json:"isReplicateAutomaticBackups,omitempty" tf:"is_replicate_automatic_backups,omitempty"`

	// (Updatable) An optional property when enabled triggers the Shrinking of Autonomous Database once. To trigger Shrinking of ADB once again, this flag needs to be disabled and re-enabled again. It should not be passed during create database operation. It is only applicable on Serverless databases i.e. where is_dedicated is false.
	// +kubebuilder:validation:Optional
	IsShrinkOnly *bool `json:"isShrinkOnly,omitempty" tf:"is_shrink_only,omitempty"`

	// The OCID of the key container that is used as the master encryption key in database transparent data encryption (TDE) operations.
	// +kubebuilder:validation:Optional
	KMSKeyID *string `json:"kmsKeyId,omitempty" tf:"kms_key_id,omitempty"`

	// (Updatable) The Oracle license model that applies to the Oracle Autonomous Database. Bring your own license (BYOL) allows you to apply your current on-premises Oracle software licenses to equivalent, highly automated Oracle services in the cloud. License Included allows you to subscribe to new Oracle Database software licenses and the Oracle Database service. Note that when provisioning an Autonomous Database on dedicated Exadata infrastructure, this attribute must be null. It is already set at the Autonomous Exadata Infrastructure level. When provisioning an [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) database, if a value is not specified, the system defaults the value to BRING_YOUR_OWN_LICENSE. Bring your own license (BYOL) also allows you to select the DB edition using the optional parameter.
	// +kubebuilder:validation:Optional
	LicenseModel *string `json:"licenseModel,omitempty" tf:"license_model,omitempty"`

	// Parameter that allows users to select an acceptable maximum data loss limit in seconds, up to which Automatic Failover will be triggered when necessary for a Local Autonomous Data Guard
	// +kubebuilder:validation:Optional
	LocalAdgAutoFailoverMaxDataLossLimit *float64 `json:"localAdgAutoFailoverMaxDataLossLimit,omitempty" tf:"local_adg_auto_failover_max_data_loss_limit,omitempty"`

	// Details for the long-term backup schedule.
	// +kubebuilder:validation:Optional
	LongTermBackupSchedule []LongTermBackupScheduleParameters `json:"longTermBackupSchedule,omitempty" tf:"long_term_backup_schedule,omitempty"`

	// (Updatable) Deprecated. The number of Max OCPU cores to be made available to the autonomous database with auto scaling of cpu enabled.
	// +kubebuilder:validation:Optional
	MaxCPUCoreCount *float64 `json:"maxCpuCoreCount,omitempty" tf:"max_cpu_core_count,omitempty"`

	// The character set for the Autonomous Database.  The default is AL32UTF8. Use List Autonomous Database Character Sets to list the allowed values for an Autonomous Database Serverless. For an Autonomous Database on dedicated Exadata infrastructure, the allowed values are: AL16UTF16 or UTF8.
	// +kubebuilder:validation:Optional
	NcharacterSet *string `json:"ncharacterSet,omitempty" tf:"ncharacter_set,omitempty"`

	// (Updatable) The list of OCIDs for the network security groups (NSGs) to which this resource belongs. Setting this to an empty list removes all resources from all NSGs. For more information about NSGs, see Security Rules. NsgIds restrictions:
	// +kubebuilder:validation:Optional
	// +listType=set
	NsgIds []*string `json:"nsgIds,omitempty" tf:"nsg_ids,omitempty"`

	// (Updatable) The number of OCPU cores to be made available to the database.
	// +kubebuilder:validation:Optional
	OcpuCount *float64 `json:"ocpuCount,omitempty" tf:"ocpu_count,omitempty"`

	// Indicates the Autonomous Database mode. The database can be opened in READ_ONLY or READ_WRITE mode.
	// +kubebuilder:validation:Optional
	OpenMode *string `json:"openMode,omitempty" tf:"open_mode,omitempty"`

	// (Updatable) Status of Operations Insights for this Autonomous Database. Values supported are ENABLED and NOT_ENABLED
	// +kubebuilder:validation:Optional
	OperationsInsightsStatus *string `json:"operationsInsightsStatus,omitempty" tf:"operations_insights_status,omitempty"`

	// The Autonomous Database permission level. Restricted mode allows access only by admin users.
	// +kubebuilder:validation:Optional
	PermissionLevel *string `json:"permissionLevel,omitempty" tf:"permission_level,omitempty"`

	// The private endpoint Ip address for the resource.
	// +kubebuilder:validation:Optional
	PrivateEndpointIP *string `json:"privateEndpointIp,omitempty" tf:"private_endpoint_ip,omitempty"`

	// (Updatable)  (Updatable) The resource's private endpoint label.
	// +kubebuilder:validation:Optional
	PrivateEndpointLabel *string `json:"privateEndpointLabel,omitempty" tf:"private_endpoint_label,omitempty"`

	// (Applicable when source=CLONE_TO_REFRESHABLE) (Updatable) The refresh mode of the clone. AUTOMATIC indicates that the clone is automatically being refreshed with data from the source Autonomous Database.
	// +kubebuilder:validation:Optional
	RefreshableMode *string `json:"refreshableMode,omitempty" tf:"refreshable_mode,omitempty"`

	// Indicates the cross-region disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
	// +kubebuilder:validation:Optional
	RemoteDisasterRecoveryType *string `json:"remoteDisasterRecoveryType,omitempty" tf:"remote_disaster_recovery_type,omitempty"`

	// (Updatable) The unique identifier for leader autonomous database OCID OCID.
	// +kubebuilder:validation:Optional
	ResourcePoolLeaderID *string `json:"resourcePoolLeaderId,omitempty" tf:"resource_pool_leader_id,omitempty"`

	// (Updatable) The configuration details for resource pool
	// +kubebuilder:validation:Optional
	ResourcePoolSummary []ResourcePoolSummaryParameters `json:"resourcePoolSummary,omitempty" tf:"resource_pool_summary,omitempty"`

	// (Updatable) An optional property when flipped triggers rotation of KMS key. It is only applicable on dedicated databases i.e. where is_dedicated is true.
	// +kubebuilder:validation:Optional
	RotateKeyTrigger *bool `json:"rotateKeyTrigger,omitempty" tf:"rotate_key_trigger,omitempty"`

	// (Updatable) The list of scheduled operations. Consists of values such as dayOfWeek, scheduledStartTime, scheduledStopTime.
	// +kubebuilder:validation:Optional
	ScheduledOperations []ScheduledOperationsParameters `json:"scheduledOperations,omitempty" tf:"scheduled_operations,omitempty"`

	// (Updatable) The Oracle Cloud Infrastructure vault secret [/Content/General/Concepts/identifiers.htm]OCID.
	// +kubebuilder:validation:Optional
	SecretID *string `json:"secretId,omitempty" tf:"secret_id,omitempty"`

	// (Updatable) The version of the vault secret. If no version is specified, the latest version will be used.
	// +kubebuilder:validation:Optional
	SecretVersionNumber *float64 `json:"secretVersionNumber,omitempty" tf:"secret_version_number,omitempty"`

	// +kubebuilder:validation:Optional
	ShrinkAdbTrigger *float64 `json:"shrinkAdbTrigger,omitempty" tf:"shrink_adb_trigger,omitempty"`

	// The source of the database:
	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// The OCID of the source Autonomous Database that will be used to create a new standby database for the Data Guard association.
	// +kubebuilder:validation:Optional
	SourceID *string `json:"sourceId,omitempty" tf:"source_id,omitempty"`

	// (Updatable) The client IP access control list (ACL). This feature is available for [Autonomous Database Serverless] (https://docs.oracle.com/en/cloud/paas/autonomous-database/index.html) and on Exadata Cloud@Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance. If arePrimaryWhitelistedIpsUsed is 'TRUE' then Autonomous Database uses this primary's IP access control list (ACL) for the disaster recovery peer called standbywhitelistedips.
	// +kubebuilder:validation:Optional
	StandbyWhitelistedIps []*string `json:"standbyWhitelistedIps,omitempty" tf:"standby_whitelisted_ips,omitempty"`

	// The current state of the Autonomous Database.
	// +kubebuilder:validation:Optional
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// (Updatable) The OCID of the subnet the resource is associated with. This the only parameter to configure private endpoint, VCN details are obtained from the subnet_id.
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The OCID of the subscription with which resource needs to be associated with.
	// These subnets are used by the Oracle Clusterware private interconnect on the database instance. Specifying an overlapping subnet will cause the private interconnect to malfunction. This restriction applies to both the client subnet and the backup subnet.
	// +kubebuilder:validation:Optional
	SubscriptionID *string `json:"subscriptionId,omitempty" tf:"subscription_id,omitempty"`

	// It is applicable only when is_local_data_guard_enabled is true. Could be set to PRIMARY or STANDBY. Default value is PRIMARY.
	// +kubebuilder:validation:Optional
	SwitchoverTo *string `json:"switchoverTo,omitempty" tf:"switchover_to,omitempty"`

	// (Updatable) It is applicable only when dataguard_region_type and role are set, and is_dedicated is false. For Autonomous Database Serverless instances, Data Guard associations have designated primary and standby regions, and these region types do not change when the database changes roles. It takes the OCID of the remote peer to switchover to and the API is called from the remote region.
	// +kubebuilder:validation:Optional
	SwitchoverToRemotePeerID *string `json:"switchoverToRemotePeerId,omitempty" tf:"switchover_to_remote_peer_id,omitempty"`

	// The the date and time that auto-refreshing will begin for an Autonomous Database refreshable clone. This value controls only the start time for the first refresh operation. Subsequent (ongoing) refresh operations have start times controlled by the value of the autoRefreshFrequencyInSeconds parameter.
	// +kubebuilder:validation:Optional
	TimeOfAutoRefreshStart *string `json:"timeOfAutoRefreshStart,omitempty" tf:"time_of_auto_refresh_start,omitempty"`

	// (Applicable when source=BACKUP_FROM_TIMESTAMP) The timestamp specified for the point-in-time clone of the source Autonomous Database. The timestamp must be in the past.
	// +kubebuilder:validation:Optional
	Timestamp *string `json:"timestamp,omitempty" tf:"timestamp,omitempty"`

	// (Applicable when source=BACKUP_FROM_TIMESTAMP) Clone from latest available backup timestamp.
	// +kubebuilder:validation:Optional
	UseLatestAvailableBackupTimeStamp *bool `json:"useLatestAvailableBackupTimeStamp,omitempty" tf:"use_latest_available_backup_time_stamp,omitempty"`

	// The OCID of the Oracle Cloud Infrastructure vault.
	// +kubebuilder:validation:Optional
	VaultID *string `json:"vaultId,omitempty" tf:"vault_id,omitempty"`

	// (Updatable) The client IP access control list (ACL). This feature is available for autonomous databases on shared Exadata infrastructure and on Exadata Cloud@Customer. Only clients connecting from an IP address included in the ACL may access the Autonomous Database instance.
	// +kubebuilder:validation:Optional
	// +listType=set
	WhitelistedIps []*string `json:"whitelistedIps,omitempty" tf:"whitelisted_ips,omitempty"`
}

type BackupConfigInitParameters struct {
}

type BackupConfigObservation struct {

	// Name of Object Storage bucket to use for storing manual backups.
	ManualBackupBucketName *string `json:"manualBackupBucketName,omitempty" tf:"manual_backup_bucket_name,omitempty"`

	// The manual backup destination type.
	ManualBackupType *string `json:"manualBackupType,omitempty" tf:"manual_backup_type,omitempty"`
}

type BackupConfigParameters struct {
}

type ConnectionStringsInitParameters struct {
}

type ConnectionStringsObservation struct {

	// Returns all connection strings that can be used to connect to the Autonomous Database. For more information, please see Predefined Database Service Names for Autonomous Transaction Processing
	// +mapType=granular
	AllConnectionStrings map[string]*string `json:"allConnectionStrings,omitempty" tf:"all_connection_strings,omitempty"`

	// The database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
	Dedicated *string `json:"dedicated,omitempty" tf:"dedicated,omitempty"`

	// The High database service provides the highest level of resources to each SQL statement resulting in the highest performance, but supports the fewest number of concurrent SQL statements.
	High *string `json:"high,omitempty" tf:"high,omitempty"`

	// The Low database service provides the least level of resources to each SQL statement, but supports the most number of concurrent SQL statements.
	Low *string `json:"low,omitempty" tf:"low,omitempty"`

	// The Medium database service provides a lower level of resources to each SQL statement potentially resulting a lower level of performance, but supports more concurrent SQL statements.
	Medium *string `json:"medium,omitempty" tf:"medium,omitempty"`

	// A list of connection string profiles to allow clients to group, filter and select connection string values based on structured metadata.
	Profiles []ProfilesObservation `json:"profiles,omitempty" tf:"profiles,omitempty"`
}

type ConnectionStringsParameters struct {
}

type ConnectionUrlsInitParameters struct {
}

type ConnectionUrlsObservation struct {

	// Oracle Application Express (APEX) URL.
	ApexURL *string `json:"apexUrl,omitempty" tf:"apex_url,omitempty"`

	// The URL of the Database Transforms for the Autonomous Database.
	DatabaseTransformsURL *string `json:"databaseTransformsUrl,omitempty" tf:"database_transforms_url,omitempty"`

	// The URL of the Graph Studio for the Autonomous Database.
	GraphStudioURL *string `json:"graphStudioUrl,omitempty" tf:"graph_studio_url,omitempty"`

	// The URL of the Oracle Machine Learning (OML) Notebook for the Autonomous Database.
	MachineLearningNotebookURL *string `json:"machineLearningNotebookUrl,omitempty" tf:"machine_learning_notebook_url,omitempty"`

	// Oracle Machine Learning user management URL.
	MachineLearningUserManagementURL *string `json:"machineLearningUserManagementUrl,omitempty" tf:"machine_learning_user_management_url,omitempty"`

	// The URL of the MongoDB API for the Autonomous Database.
	MongoDBURL *string `json:"mongoDbUrl,omitempty" tf:"mongo_db_url,omitempty"`

	// The Oracle REST Data Services (ORDS) URL of the Web Access for the Autonomous Database.
	OrdsURL *string `json:"ordsUrl,omitempty" tf:"ords_url,omitempty"`

	// Oracle SQL Developer Web URL.
	SQLDevWebURL *string `json:"sqlDevWebUrl,omitempty" tf:"sql_dev_web_url,omitempty"`
}

type ConnectionUrlsParameters struct {
}

type CustomerContactsInitParameters struct {

	// (Updatable) The email address used by Oracle to send notifications regarding databases and infrastructure.
	Email *string `json:"email,omitempty" tf:"email,omitempty"`
}

type CustomerContactsObservation struct {

	// (Updatable) The email address used by Oracle to send notifications regarding databases and infrastructure.
	Email *string `json:"email,omitempty" tf:"email,omitempty"`
}

type CustomerContactsParameters struct {

	// (Updatable) The email address used by Oracle to send notifications regarding databases and infrastructure.
	// +kubebuilder:validation:Optional
	Email *string `json:"email,omitempty" tf:"email,omitempty"`
}

type DBToolsDetailsInitParameters struct {

	// (Updatable) The compute amount available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure. For an Autonomous Database Serverless instance, the 'ECPU' compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the computeModel parameter. When using cpuCoreCount parameter, it is an error to specify computeCount to a non-null value. Providing computeModel and computeCount is the preferred method for both OCPU and ECPU.
	ComputeCount *float64 `json:"computeCount,omitempty" tf:"compute_count,omitempty"`

	// (Updatable) Indicates whether tool is enabled.
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled,omitempty"`

	// (Updatable) The max idle time, in minutes, after which the VM used by database tools will be terminated.
	MaxIdleTimeInMinutes *float64 `json:"maxIdleTimeInMinutes,omitempty" tf:"max_idle_time_in_minutes,omitempty"`

	// (Updatable) Name of database tool.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type DBToolsDetailsObservation struct {

	// (Updatable) The compute amount available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure. For an Autonomous Database Serverless instance, the 'ECPU' compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the computeModel parameter. When using cpuCoreCount parameter, it is an error to specify computeCount to a non-null value. Providing computeModel and computeCount is the preferred method for both OCPU and ECPU.
	ComputeCount *float64 `json:"computeCount,omitempty" tf:"compute_count,omitempty"`

	// (Updatable) Indicates whether tool is enabled.
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled,omitempty"`

	// (Updatable) The max idle time, in minutes, after which the VM used by database tools will be terminated.
	MaxIdleTimeInMinutes *float64 `json:"maxIdleTimeInMinutes,omitempty" tf:"max_idle_time_in_minutes,omitempty"`

	// (Updatable) Name of database tool.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type DBToolsDetailsParameters struct {

	// (Updatable) The compute amount available to the database. Minimum and maximum values depend on the compute model and whether the database is an Autonomous Database Serverless instance or an Autonomous Database on Dedicated Exadata Infrastructure. For an Autonomous Database Serverless instance, the 'ECPU' compute model requires a minimum value of one, for databases in the elastic resource pool and minimum value of two, otherwise. Required when using the computeModel parameter. When using cpuCoreCount parameter, it is an error to specify computeCount to a non-null value. Providing computeModel and computeCount is the preferred method for both OCPU and ECPU.
	// +kubebuilder:validation:Optional
	ComputeCount *float64 `json:"computeCount,omitempty" tf:"compute_count,omitempty"`

	// (Updatable) Indicates whether tool is enabled.
	// +kubebuilder:validation:Optional
	IsEnabled *bool `json:"isEnabled,omitempty" tf:"is_enabled,omitempty"`

	// (Updatable) The max idle time, in minutes, after which the VM used by database tools will be terminated.
	// +kubebuilder:validation:Optional
	MaxIdleTimeInMinutes *float64 `json:"maxIdleTimeInMinutes,omitempty" tf:"max_idle_time_in_minutes,omitempty"`

	// (Updatable) Name of database tool.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type DayOfWeekInitParameters struct {

	// (Updatable) Name of database tool.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type DayOfWeekObservation struct {

	// (Updatable) Name of database tool.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type DayOfWeekParameters struct {

	// (Updatable) Name of database tool.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`
}

type KeyHistoryEntryInitParameters struct {
}

type KeyHistoryEntryObservation struct {

	// The OCID of the Autonomous Database.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The OCID of the key container version that is used in database transparent data encryption (TDE) operations KMS Key can have multiple key versions. If none is specified, the current key version (latest) of the Key Id is used for the operation. Autonomous Database Serverless does not use key versions, hence is not applicable for Autonomous Database Serverless instances.
	KMSKeyVersionID *string `json:"kmsKeyVersionId,omitempty" tf:"kms_key_version_id,omitempty"`

	// The date and time the kms key activated.
	TimeActivated *string `json:"timeActivated,omitempty" tf:"time_activated,omitempty"`

	// The OCID of the Oracle Cloud Infrastructure vault.
	VaultID *string `json:"vaultId,omitempty" tf:"vault_id,omitempty"`
}

type KeyHistoryEntryParameters struct {
}

type LocalStandbyDBInitParameters struct {
}

type LocalStandbyDBObservation struct {

	// The availability domain where the Autonomous Database Serverless instance is located.
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain,omitempty"`

	// The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
	LagTimeInSeconds *float64 `json:"lagTimeInSeconds,omitempty" tf:"lag_time_in_seconds,omitempty"`

	// Information about the current lifecycle state.
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details,omitempty"`

	// The current state of the Autonomous Database.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The date and time the Autonomous Data Guard role was switched for the standby Autonomous Database.
	TimeDataGuardRoleChanged *string `json:"timeDataGuardRoleChanged,omitempty" tf:"time_data_guard_role_changed,omitempty"`

	// The date and time the Disaster Recovery role was switched for the standby Autonomous Database.
	TimeDisasterRecoveryRoleChanged *string `json:"timeDisasterRecoveryRoleChanged,omitempty" tf:"time_disaster_recovery_role_changed,omitempty"`
}

type LocalStandbyDBParameters struct {
}

type LongTermBackupScheduleInitParameters struct {

	// (Updatable) Indicates if the resource pool should be deleted for the Autonomous Database.
	IsDisabled *bool `json:"isDisabled,omitempty" tf:"is_disabled,omitempty"`

	// The frequency of the long-term backup schedule
	RepeatCadence *string `json:"repeatCadence,omitempty" tf:"repeat_cadence,omitempty"`

	// Retention period, in days, for long-term backups
	RetentionPeriodInDays *float64 `json:"retentionPeriodInDays,omitempty" tf:"retention_period_in_days,omitempty"`

	// The timestamp for the long-term backup schedule. For a MONTHLY cadence, months having fewer days than the provided date will have the backup taken on the last day of that month.
	TimeOfBackup *string `json:"timeOfBackup,omitempty" tf:"time_of_backup,omitempty"`
}

type LongTermBackupScheduleObservation struct {

	// (Updatable) Indicates if the resource pool should be deleted for the Autonomous Database.
	IsDisabled *bool `json:"isDisabled,omitempty" tf:"is_disabled,omitempty"`

	// The frequency of the long-term backup schedule
	RepeatCadence *string `json:"repeatCadence,omitempty" tf:"repeat_cadence,omitempty"`

	// Retention period, in days, for long-term backups
	RetentionPeriodInDays *float64 `json:"retentionPeriodInDays,omitempty" tf:"retention_period_in_days,omitempty"`

	// The timestamp for the long-term backup schedule. For a MONTHLY cadence, months having fewer days than the provided date will have the backup taken on the last day of that month.
	TimeOfBackup *string `json:"timeOfBackup,omitempty" tf:"time_of_backup,omitempty"`
}

type LongTermBackupScheduleParameters struct {

	// (Updatable) Indicates if the resource pool should be deleted for the Autonomous Database.
	// +kubebuilder:validation:Optional
	IsDisabled *bool `json:"isDisabled,omitempty" tf:"is_disabled,omitempty"`

	// The frequency of the long-term backup schedule
	// +kubebuilder:validation:Optional
	RepeatCadence *string `json:"repeatCadence,omitempty" tf:"repeat_cadence,omitempty"`

	// Retention period, in days, for long-term backups
	// +kubebuilder:validation:Optional
	RetentionPeriodInDays *float64 `json:"retentionPeriodInDays,omitempty" tf:"retention_period_in_days,omitempty"`

	// The timestamp for the long-term backup schedule. For a MONTHLY cadence, months having fewer days than the provided date will have the backup taken on the last day of that month.
	// +kubebuilder:validation:Optional
	TimeOfBackup *string `json:"timeOfBackup,omitempty" tf:"time_of_backup,omitempty"`
}

type ProfilesInitParameters struct {
}

type ProfilesObservation struct {

	// Consumer group used by the connection.
	ConsumerGroup *string `json:"consumerGroup,omitempty" tf:"consumer_group,omitempty"`

	// (Updatable) The user-friendly name for the Autonomous Database. The name does not have to be unique.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Host format used in connection string.
	HostFormat *string `json:"hostFormat,omitempty" tf:"host_format,omitempty"`

	// True for a regional connection string, applicable to cross-region DG only.
	IsRegional *bool `json:"isRegional,omitempty" tf:"is_regional,omitempty"`

	// Protocol used by the connection.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies whether the listener performs a direct hand-off of the session, or redirects the session. In RAC deployments where SCAN is used, sessions are redirected to a Node VIP. Use DIRECT for direct hand-offs. Use REDIRECT to redirect the session.
	SessionMode *string `json:"sessionMode,omitempty" tf:"session_mode,omitempty"`

	// Specifies whether the connection string is using the long (LONG), Easy Connect (EZCONNECT), or Easy Connect Plus (EZCONNECTPLUS) format. Autonomous Database Serverless instances always use the long format.
	SyntaxFormat *string `json:"syntaxFormat,omitempty" tf:"syntax_format,omitempty"`

	// Specifies whether the TLS handshake is using one-way (SERVER) or mutual (MUTUAL) authentication.
	TLSAuthentication *string `json:"tlsAuthentication,omitempty" tf:"tls_authentication,omitempty"`

	// Connection string value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ProfilesParameters struct {
}

type PublicConnectionUrlsInitParameters struct {
}

type PublicConnectionUrlsObservation struct {

	// Oracle Application Express (APEX) URL.
	ApexURL *string `json:"apexUrl,omitempty" tf:"apex_url,omitempty"`

	// The URL of the Database Transforms for the Autonomous Database.
	DatabaseTransformsURL *string `json:"databaseTransformsUrl,omitempty" tf:"database_transforms_url,omitempty"`

	// The URL of the Graph Studio for the Autonomous Database.
	GraphStudioURL *string `json:"graphStudioUrl,omitempty" tf:"graph_studio_url,omitempty"`

	// The URL of the Oracle Machine Learning (OML) Notebook for the Autonomous Database.
	MachineLearningNotebookURL *string `json:"machineLearningNotebookUrl,omitempty" tf:"machine_learning_notebook_url,omitempty"`

	// Oracle Machine Learning user management URL.
	MachineLearningUserManagementURL *string `json:"machineLearningUserManagementUrl,omitempty" tf:"machine_learning_user_management_url,omitempty"`

	// The URL of the MongoDB API for the Autonomous Database.
	MongoDBURL *string `json:"mongoDbUrl,omitempty" tf:"mongo_db_url,omitempty"`

	// The Oracle REST Data Services (ORDS) URL of the Web Access for the Autonomous Database.
	OrdsURL *string `json:"ordsUrl,omitempty" tf:"ords_url,omitempty"`

	// Oracle SQL Developer Web URL.
	SQLDevWebURL *string `json:"sqlDevWebUrl,omitempty" tf:"sql_dev_web_url,omitempty"`
}

type PublicConnectionUrlsParameters struct {
}

type RemoteDisasterRecoveryConfigurationInitParameters struct {
}

type RemoteDisasterRecoveryConfigurationObservation struct {

	// Indicates the disaster recovery (DR) type of the standby Autonomous Database Serverless instance. Autonomous Data Guard (ADG) DR type provides business critical DR with a faster recovery time objective (RTO) during failover or switchover. Backup-based DR type provides lower cost DR with a slower RTO during failover or switchover.
	DisasterRecoveryType *string `json:"disasterRecoveryType,omitempty" tf:"disaster_recovery_type,omitempty"`

	// If true, 7 days worth of backups are replicated across regions for Cross-Region ADB or Backup-Based DR between Primary and Standby. If false, the backups taken on the Primary are not replicated to the Standby database.
	IsReplicateAutomaticBackups *bool `json:"isReplicateAutomaticBackups,omitempty" tf:"is_replicate_automatic_backups,omitempty"`

	// Indicates if user wants to convert to a snapshot standby. For example, true would set a standby database to snapshot standby database. False would set a snapshot standby database back to regular standby database.
	IsSnapshotStandby *bool `json:"isSnapshotStandby,omitempty" tf:"is_snapshot_standby,omitempty"`

	// Time and date stored as an RFC 3339 formatted timestamp string. For example, 2022-01-01T12:00:00.000Z would set a limit for the snapshot standby to be converted back to a cross-region standby database.
	TimeSnapshotStandbyEnabledTill *string `json:"timeSnapshotStandbyEnabledTill,omitempty" tf:"time_snapshot_standby_enabled_till,omitempty"`
}

type RemoteDisasterRecoveryConfigurationParameters struct {
}

type ResourcePoolSummaryInitParameters struct {

	// (Updatable) Indicates if the resource pool should be deleted for the Autonomous Database.
	IsDisabled *bool `json:"isDisabled,omitempty" tf:"is_disabled,omitempty"`

	// (Updatable) Resource pool size.
	PoolSize *float64 `json:"poolSize,omitempty" tf:"pool_size,omitempty"`
}

type ResourcePoolSummaryObservation struct {

	// (Updatable) Indicates if the resource pool should be deleted for the Autonomous Database.
	IsDisabled *bool `json:"isDisabled,omitempty" tf:"is_disabled,omitempty"`

	// (Updatable) Resource pool size.
	PoolSize *float64 `json:"poolSize,omitempty" tf:"pool_size,omitempty"`
}

type ResourcePoolSummaryParameters struct {

	// (Updatable) Indicates if the resource pool should be deleted for the Autonomous Database.
	// +kubebuilder:validation:Optional
	IsDisabled *bool `json:"isDisabled,omitempty" tf:"is_disabled,omitempty"`

	// (Updatable) Resource pool size.
	// +kubebuilder:validation:Optional
	PoolSize *float64 `json:"poolSize,omitempty" tf:"pool_size,omitempty"`
}

type ScheduledOperationsInitParameters struct {

	// (Updatable) Day of the week.
	DayOfWeek []DayOfWeekInitParameters `json:"dayOfWeek,omitempty" tf:"day_of_week,omitempty"`

	// (Updatable) auto start time. value must be of ISO-8601 format "HH:mm"
	ScheduledStartTime *string `json:"scheduledStartTime,omitempty" tf:"scheduled_start_time,omitempty"`

	// (Updatable) auto stop time. value must be of ISO-8601 format "HH:mm"
	ScheduledStopTime *string `json:"scheduledStopTime,omitempty" tf:"scheduled_stop_time,omitempty"`
}

type ScheduledOperationsObservation struct {

	// (Updatable) Day of the week.
	DayOfWeek []DayOfWeekObservation `json:"dayOfWeek,omitempty" tf:"day_of_week,omitempty"`

	// (Updatable) auto start time. value must be of ISO-8601 format "HH:mm"
	ScheduledStartTime *string `json:"scheduledStartTime,omitempty" tf:"scheduled_start_time,omitempty"`

	// (Updatable) auto stop time. value must be of ISO-8601 format "HH:mm"
	ScheduledStopTime *string `json:"scheduledStopTime,omitempty" tf:"scheduled_stop_time,omitempty"`
}

type ScheduledOperationsParameters struct {

	// (Updatable) Day of the week.
	// +kubebuilder:validation:Optional
	DayOfWeek []DayOfWeekParameters `json:"dayOfWeek" tf:"day_of_week,omitempty"`

	// (Updatable) auto start time. value must be of ISO-8601 format "HH:mm"
	// +kubebuilder:validation:Optional
	ScheduledStartTime *string `json:"scheduledStartTime,omitempty" tf:"scheduled_start_time,omitempty"`

	// (Updatable) auto stop time. value must be of ISO-8601 format "HH:mm"
	// +kubebuilder:validation:Optional
	ScheduledStopTime *string `json:"scheduledStopTime,omitempty" tf:"scheduled_stop_time,omitempty"`
}

type StandbyDBInitParameters struct {
}

type StandbyDBObservation struct {

	// The availability domain where the Autonomous Database Serverless instance is located.
	AvailabilityDomain *string `json:"availabilityDomain,omitempty" tf:"availability_domain,omitempty"`

	// The amount of time, in seconds, that the data of the standby database lags the data of the primary database. Can be used to determine the potential data loss in the event of a failover.
	LagTimeInSeconds *float64 `json:"lagTimeInSeconds,omitempty" tf:"lag_time_in_seconds,omitempty"`

	// Information about the current lifecycle state.
	LifecycleDetails *string `json:"lifecycleDetails,omitempty" tf:"lifecycle_details,omitempty"`

	// The current state of the Autonomous Database.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The date and time the Autonomous Data Guard role was switched for the standby Autonomous Database.
	TimeDataGuardRoleChanged *string `json:"timeDataGuardRoleChanged,omitempty" tf:"time_data_guard_role_changed,omitempty"`

	// The date and time the Disaster Recovery role was switched for the standby Autonomous Database.
	TimeDisasterRecoveryRoleChanged *string `json:"timeDisasterRecoveryRoleChanged,omitempty" tf:"time_disaster_recovery_role_changed,omitempty"`
}

type StandbyDBParameters struct {
}

// AutonomousDatabaseSpec defines the desired state of AutonomousDatabase
type AutonomousDatabaseSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     AutonomousDatabaseParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider AutonomousDatabaseInitParameters `json:"initProvider,omitempty"`
}

// AutonomousDatabaseStatus defines the observed state of AutonomousDatabase.
type AutonomousDatabaseStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        AutonomousDatabaseObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// AutonomousDatabase is the Schema for the AutonomousDatabases API. Provides the Autonomous Database resource in Oracle Cloud Infrastructure Database service
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,provider-oci}
type AutonomousDatabase struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.compartmentId) || (has(self.initProvider) && has(self.initProvider.compartmentId))",message="spec.forProvider.compartmentId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.dbName) || (has(self.initProvider) && has(self.initProvider.dbName))",message="spec.forProvider.dbName is a required parameter"
	Spec   AutonomousDatabaseSpec   `json:"spec"`
	Status AutonomousDatabaseStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// AutonomousDatabaseList contains a list of AutonomousDatabases
type AutonomousDatabaseList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []AutonomousDatabase `json:"items"`
}

// Repository type metadata.
var (
	AutonomousDatabase_Kind             = "AutonomousDatabase"
	AutonomousDatabase_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: AutonomousDatabase_Kind}.String()
	AutonomousDatabase_KindAPIVersion   = AutonomousDatabase_Kind + "." + CRDGroupVersion.String()
	AutonomousDatabase_GroupVersionKind = CRDGroupVersion.WithKind(AutonomousDatabase_Kind)
)

func init() {
	SchemeBuilder.Register(&AutonomousDatabase{}, &AutonomousDatabaseList{})
}
